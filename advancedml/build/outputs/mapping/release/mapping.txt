# compiler: R8
# compiler_version: 8.2.24
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.2"}
# pg_map_id: 2a8b1b1
# pg_map_hash: SHA-256 2a8b1b1bee10296801a72d4a5c1bfa868a832e97efa4041c6f8153426220eda3
com.kotlinnlp.simplednn.core.arrays.ActivableArray -> com.kotlinnlp.simplednn.core.arrays.ActivableArray:
# {"id":"sourceFile","fileName":"ActivableArray.kt"}
    int size -> a
    com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction activationFunction -> b
    com.kotlinnlp.simplednn.simplemath.ndarray.NDArray _valuesNotActivated -> c
    1:1:int getSize():20:20 -> <init>
    1:1:void <init>(int):20 -> <init>
    1:9:void activate():121:129 -> activate
    1:6:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):77:82 -> assignValues
    7:7:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):77:77 -> assignValues
    1:8:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValuesByProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):97:104 -> assignValuesByProd
    9:9:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValuesByProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):97:97 -> assignValuesByProd
    1:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateActivationDeriv():147:149 -> calculateActivationDeriv
    1:11:com.kotlinnlp.simplednn.core.arrays.ActivableArray clone():158:168 -> clone
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getActivatedValues():137:137 -> getActivatedValues
    1:1:void setActivationFunction(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):59:59 -> getActivationFunction
    1:1:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getActivationFunction():59 -> getActivationFunction
    1:1:boolean getHasActivation():64:64 -> getHasActivation
    1:1:int getSize():20:20 -> getSize
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getValues():44:44 -> getValues
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getValuesNotActivated():54:54 -> getValuesNotActivated
    1:1:void set_values(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):49:49 -> get_values
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray get_values():49 -> get_values
    1:1:void set_valuesNotActivated(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):69:69 -> get_valuesNotActivated
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray get_valuesNotActivated():69 -> get_valuesNotActivated
    1:1:void setActivation(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):113:113 -> setActivation
    1:1:void setActivationFunction(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):59:59 -> setActivationFunction
    1:1:void set_values(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):49:49 -> set_values
    1:1:void set_valuesNotActivated(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):69:69 -> set_valuesNotActivated
com.kotlinnlp.simplednn.core.arrays.ActivableArray$Companion -> com.kotlinnlp.simplednn.core.arrays.ActivableArray$Companion:
# {"id":"sourceFile","fileName":"ActivableArray.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():22:22 -> <init>
    1:3:com.kotlinnlp.simplednn.core.arrays.ActivableArray invoke(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):33:35 -> invoke
com.kotlinnlp.simplednn.core.arrays.AugmentedArray -> com.kotlinnlp.simplednn.core.arrays.AugmentedArray:
# {"id":"sourceFile","fileName":"AugmentedArray.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray _errors -> d
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray _relevance -> e
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray _recurrentRelevance -> f
    1:1:com.kotlinnlp.simplednn.core.arrays.ActivableArray clone():20:20 -> <init>
    1:1:void <init>(int):20 -> <init>
    1:12:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):126:137 -> assignErrors
    13:19:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):134:140 -> assignErrors
    20:20:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):126:126 -> assignErrors
    1:6:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrorsByDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):216:221 -> assignErrorsByDot
    1:6:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrorsByDotT(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):236:241 -> assignErrorsByDotT
    1:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrorsByProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):172:179 -> assignErrorsByProd
    9:9:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrorsByProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):172:172 -> assignErrorsByProd
    10:17:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrorsByProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,float):194:201 -> assignErrorsByProd
    18:18:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrorsByProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,float):194:194 -> assignErrorsByProd
    1:2:void assignParamsGradients(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):112:113 -> assignParamsGradients
    1:6:void assignRecurrentRelevance(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):268:273 -> assignRecurrentRelevance
    7:7:void assignRecurrentRelevance(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):268:268 -> assignRecurrentRelevance
    1:6:void assignRelevance(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):252:257 -> assignRelevance
    7:7:void assignRelevance(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):252:252 -> assignRelevance
    1:3:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):284:286 -> assignValues
    1:6:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignZeroErrors():152:157 -> assignZeroErrors
    1:1:com.kotlinnlp.simplednn.core.arrays.ActivableArray clone():20:20 -> clone
    2:19:com.kotlinnlp.simplednn.core.arrays.AugmentedArray clone():296:313 -> clone
    1:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):94:96 -> forward
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getErrors():54:54 -> getErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRecurrentRelevance():74:74 -> getRecurrentRelevance
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRelevance():64:64 -> getRelevance
com.kotlinnlp.simplednn.core.arrays.AugmentedArray$Companion -> com.kotlinnlp.simplednn.core.arrays.AugmentedArray$Companion:
# {"id":"sourceFile","fileName":"AugmentedArray.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():25:25 -> <init>
    1:3:com.kotlinnlp.simplednn.core.arrays.AugmentedArray invoke(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):36:38 -> invoke
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray zeros(int):48:48 -> zeros
com.kotlinnlp.simplednn.core.arrays.AugmentedArrayExtensionsKt -> com.kotlinnlp.simplednn.core.arrays.AugmentedArrayExtensionsKt:
# {"id":"sourceFile","fileName":"AugmentedArrayExtensions.kt"}
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21:21 -> getInputErrors
    1:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):32:35 -> getInputRelevance
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):32:32 -> getInputRelevance
com.kotlinnlp.simplednn.core.arrays.DistributionArray -> com.kotlinnlp.simplednn.core.arrays.DistributionArray:
# {"id":"sourceFile","fileName":"DistributionArray.kt"}
    1:1:com.kotlinnlp.simplednn.core.arrays.Norm1Array clone():20:20 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):20 -> <init>
    2:28:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):58:84 -> <init>
    29:30:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):58:58 -> <init>
    31:32:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):59:60 -> <init>
    33:33:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):60:60 -> <init>
    34:34:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):59:59 -> <init>
    1:20:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):69:88 -> assignValues
    21:22:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):69:69 -> assignValues
    23:25:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):70:72 -> assignValues
    26:26:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):70:70 -> assignValues
    1:1:com.kotlinnlp.simplednn.core.arrays.Norm1Array clone():20:20 -> clone
    2:2:com.kotlinnlp.simplednn.core.arrays.DistributionArray clone():80:80 -> clone
com.kotlinnlp.simplednn.core.arrays.DistributionArray$Companion -> com.kotlinnlp.simplednn.core.arrays.DistributionArray$Companion:
# {"id":"sourceFile","fileName":"DistributionArray.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():22:22 -> <init>
    1:3:com.kotlinnlp.simplednn.core.arrays.DistributionArray oneHot(int,int):51:53 -> oneHot
    4:4:com.kotlinnlp.simplednn.core.arrays.DistributionArray oneHot(int,int):49:49 -> oneHot
    1:3:com.kotlinnlp.simplednn.core.arrays.DistributionArray uniform(int):34:36 -> uniform
com.kotlinnlp.simplednn.core.arrays.Norm1Array -> com.kotlinnlp.simplednn.core.arrays.Norm1Array:
# {"id":"sourceFile","fileName":"Norm1Array.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.NDArray values -> a
    int length -> b
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getValues():18:18 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):18 -> <init>
    2:3:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21:22 -> <init>
    4:4:int getLength():28:28 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):28 -> <init>
    5:5:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):22:22 -> <init>
    6:6:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21:21 -> <init>
    1:3:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):36:38 -> assignValues
    4:4:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):36:36 -> assignValues
    1:1:com.kotlinnlp.simplednn.core.arrays.Norm1Array clone():46:46 -> clone
    1:1:int getLength():28:28 -> getLength
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getValues():18:18 -> getValues
com.kotlinnlp.simplednn.core.arrays.ParamsArray -> com.kotlinnlp.simplednn.core.arrays.ParamsArray:
# {"id":"sourceFile","fileName":"ParamsArray.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray values -> a
    com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType defaultErrorsType -> b
    java.lang.String uuid -> c
    com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure updaterSupportStructure -> d
    kotlinx.serialization.KSerializer[] $childSerializers -> e
    1:1:void <clinit>():41:41 -> <clinit>
    1:1:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():35:35 -> <init>
    1:1:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):35 -> <init>
    2:2:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):38:38 -> <init>
    3:3:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():35:35 -> <init>
    3:3:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):35 -> <init>
    4:4:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):178:178 -> <init>
    5:6:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():35:35 -> <init>
    5:6:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):35 -> <init>
    7:7:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():35:35 -> <init>
    7:7:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):35 -> <init>
    8:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getValues():37:37 -> <init>
    8:8:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):37 -> <init>
    9:9:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):38:38 -> <init>
    9:9:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):38 -> <init>
    149:149:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):178:178 -> <init>
    149:149:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):178 -> <init>
    150:150:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):38:38 -> <init>
    150:150:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):38 -> <init>
    151:151:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):36:36 -> <init>
    152:152:void <init>(float[],com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):59:59 -> <init>
    153:153:void <init>(float[],com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):58:58 -> <init>
    154:154:void <init>(float[],com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):60:60 -> <init>
    155:155:void <init>(float[],com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):59:59 -> <init>
    155:155:void <init>(float[],com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):59 -> <init>
    156:156:void <init>(java.util.List,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):73:73 -> <init>
    157:157:void <init>(java.util.List,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):72:72 -> <init>
    158:158:void <init>(java.util.List,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):74:74 -> <init>
    159:159:void <init>(java.util.List,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):73:73 -> <init>
    159:159:void <init>(java.util.List,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):73 -> <init>
    160:160:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):91:91 -> <init>
    161:161:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):88:88 -> <init>
    162:162:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):92:92 -> <init>
    163:163:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):91:91 -> <init>
    163:163:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):91 -> <init>
    164:164:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):107:107 -> <init>
    165:165:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):105:105 -> <init>
    166:166:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):108:108 -> <init>
    167:167:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):107:107 -> <init>
    167:167:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):107 -> <init>
    168:168:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):123:123 -> <init>
    169:169:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):121:121 -> <init>
    170:170:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):124:124 -> <init>
    171:171:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker):123:123 -> <init>
    171:171:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType):123 -> <init>
    1:1:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():35:35 -> access$get$childSerializers$cp
    1:3:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors buildDefaultErrors():242:244 -> buildDefaultErrors
    4:4:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors buildDefaultErrors():243:243 -> buildDefaultErrors
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors buildDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):222:222 -> buildDenseErrors
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors buildDenseErrors$default(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,java.lang.Object):221:221 -> buildDenseErrors$default
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors buildSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):232:232 -> buildSparseErrors
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors buildSparseErrors$default(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int,java.lang.Object):231:231 -> buildSparseErrors$default
    1:1:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):183:183 -> getUpdaterSupportStructure
    1:1:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getUpdaterSupportStructure():183 -> getUpdaterSupportStructure
    1:1:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):178:178 -> getUuid
    1:1:java.lang.String getUuid():178 -> getUuid
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getValues():37:37 -> getValues
    1:1:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):183:183 -> setUpdaterSupportStructure
    1:1:void setUpdaterSupportStructure(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):183 -> setUpdaterSupportStructure
    1:1:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():35:35 -> write$Self
    1:1:void write$Self(com.kotlinnlp.simplednn.core.arrays.ParamsArray,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):35 -> write$Self
    2:2:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):38:38 -> write$Self
    2:2:void write$Self(com.kotlinnlp.simplednn.core.arrays.ParamsArray,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):38 -> write$Self
    3:4:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():35:35 -> write$Self
    3:4:void write$Self(com.kotlinnlp.simplednn.core.arrays.ParamsArray,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):35 -> write$Self
    5:5:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker):178:178 -> write$Self
    5:5:void write$Self(com.kotlinnlp.simplednn.core.arrays.ParamsArray,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):178 -> write$Self
    6:7:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():35:35 -> write$Self
    6:7:void write$Self(com.kotlinnlp.simplednn.core.arrays.ParamsArray,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):35 -> write$Self
com.kotlinnlp.simplednn.core.arrays.ParamsArray$$serializer -> com.kotlinnlp.simplednn.core.arrays.ParamsArray$$serializer:
# {"id":"sourceFile","fileName":"ParamsArray.kt"}
    kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor -> a
    1:1:void <clinit>():35:35 -> <clinit>
    1:1:void <init>():35:35 -> <init>
    1:1:kotlinx.serialization.KSerializer[] childSerializers():35:35 -> childSerializers
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray deserialize(kotlinx.serialization.encoding.Decoder):35:35 -> deserialize
    2:2:java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder):35:35 -> deserialize
    1:1:kotlinx.serialization.descriptors.SerialDescriptor getDescriptor():35:35 -> getDescriptor
    1:1:void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.core.arrays.ParamsArray):35:35 -> serialize
    2:2:void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object):35:35 -> serialize
    1:1:kotlinx.serialization.KSerializer[] typeParametersSerializers():35:35 -> typeParametersSerializers
com.kotlinnlp.simplednn.core.arrays.ParamsArray$Companion -> com.kotlinnlp.simplednn.core.arrays.ParamsArray$Companion:
# {"id":"sourceFile","fileName":"ParamsArray.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():41:41 -> <init>
    1:1:kotlinx.serialization.KSerializer serializer():41:41 -> serializer
com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors -> com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors:
# {"id":"sourceFile","fileName":"ParamsArray.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.NDArray values -> a
    com.kotlinnlp.simplednn.core.arrays.ParamsArray refParams -> b
    com.kotlinnlp.simplednn.core.arrays.ParamsArray this$0 -> c
    1:8:void <init>(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):138:145 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors copy():150:150 -> copy
    1:3:boolean equals(java.lang.Object):167:169 -> equals
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getRefParams():145:145 -> getRefParams
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getValues():138:138 -> getValues
    1:1:int hashCode():155:155 -> hashCode
com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType -> com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType:
# {"id":"sourceFile","fileName":"ParamsArray.kt"}
    com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType[] $VALUES -> a
    kotlin.enums.EnumEntries $ENTRIES -> b
    1:1:void <clinit>():131:131 -> <clinit>
    2:2:com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType[] $values():0:0 -> <clinit>
    2:2:void <clinit>():131 -> <clinit>
    3:3:void <clinit>():131:131 -> <clinit>
    1:1:void <init>(java.lang.String,int):131:131 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;)V"}
com.kotlinnlp.simplednn.core.arrays.ParamsArray$WhenMappings -> com.kotlinnlp.simplednn.core.arrays.ParamsArray$WhenMappings:
# {"id":"sourceFile","fileName":"ParamsArray.kt"}
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap -> com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap:
# {"id":"sourceFile","fileName":"EmbeddingsMap.kt"}
    int size -> a
    com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer initializer -> b
    boolean pseudoRandomDropout -> c
    com.kotlinnlp.simplednn.core.arrays.ParamsArray unknownEmbedding -> d
    com.kotlinnlp.simplednn.core.arrays.ParamsArray nullEmbedding -> e
    java.util.Map embeddings -> f
    kotlin.random.Random dropoutRandomGenerator -> g
    kotlinx.serialization.KSerializer[] $childSerializers -> h
    kotlinx.serialization.descriptors.SerialDescriptor $cachedDescriptor -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lkotlinx/serialization/internal/PluginGeneratedSerialDescriptor;"}
    1:1:void <clinit>():33:33 -> <clinit>
    1:1:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> <init>
    1:1:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):25 -> <init>
    2:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):29:29 -> <init>
    3:4:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> <init>
    3:4:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):25 -> <init>
    5:5:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):210:210 -> <init>
    6:6:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> <init>
    6:6:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):25 -> <init>
    7:7:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):215:215 -> <init>
    8:8:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> <init>
    8:8:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):25 -> <init>
    9:9:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):221:221 -> <init>
    10:10:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> <init>
    10:10:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):25 -> <init>
    11:11:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):227:227 -> <init>
    12:12:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> <init>
    12:12:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):25 -> <init>
    13:13:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> <init>
    13:13:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):25 -> <init>
    14:14:int getSize():28:28 -> <init>
    14:14:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):28 -> <init>
    15:15:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):29:29 -> <init>
    15:15:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):29 -> <init>
    16:16:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):30:30 -> <init>
    16:16:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):30 -> <init>
    196:196:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):210:210 -> <init>
    196:196:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):210 -> <init>
    201:201:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):215:215 -> <init>
    201:201:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):215 -> <init>
    207:207:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):221:221 -> <init>
    207:207:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):221 -> <init>
    213:213:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):227:227 -> <init>
    213:213:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):227 -> <init>
    214:214:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):29:29 -> <init>
    214:214:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):29 -> <init>
    215:215:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):26:26 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray buildEmbedding():362:362 -> a
    1:1:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> access$get$childSerializers$cp
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray get(java.lang.Object):270:270 -> get
    2:2:boolean mustBeDropped(float):369:369 -> get
    2:2:com.kotlinnlp.simplednn.core.arrays.ParamsArray get(java.lang.Object,float):296 -> get
    3:6:com.kotlinnlp.simplednn.core.arrays.ParamsArray get(java.lang.Object,float):296:299 -> get
    7:7:com.kotlinnlp.simplednn.core.arrays.ParamsArray get(java.lang.Object,float):293:293 -> get
    1:1:int getCount():200:200 -> getCount
    1:1:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):221:221 -> getEmbeddings
    1:1:java.util.Map getEmbeddings():221 -> getEmbeddings
    1:1:java.util.Set getKeys():205:205 -> getKeys
    1:1:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):215:215 -> getNullEmbedding
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getNullEmbedding():215 -> getNullEmbedding
    1:2:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrNull(java.lang.Object):277:278 -> getOrNull
    1:1:boolean mustBeDropped(float):369:369 -> getOrSet
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Integer,float,com.kotlinnlp.simplednn.core.arrays.ParamsArray):321 -> getOrSet
    2:4:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Integer,float,com.kotlinnlp.simplednn.core.arrays.ParamsArray):321:323 -> getOrSet
    5:5:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Integer,float,com.kotlinnlp.simplednn.core.arrays.ParamsArray):318:318 -> getOrSet
    6:6:boolean mustBeDropped(float):369:369 -> getOrSet
    6:6:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Object,float,kotlin.jvm.functions.Function0):344 -> getOrSet
    7:9:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Object,float,kotlin.jvm.functions.Function0):344:346 -> getOrSet
    10:10:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Object,float,kotlin.jvm.functions.Function0):341:341 -> getOrSet
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet$default(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,java.lang.Integer,float,com.kotlinnlp.simplednn.core.arrays.ParamsArray,int,java.lang.Object):316:316 -> getOrSet$default
    2:2:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet$default(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,java.lang.Object,float,kotlin.jvm.functions.Function0,int,java.lang.Object):339:339 -> getOrSet$default
    1:1:int getSize():28:28 -> getSize
    1:1:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):210:210 -> getUnknownEmbedding
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getUnknownEmbedding():210 -> getUnknownEmbedding
    1:1:void load_init():194:194 -> load_init
    1:3:com.kotlinnlp.simplednn.core.arrays.ParamsArray set(java.lang.Object,com.kotlinnlp.simplednn.core.arrays.ParamsArray):249:251 -> set
    4:10:com.kotlinnlp.simplednn.core.arrays.ParamsArray set(java.lang.Object,com.kotlinnlp.simplednn.core.arrays.ParamsArray):250:256 -> set
    11:11:com.kotlinnlp.simplednn.core.arrays.ParamsArray set(java.lang.Object,com.kotlinnlp.simplednn.core.arrays.ParamsArray):249:249 -> set
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray set$default(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,java.lang.Object,com.kotlinnlp.simplednn.core.arrays.ParamsArray,int,java.lang.Object):247:247 -> set$default
    1:1:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> write$Self
    1:1:void write$Self(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):25 -> write$Self
    2:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):29:29 -> write$Self
    2:2:void write$Self(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):29 -> write$Self
    3:6:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> write$Self
    3:6:void write$Self(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):25 -> write$Self
    7:7:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):210:210 -> write$Self
    7:7:void write$Self(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):210 -> write$Self
    8:9:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> write$Self
    8:9:void write$Self(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):25 -> write$Self
    10:10:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):215:215 -> write$Self
    10:10:void write$Self(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):215 -> write$Self
    11:12:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> write$Self
    11:12:void write$Self(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):25 -> write$Self
    13:13:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):221:221 -> write$Self
    13:13:void write$Self(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):221 -> write$Self
    14:15:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> write$Self
    14:15:void write$Self(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):25 -> write$Self
    16:16:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):227:227 -> write$Self
    16:16:void write$Self(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):227 -> write$Self
    17:17:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():25:25 -> write$Self
    17:17:void write$Self(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):25 -> write$Self
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$$serializer -> com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$$serializer:
# {"id":"sourceFile","fileName":"EmbeddingsMap.kt"}
    kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor -> a
    kotlinx.serialization.KSerializer typeSerial0 -> b
    1:1:void <init>():25:25 -> <init>
    2:2:void <init>(kotlinx.serialization.KSerializer):25:25 -> <init>
    1:1:kotlinx.serialization.KSerializer[] childSerializers():25:25 -> childSerializers
    1:1:com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap deserialize(kotlinx.serialization.encoding.Decoder):25:25 -> deserialize
    2:2:java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder):25:25 -> deserialize
    1:1:kotlinx.serialization.descriptors.SerialDescriptor getDescriptor():25:25 -> getDescriptor
    1:1:void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap):25:25 -> serialize
    2:2:void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object):25:25 -> serialize
    1:1:kotlinx.serialization.KSerializer[] typeParametersSerializers():25:25 -> typeParametersSerializers
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$Companion -> com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$Companion:
# {"id":"sourceFile","fileName":"EmbeddingsMap.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():33:33 -> <init>
    1:1:kotlinx.serialization.KSerializer serializer(kotlinx.serialization.KSerializer):33:33 -> serializer
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap -> com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap:
# {"id":"sourceFile","fileName":"LernaEmbeddingsMap.kt"}
    int num_features -> a
    int size -> b
    com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer initializer -> c
    boolean pseudoRandomDropout -> d
    com.kotlinnlp.simplednn.core.arrays.ParamsArray unknownEmbedding -> e
    com.kotlinnlp.simplednn.core.arrays.ParamsArray nullEmbedding -> f
    java.util.Map embeddings -> g
    kotlin.random.Random dropoutRandomGenerator -> h
    kotlinx.serialization.KSerializer[] $childSerializers -> i
    kotlinx.serialization.descriptors.SerialDescriptor $cachedDescriptor -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lkotlinx/serialization/internal/PluginGeneratedSerialDescriptor;"}
    1:1:void <clinit>():35:35 -> <clinit>
    1:1:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> <init>
    1:1:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):27 -> <init>
    2:2:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):31:31 -> <init>
    3:4:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> <init>
    3:4:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):27 -> <init>
    5:5:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):225:225 -> <init>
    6:6:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> <init>
    6:6:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):27 -> <init>
    7:7:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):230:230 -> <init>
    8:8:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> <init>
    8:8:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):27 -> <init>
    9:9:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):236:236 -> <init>
    10:10:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> <init>
    10:10:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):27 -> <init>
    11:11:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):242:242 -> <init>
    12:12:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> <init>
    12:12:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):27 -> <init>
    13:13:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> <init>
    13:13:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):27 -> <init>
    14:14:int getNum_features():29:29 -> <init>
    14:14:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):29 -> <init>
    15:15:int getSize():30:30 -> <init>
    15:15:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):30 -> <init>
    16:16:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):31:31 -> <init>
    16:16:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):31 -> <init>
    17:17:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):32:32 -> <init>
    17:17:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):32 -> <init>
    210:210:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):225:225 -> <init>
    210:210:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):225 -> <init>
    215:215:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):230:230 -> <init>
    215:215:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):230 -> <init>
    221:221:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):236:236 -> <init>
    221:221:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):236 -> <init>
    227:227:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):242:242 -> <init>
    227:227:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):242 -> <init>
    228:228:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):31:31 -> <init>
    228:228:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):31 -> <init>
    229:229:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):28:28 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray buildEmbedding():377:377 -> a
    1:1:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> access$get$childSerializers$cp
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray get(java.lang.Integer):285:285 -> get
    2:2:boolean mustBeDropped(float):384:384 -> get
    2:2:com.kotlinnlp.simplednn.core.arrays.ParamsArray get(java.lang.Integer,float):311 -> get
    3:6:com.kotlinnlp.simplednn.core.arrays.ParamsArray get(java.lang.Integer,float):311:314 -> get
    7:7:com.kotlinnlp.simplednn.core.arrays.ParamsArray get(java.lang.Integer,float):308:308 -> get
    1:1:int getCount():215:215 -> getCount
    1:1:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):236:236 -> getEmbeddings
    1:1:java.util.Map getEmbeddings():236 -> getEmbeddings
    1:1:java.util.Set getKeys():220:220 -> getKeys
    1:1:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):230:230 -> getNullEmbedding
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getNullEmbedding():230 -> getNullEmbedding
    1:1:int getNum_features():29:29 -> getNum_features
    1:2:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrNull(int):292:293 -> getOrNull
    1:1:boolean mustBeDropped(float):384:384 -> getOrSet
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Integer,float,com.kotlinnlp.simplednn.core.arrays.ParamsArray):336 -> getOrSet
    2:4:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Integer,float,com.kotlinnlp.simplednn.core.arrays.ParamsArray):336:338 -> getOrSet
    5:5:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Integer,float,com.kotlinnlp.simplednn.core.arrays.ParamsArray):333:333 -> getOrSet
    6:6:boolean mustBeDropped(float):384:384 -> getOrSet
    6:6:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Integer,float,kotlin.jvm.functions.Function0):359 -> getOrSet
    7:9:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Integer,float,kotlin.jvm.functions.Function0):359:361 -> getOrSet
    10:10:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Integer,float,kotlin.jvm.functions.Function0):356:356 -> getOrSet
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet$default(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,java.lang.Integer,float,com.kotlinnlp.simplednn.core.arrays.ParamsArray,int,java.lang.Object):331:331 -> getOrSet$default
    2:2:com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet$default(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,java.lang.Integer,float,kotlin.jvm.functions.Function0,int,java.lang.Object):354:354 -> getOrSet$default
    1:204:java.util.Map getParams():200:403 -> getParams
    205:206:java.util.Map getParams():201:202 -> getParams
    1:1:int getSize():30:30 -> getSize
    1:1:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):225:225 -> getUnknownEmbedding
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getUnknownEmbedding():225 -> getUnknownEmbedding
    1:1:void load_init():196:196 -> load_init
    1:3:com.kotlinnlp.simplednn.core.arrays.ParamsArray set(int,com.kotlinnlp.simplednn.core.arrays.ParamsArray):264:266 -> set
    4:10:com.kotlinnlp.simplednn.core.arrays.ParamsArray set(int,com.kotlinnlp.simplednn.core.arrays.ParamsArray):265:271 -> set
    11:11:com.kotlinnlp.simplednn.core.arrays.ParamsArray set(int,com.kotlinnlp.simplednn.core.arrays.ParamsArray):264:264 -> set
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray set$default(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,int,com.kotlinnlp.simplednn.core.arrays.ParamsArray,int,java.lang.Object):262:262 -> set$default
    1:1:void setParams(java.util.Map):405:405 -> setParams
    2:3:void setParams(java.util.Map):208:209 -> setParams
    1:1:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> write$Self
    1:1:void write$Self(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):27 -> write$Self
    2:2:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):31:31 -> write$Self
    2:2:void write$Self(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):31 -> write$Self
    3:6:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> write$Self
    3:6:void write$Self(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):27 -> write$Self
    7:7:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):225:225 -> write$Self
    7:7:void write$Self(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):225 -> write$Self
    8:9:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> write$Self
    8:9:void write$Self(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):27 -> write$Self
    10:10:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):230:230 -> write$Self
    10:10:void write$Self(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):230 -> write$Self
    11:12:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> write$Self
    11:12:void write$Self(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):27 -> write$Self
    13:13:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):236:236 -> write$Self
    13:13:void write$Self(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):236 -> write$Self
    14:15:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> write$Self
    14:15:void write$Self(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):27 -> write$Self
    16:16:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker):242:242 -> write$Self
    16:16:void write$Self(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):242 -> write$Self
    17:17:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():27:27 -> write$Self
    17:17:void write$Self(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer):27 -> write$Self
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$$serializer -> com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$$serializer:
# {"id":"sourceFile","fileName":"LernaEmbeddingsMap.kt"}
    kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor -> a
    kotlinx.serialization.KSerializer typeSerial0 -> b
    1:1:void <init>():27:27 -> <init>
    2:2:void <init>(kotlinx.serialization.KSerializer):27:27 -> <init>
    1:1:kotlinx.serialization.KSerializer[] childSerializers():27:27 -> childSerializers
    1:1:com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap deserialize(kotlinx.serialization.encoding.Decoder):27:27 -> deserialize
    2:2:java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder):27:27 -> deserialize
    1:1:kotlinx.serialization.descriptors.SerialDescriptor getDescriptor():27:27 -> getDescriptor
    1:1:void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap):27:27 -> serialize
    2:2:void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object):27:27 -> serialize
    1:1:kotlinx.serialization.KSerializer[] typeParametersSerializers():27:27 -> typeParametersSerializers
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$Companion -> com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$Companion:
# {"id":"sourceFile","fileName":"LernaEmbeddingsMap.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():35:35 -> <init>
    1:1:kotlinx.serialization.KSerializer serializer(kotlinx.serialization.KSerializer):35:35 -> serializer
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction -> com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction:
# {"id":"sourceFile","fileName":"ActivationFunction.kt"}
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction$Companion -> com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction$Companion:
# {"id":"sourceFile","fileName":"ActivationFunction.kt"}
    com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction$Companion $$INSTANCE -> a
    1:1:void <init>():19:19 -> <init>
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction$DefaultImpls -> com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction$DefaultImpls:
# {"id":"sourceFile","fileName":"ActivationFunction.kt"}
    1:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):61:63 -> df
    4:4:void df(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):76:76 -> df
    1:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):88:90 -> dfOptimized
    1:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):37:39 -> f
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU -> com.kotlinnlp.simplednn.core.functionalities.activations.CeLU:
# {"id":"sourceFile","fileName":"CeLU.kt"}
    float alpha -> a
    1:1:void <init>():0:0 -> <init>
    2:17:void <init>(float):22:37 -> <init>
    18:18:void <init>(float,int,kotlin.jvm.internal.DefaultConstructorMarker):22:22 -> <init>
    1:1:float df(float):22:22 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):22:22 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):22:22 -> df
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):22:22 -> dfOptimized
    2:2:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):22:22 -> dfOptimized
    3:3:float dfOptimized(float):56:56 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):22:22 -> f
    2:2:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):22:22 -> f
    3:3:float f(float):47:47 -> f
    1:1:float getAlpha():22:22 -> getAlpha
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU$Companion -> com.kotlinnlp.simplednn.core.functionalities.activations.CeLU$Companion:
# {"id":"sourceFile","fileName":"CeLU.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():24:24 -> <init>
com.kotlinnlp.simplednn.core.functionalities.activations.ELU -> com.kotlinnlp.simplednn.core.functionalities.activations.ELU:
# {"id":"sourceFile","fileName":"ELU.kt"}
    float alpha -> a
    1:1:void <init>():0:0 -> <init>
    2:17:void <init>(float):22:37 -> <init>
    18:18:void <init>(float,int,kotlin.jvm.internal.DefaultConstructorMarker):22:22 -> <init>
    1:1:float df(float):22:22 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):22:22 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):22:22 -> df
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):22:22 -> dfOptimized
    2:2:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):22:22 -> dfOptimized
    3:3:float dfOptimized(float):57:57 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):22:22 -> f
    2:2:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):22:22 -> f
    3:3:float f(float):48:48 -> f
    1:1:float getAlpha():22:22 -> getAlpha
com.kotlinnlp.simplednn.core.functionalities.activations.ELU$Companion -> com.kotlinnlp.simplednn.core.functionalities.activations.ELU$Companion:
# {"id":"sourceFile","fileName":"ELU.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():24:24 -> <init>
com.kotlinnlp.simplednn.core.functionalities.activations.GeLU -> com.kotlinnlp.simplednn.core.functionalities.activations.GeLU:
# {"id":"sourceFile","fileName":"GeLU.kt"}
    1:1:void <init>():21:21 -> <init>
    1:1:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):21:21 -> df
    2:6:float df(float):47:51 -> df
    7:9:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):63:65 -> df
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):21:21 -> dfOptimized
    2:2:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):21:21 -> dfOptimized
    3:3:float dfOptimized(float):74:74 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):21:21 -> f
    2:2:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):21:21 -> f
    3:3:float f(float):36:36 -> f
com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid -> com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid:
# {"id":"sourceFile","fileName":"HardSigmoid.kt"}
    1:1:void <init>():15:15 -> <init>
    1:1:float df(float):15:15 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):15:15 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):15:15 -> df
    1:1:float dfOptimized(float):0:0 -> dfOptimized
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):15:15 -> dfOptimized
    3:3:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):15:15 -> dfOptimized
    1:1:float f(float):0:0 -> f
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):15:15 -> f
    3:3:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):15:15 -> f
com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh -> com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh:
# {"id":"sourceFile","fileName":"HardTanh.kt"}
    1:1:void <init>():14:14 -> <init>
    1:1:float df(float):14:14 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):14:14 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):14:14 -> df
    1:1:float dfOptimized(float):0:0 -> dfOptimized
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):14:14 -> dfOptimized
    3:3:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):14:14 -> dfOptimized
    1:1:float f(float):0:0 -> f
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):14:14 -> f
    3:3:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):14:14 -> f
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU -> com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU:
# {"id":"sourceFile","fileName":"LeakyRELU.kt"}
    float slope -> a
    1:1:void <init>():0:0 -> <init>
    2:17:void <init>(float):16:31 -> <init>
    18:18:void <init>(float,int,kotlin.jvm.internal.DefaultConstructorMarker):16:16 -> <init>
    1:1:float df(float):16:16 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> df
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> dfOptimized
    2:2:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> dfOptimized
    3:3:float dfOptimized(float):50:50 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> f
    2:2:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> f
    3:3:float f(float):41:41 -> f
    1:1:float getSlope():16:16 -> getSlope
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU$Companion -> com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU$Companion:
# {"id":"sourceFile","fileName":"LeakyRELU.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():18:18 -> <init>
com.kotlinnlp.simplednn.core.functionalities.activations.ReLU -> com.kotlinnlp.simplednn.core.functionalities.activations.ReLU:
# {"id":"sourceFile","fileName":"ReLU.kt"}
    1:1:void <init>():17:17 -> <init>
    1:1:float df(float):17:17 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> df
    1:1:float dfOptimized(float):0:0 -> dfOptimized
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> dfOptimized
    3:3:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> dfOptimized
    1:1:float f(float):0:0 -> f
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> f
    3:3:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> f
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction -> com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction:
# {"id":"sourceFile","fileName":"ScalarActivationFunction.kt"}
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$Companion -> com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$Companion:
# {"id":"sourceFile","fileName":"ScalarActivationFunction.kt"}
    com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$Companion $$INSTANCE -> a
    1:1:void <init>():18:18 -> <init>
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$DefaultImpls -> com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$DefaultImpls:
# {"id":"sourceFile","fileName":"ScalarActivationFunction.kt"}
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> df
    2:2:float df(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,float):52:52 -> df
    3:11:void df(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):82:90 -> df
    12:12:void df(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):82:82 -> df
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16 -> dfOptimized
    2:18:void dfOptimized(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):72:88 -> dfOptimized
    19:19:void dfOptimized(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):72:72 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> f
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16 -> f
    2:27:void f(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):61:86 -> f
    28:28:void f(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):61:61 -> f
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU -> com.kotlinnlp.simplednn.core.functionalities.activations.SeLU:
# {"id":"sourceFile","fileName":"SeLU.kt"}
    float scale -> a
    float alpha -> b
    1:1:void <init>():0:0 -> <init>
    2:18:void <init>(float,float):23:39 -> <init>
    19:19:void <init>(float,float):38:38 -> <init>
    20:20:void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker):23:23 -> <init>
    1:1:float df(float):23:23 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):23:23 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):23:23 -> df
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):23:23 -> dfOptimized
    2:2:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):23:23 -> dfOptimized
    3:4:float dfOptimized(float):62:63 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):23:23 -> f
    2:2:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):23:23 -> f
    3:4:float f(float):50:51 -> f
    1:1:float getAlpha():23:23 -> getAlpha
    1:1:float getScale():23:23 -> getScale
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU$Companion -> com.kotlinnlp.simplednn.core.functionalities.activations.SeLU$Companion:
# {"id":"sourceFile","fileName":"SeLU.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():25:25 -> <init>
com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid -> com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid:
# {"id":"sourceFile","fileName":"Sigmoid.kt"}
    1:1:void <init>():16:16 -> <init>
    1:1:float df(float):16:16 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> df
    1:1:float dfOptimized(float):0:0 -> dfOptimized
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> dfOptimized
    3:3:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> f
    2:2:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):16:16 -> f
    3:3:float f(float):31:31 -> f
com.kotlinnlp.simplednn.core.functionalities.activations.Softmax -> com.kotlinnlp.simplednn.core.functionalities.activations.Softmax:
# {"id":"sourceFile","fileName":"Softmax.kt"}
    1:1:void <init>():23:23 -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):41:41 -> dfOptimized
    2:2:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):50:50 -> dfOptimized
com.kotlinnlp.simplednn.core.functionalities.activations.Softmax$Companion -> com.kotlinnlp.simplednn.core.functionalities.activations.Softmax$Companion:
# {"id":"sourceFile","fileName":"Softmax.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():25:25 -> <init>
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase -> com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase:
# {"id":"sourceFile","fileName":"SoftmaxBase.kt"}
    1:1:void <init>():19:19 -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):19:19 -> df
    2:2:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):19:19 -> df
    1:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):51:53 -> dfOptimized
    4:10:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):66:72 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):19:19 -> f
    2:3:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):38:39 -> f
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase$Companion -> com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase$Companion:
# {"id":"sourceFile","fileName":"SoftmaxBase.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():21:21 -> <init>
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus -> com.kotlinnlp.simplednn.core.functionalities.activations.Softplus:
# {"id":"sourceFile","fileName":"Softplus.kt"}
    float beta -> a
    float threshold -> b
    1:1:void <init>():0:0 -> <init>
    2:17:void <init>(float,float):19:34 -> <init>
    18:18:void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker):19:19 -> <init>
    1:1:float df(float):19:19 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):19:19 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):19:19 -> df
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):19:19 -> dfOptimized
    2:2:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):19:19 -> dfOptimized
    3:3:float dfOptimized(float):57:57 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):19:19 -> f
    2:2:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):19:19 -> f
    3:3:float f(float):45:45 -> f
    1:1:float getBeta():19:19 -> getBeta
    1:1:float getThreshold():19:19 -> getThreshold
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus$Companion -> com.kotlinnlp.simplednn.core.functionalities.activations.Softplus$Companion:
# {"id":"sourceFile","fileName":"Softplus.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():21:21 -> <init>
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink -> com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink:
# {"id":"sourceFile","fileName":"Softshrink.kt"}
    float lambda -> a
    1:1:void <init>():0:0 -> <init>
    2:17:void <init>(float):18:33 -> <init>
    18:18:void <init>(float,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    1:1:float df(float):18:18 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):18:18 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):18:18 -> df
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):18:18 -> dfOptimized
    2:2:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):18:18 -> dfOptimized
    3:3:float dfOptimized(float):57:57 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):18:18 -> f
    2:2:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):18:18 -> f
    3:3:float f(float):44:44 -> f
    1:1:float getLambda():18:18 -> getLambda
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink$Companion -> com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink$Companion:
# {"id":"sourceFile","fileName":"Softshrink.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():20:20 -> <init>
com.kotlinnlp.simplednn.core.functionalities.activations.Softsign -> com.kotlinnlp.simplednn.core.functionalities.activations.Softsign:
# {"id":"sourceFile","fileName":"Softsign.kt"}
    1:1:void <init>():17:17 -> <init>
    1:1:float df(float):17:17 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> df
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> dfOptimized
    2:2:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> dfOptimized
    3:3:float dfOptimized(float):41:41 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> f
    2:2:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> f
    3:3:float f(float):32:32 -> f
com.kotlinnlp.simplednn.core.functionalities.activations.Tanh -> com.kotlinnlp.simplednn.core.functionalities.activations.Tanh:
# {"id":"sourceFile","fileName":"Tanh.kt"}
    1:1:void <init>():17:17 -> <init>
    1:1:float df(float):17:17 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> df
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> dfOptimized
    2:2:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> dfOptimized
    3:3:float dfOptimized(float):41:41 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> f
    2:2:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):17:17 -> f
    3:3:float f(float):32:32 -> f
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold -> com.kotlinnlp.simplednn.core.functionalities.activations.Threshold:
# {"id":"sourceFile","fileName":"Threshold.kt"}
    float threshold -> a
    float value -> b
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(float,float):18:18 -> <init>
    3:3:void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker):18:18 -> <init>
    1:1:float df(float):18:18 -> df
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):18:18 -> df
    3:3:void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):18:18 -> df
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):18:18 -> dfOptimized
    2:2:void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):18:18 -> dfOptimized
    3:3:float dfOptimized(float):45:45 -> dfOptimized
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):18:18 -> f
    2:2:void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):18:18 -> f
    3:3:float f(float):36:36 -> f
    1:1:float getThreshold():18:18 -> getThreshold
    1:1:float getValue():18:18 -> getValue
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold$Companion -> com.kotlinnlp.simplednn.core.functionalities.activations.Threshold$Companion:
# {"id":"sourceFile","fileName":"Threshold.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():20:20 -> <init>
com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod -> com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod:
# {"id":"sourceFile","fileName":"DecayMethod.kt"}
com.kotlinnlp.simplednn.core.functionalities.decaymethods.ExponentialDecay -> com.kotlinnlp.simplednn.core.functionalities.decaymethods.ExponentialDecay:
# {"id":"sourceFile","fileName":"ExponentialDecay.kt"}
    float initLearningRate -> a
    float finalLearningRate -> b
    int totalIterations -> c
    1:10:void <init>(float,float,int):21:30 -> <init>
    11:11:void <init>(float,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker):21:21 -> <init>
    1:1:float getFinalLearningRate():23:23 -> getFinalLearningRate
    1:1:float getInitLearningRate():22:22 -> getInitLearningRate
    1:1:int getTotalIterations():24:24 -> getTotalIterations
    1:5:float update(float,int):41:45 -> update
    6:6:float update(float,int):43:43 -> update
com.kotlinnlp.simplednn.core.functionalities.decaymethods.HyperbolicDecay -> com.kotlinnlp.simplednn.core.functionalities.decaymethods.HyperbolicDecay:
# {"id":"sourceFile","fileName":"HyperbolicDecay.kt"}
    float decay -> a
    float initLearningRate -> b
    float finalLearningRate -> c
    1:10:void <init>(float,float,float):17:26 -> <init>
    11:11:void <init>(float,float,float,int,kotlin.jvm.internal.DefaultConstructorMarker):17:17 -> <init>
    1:1:float getDecay():18:18 -> getDecay
    1:1:float getFinalLearningRate():20:20 -> getFinalLearningRate
    1:1:float getInitLearningRate():19:19 -> getInitLearningRate
    1:2:float update(float,int):37:38 -> update
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping -> com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping:
# {"id":"sourceFile","fileName":"GradientClipping.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():16:16 -> <init>
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm -> com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm:
# {"id":"sourceFile","fileName":"GradientClipping.kt"}
    float maxNorm -> a
    float normType -> b
    1:1:void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker):32:32 -> <init>
    1:1:void <init>(float,float):32 -> <init>
    2:2:void <init>(float,float):51:51 -> <init>
    3:3:void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker):32:32 -> <init>
    4:4:void <init>(float,int,int,kotlin.jvm.internal.DefaultConstructorMarker):49:49 -> <init>
    4:4:void <init>(float,int):49 -> <init>
    5:5:void <init>(float,int,int,kotlin.jvm.internal.DefaultConstructorMarker):49:49 -> <init>
    1:46:void clip(java.util.List):60:105 -> clip
    47:91:void clip(java.util.List):61:105 -> clip
    92:140:void clip(java.util.List):61:109 -> clip
    141:187:void clip(java.util.List):63:109 -> clip
    188:236:void clip(java.util.List):63:111 -> clip
    237:237:void clip(java.util.List):69:69 -> clip
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm$Companion -> com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm$Companion:
# {"id":"sourceFile","fileName":"GradientClipping.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():34:34 -> <init>
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byValue -> com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byValue:
# {"id":"sourceFile","fileName":"GradientClipping.kt"}
    float clipValue -> a
    1:1:void <init>(float):79:79 -> <init>
    1:3:void clip(java.util.List):102:104 -> clip
    4:19:void clip(java.util.List):89:104 -> clip
com.kotlinnlp.simplednn.core.functionalities.initializers.ConstantInitializer -> com.kotlinnlp.simplednn.core.functionalities.initializers.ConstantInitializer:
# {"id":"sourceFile","fileName":"ConstantInitializer.kt"}
    float value -> a
    1:1:void <init>(float):17:17 -> <init>
    1:1:float getValue():17:17 -> getValue
    1:1:void initialize(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):34:34 -> initialize
com.kotlinnlp.simplednn.core.functionalities.initializers.ConstantInitializer$Companion -> com.kotlinnlp.simplednn.core.functionalities.initializers.ConstantInitializer$Companion:
# {"id":"sourceFile","fileName":"ConstantInitializer.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():19:19 -> <init>
com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer -> com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer:
# {"id":"sourceFile","fileName":"GlorotInitializer.kt"}
    float gain -> a
    boolean enablePseudoRandom -> b
    kotlin.random.Random seedGenerator -> c
    1:1:void <init>():0:0 -> <init>
    2:31:void <init>(float,boolean,long):29:58 -> <init>
    32:32:void <init>(float,boolean,long,int,kotlin.jvm.internal.DefaultConstructorMarker):29:29 -> <init>
    1:4:void initialize(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):67:70 -> initialize
    5:10:void initialize(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):67:72 -> initialize
com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer$Companion -> com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer$Companion:
# {"id":"sourceFile","fileName":"GlorotInitializer.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():35:35 -> <init>
    1:2:float getGain(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):49:50 -> getGain
com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer -> com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer:
# {"id":"sourceFile","fileName":"Initializer.kt"}
com.kotlinnlp.simplednn.core.functionalities.initializers.RandomInitializer -> com.kotlinnlp.simplednn.core.functionalities.initializers.RandomInitializer:
# {"id":"sourceFile","fileName":"RandomInitializer.kt"}
    com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator randomGenerator -> a
    1:1:void <init>(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator):18:18 -> <init>
    1:1:com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator getRandomGenerator():18:18 -> getRandomGenerator
    1:1:void initialize(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):35:35 -> initialize
com.kotlinnlp.simplednn.core.functionalities.initializers.RandomInitializer$Companion -> com.kotlinnlp.simplednn.core.functionalities.initializers.RandomInitializer$Companion:
# {"id":"sourceFile","fileName":"RandomInitializer.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():20:20 -> <init>
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator -> com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator:
# {"id":"sourceFile","fileName":"AugmentedMSECalculator.kt"}
    float pi -> a
    float c -> b
    com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength injectedErrorStrength -> c
    boolean isLossPartitionDisabled -> d
    float lossPartition -> e
    1:1:void <init>():0:0 -> <init>
    2:27:void <init>(float,float):19:44 -> <init>
    28:28:void <init>(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker):19:19 -> <init>
    1:1:java.util.List calculateErrors(java.util.List,java.util.List):19:19 -> calculateErrors
    2:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):82:84 -> calculateErrors
    5:5:float calculateRegularization():99:99 -> calculateErrors
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):87 -> calculateErrors
    6:11:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):87:92 -> calculateErrors
    1:6:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateLoss(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):56:61 -> calculateLoss
    7:7:float calculateRegularization():99:99 -> calculateLoss
    7:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateLoss(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):62 -> calculateLoss
    8:14:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateLoss(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):62:68 -> calculateLoss
    1:1:float calculateMeanLoss(java.util.List,java.util.List):19:19 -> calculateMeanLoss
    1:1:float getC():19:19 -> getC
    1:1:com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength getInjectedErrorStrength():34:34 -> getInjectedErrorStrength
    1:1:float getPi():19:19 -> getPi
    1:1:void setInjectedErrorStrength(com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength):34:34 -> setInjectedErrorStrength
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength -> com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength:
# {"id":"sourceFile","fileName":"AugmentedMSECalculator.kt"}
    float weight -> a
    com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength[] $VALUES -> b
    kotlin.enums.EnumEntries $ENTRIES -> c
    1:4:void <clinit>():25:28 -> <clinit>
    5:5:com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength[] $values():0:0 -> <clinit>
    5:5:void <clinit>():28 -> <clinit>
    6:6:void <clinit>():28:28 -> <clinit>
    1:1:void <init>(java.lang.String,int,float):24:24 -> <init>
    1:1:float getWeight$advancedml_release():24:24 -> getWeight$advancedml_release
com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator -> com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator:
# {"id":"sourceFile","fileName":"LossCalculator.kt"}
com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator$DefaultImpls -> com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator$DefaultImpls:
# {"id":"sourceFile","fileName":"LossCalculator.kt"}
    1:31:java.util.List calculateErrors(com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator,java.util.List,java.util.List):48:78 -> calculateErrors
    32:59:java.util.List calculateErrors(com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator,java.util.List,java.util.List):51:78 -> calculateErrors
    60:60:java.util.List calculateErrors(com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator,java.util.List,java.util.List):48:48 -> calculateErrors
    1:13:float calculateMeanLoss(com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator,java.util.List,java.util.List):68:80 -> calculateMeanLoss
    14:18:float calculateMeanLoss(com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator,java.util.List,java.util.List):68:72 -> calculateMeanLoss
com.kotlinnlp.simplednn.core.functionalities.losses.LossesUtilsKt -> com.kotlinnlp.simplednn.core.functionalities.losses.LossesUtilsKt:
# {"id":"sourceFile","fileName":"LossesUtils.kt"}
    1:9:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getErrorsByHingeLoss(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,float):24:32 -> getErrorsByHingeLoss
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getErrorsByHingeLoss$default(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,float,int,java.lang.Object):22:22 -> getErrorsByHingeLoss$default
    1:10:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getQuantizationGradients(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):48:57 -> getQuantizationGradients
com.kotlinnlp.simplednn.core.functionalities.losses.MSECalculator -> com.kotlinnlp.simplednn.core.functionalities.losses.MSECalculator:
# {"id":"sourceFile","fileName":"MSECalculator.kt"}
    1:1:void <init>():15:15 -> <init>
    1:1:java.util.List calculateErrors(java.util.List,java.util.List):15:15 -> calculateErrors
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):37:37 -> calculateErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateLoss(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):26:26 -> calculateLoss
    1:1:float calculateMeanLoss(java.util.List,java.util.List):15:15 -> calculateMeanLoss
com.kotlinnlp.simplednn.core.functionalities.losses.MulticlassMSECalculator -> com.kotlinnlp.simplednn.core.functionalities.losses.MulticlassMSECalculator:
# {"id":"sourceFile","fileName":"MulticlassMSECalculator.kt"}
    1:1:void <init>():16:16 -> <init>
    1:9:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):28:36 -> calculateErrors
    10:10:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):30:30 -> calculateErrors
com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability -> com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability:
# {"id":"sourceFile","fileName":"NegativeLogProbability.kt"}
    java.util.List predictions -> a
    int goldIndex -> b
    kotlin.Lazy sumExp$delegate -> c
    1:1:java.util.List access$getPredictions$p(com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability):19:19 -> <init>
    1:1:void <init>(java.util.List,int):19 -> <init>
    2:2:float getSumExp():24:24 -> <init>
    2:2:void <init>(java.util.List,int):24 -> <init>
    1:1:java.util.List access$getPredictions$p(com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability):19:19 -> access$getPredictions$p
    1:1:float getSumExp():24:24 -> df
    1:1:java.util.List df():36 -> df
    2:14:java.util.List df():38:50 -> df
    15:18:java.util.List df():39:42 -> df
    19:30:java.util.List df():39:50 -> df
    1:1:float f():29:29 -> f
    2:2:float getSumExp():24:24 -> f
    2:2:float f():29 -> f
    3:3:float f():29:29 -> f
com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability$sumExp$2 -> a.a:
# {"id":"sourceFile","fileName":"NegativeLogProbability.kt"}
    com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability this$0 -> a
    void <init>(com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability) -> <init>
    1:26:java.lang.Float com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability$sumExp$2.invoke():24:49 -> invoke
    1:26:java.lang.Object invoke():24 -> invoke
    27:52:java.lang.Float com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability$sumExp$2.invoke():24:49 -> invoke
    27:52:java.lang.Object invoke():24 -> invoke
    53:53:java.lang.Float com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability$sumExp$2.invoke():24:24 -> invoke
    53:53:java.lang.Object invoke():24 -> invoke
com.kotlinnlp.simplednn.core.functionalities.losses.SoftmaxCrossEntropyCalculator -> com.kotlinnlp.simplednn.core.functionalities.losses.SoftmaxCrossEntropyCalculator:
# {"id":"sourceFile","fileName":"SoftmaxCrossEntropyCalculator.kt"}
    1:1:float calculateMeanLoss(java.util.List,java.util.List):19:19 -> <init>
    1:1:void <init>():19 -> <init>
    1:1:float calculateMeanLoss(java.util.List,java.util.List):19:19 -> calculateErrors
    1:1:java.util.List calculateErrors(java.util.List,java.util.List):19 -> calculateErrors
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):59:59 -> calculateErrors
    3:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int):71:73 -> calculateErrors
    6:16:java.util.List calculateErrors(java.util.List,java.util.ArrayList):91:101 -> calculateErrors
    17:24:java.util.List calculateErrors(java.util.List,java.util.ArrayList):94:101 -> calculateErrors
    25:25:java.util.List calculateErrors(java.util.List,java.util.ArrayList):91:91 -> calculateErrors
    1:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateLoss(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):38:45 -> calculateLoss
    9:9:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateLoss(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):38:38 -> calculateLoss
    1:1:float calculateMeanLoss(java.util.List,java.util.List):19:19 -> calculateMeanLoss
com.kotlinnlp.simplednn.core.functionalities.outputevaluation.ClassificationEvaluation -> com.kotlinnlp.simplednn.core.functionalities.outputevaluation.ClassificationEvaluation:
# {"id":"sourceFile","fileName":"ClassificationEvaluation.kt"}
    1:1:void <init>():15:15 -> <init>
    1:3:boolean invoke(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):27:29 -> invoke
    4:4:boolean invoke(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):27:27 -> invoke
com.kotlinnlp.simplednn.core.functionalities.outputevaluation.MulticlassEvaluation -> com.kotlinnlp.simplednn.core.functionalities.outputevaluation.MulticlassEvaluation:
# {"id":"sourceFile","fileName":"MulticlassEvaluation.kt"}
    1:1:void <init>():15:15 -> <init>
    1:8:boolean invoke(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):26:33 -> invoke
    9:9:boolean invoke(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):26:26 -> invoke
com.kotlinnlp.simplednn.core.functionalities.outputevaluation.OutputEvaluationFunction -> com.kotlinnlp.simplednn.core.functionalities.outputevaluation.OutputEvaluationFunction:
# {"id":"sourceFile","fileName":"OutputEvaluationFunction.kt"}
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom -> com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom:
# {"id":"sourceFile","fileName":"BaseRandom.kt"}
    boolean enablePseudoRandom -> a
    long seed -> b
    kotlin.random.Random rndGenerator -> c
    1:1:void <init>():0:0 -> <init>
    2:16:void <init>(boolean,long):19:33 -> <init>
    17:17:void <init>(boolean,long,int,kotlin.jvm.internal.DefaultConstructorMarker):19:19 -> <init>
    1:1:boolean getEnablePseudoRandom():19:19 -> getEnablePseudoRandom
    1:1:long getSeed():19:19 -> getSeed
    1:1:float next():38:38 -> next
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom$Companion -> com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom$Companion:
# {"id":"sourceFile","fileName":"BaseRandom.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():21:21 -> <init>
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom -> com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom:
# {"id":"sourceFile","fileName":"FixedRangeRandom.kt"}
    float radius -> a
    boolean enablePseudoRandom -> b
    long seed -> c
    kotlin.random.Random rndGenerator -> d
    1:1:void <init>():0:0 -> <init>
    2:20:void <init>(float,boolean,long):20:38 -> <init>
    21:21:void <init>(float,boolean,long,int,kotlin.jvm.internal.DefaultConstructorMarker):20:20 -> <init>
    1:1:boolean getEnablePseudoRandom():22:22 -> getEnablePseudoRandom
    1:1:float getRadius():21:21 -> getRadius
    1:1:long getSeed():23:23 -> getSeed
    1:1:float next():43:43 -> next
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom$Companion -> com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom$Companion:
# {"id":"sourceFile","fileName":"FixedRangeRandom.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():26:26 -> <init>
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom -> com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom:
# {"id":"sourceFile","fileName":"GaussianDistributedRandom.kt"}
    float variance -> a
    boolean enablePseudoRandom -> b
    long seed -> c
    kotlin.random.Random rndGenerator -> d
    1:1:void <init>():0:0 -> <init>
    2:20:void <init>(float,boolean,long):22:40 -> <init>
    21:21:void <init>(float,boolean,long,int,kotlin.jvm.internal.DefaultConstructorMarker):22:22 -> <init>
    1:5:float gaussRandom():50:54 -> a
    1:1:boolean getEnablePseudoRandom():24:24 -> getEnablePseudoRandom
    1:1:long getSeed():25:25 -> getSeed
    1:1:float getVariance():23:23 -> getVariance
    1:1:float next():46:46 -> next
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom$Companion -> com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom$Companion:
# {"id":"sourceFile","fileName":"GaussianDistributedRandom.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():28:28 -> <init>
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator -> com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator:
# {"id":"sourceFile","fileName":"RandomGenerator.kt"}
com.kotlinnlp.simplednn.core.functionalities.regularization.L1Regularization -> com.kotlinnlp.simplednn.core.functionalities.regularization.L1Regularization:
# {"id":"sourceFile","fileName":"L1Regularization.kt"}
    float lambda -> a
    1:1:void <init>(float):17:17 -> <init>
    1:1:void apply(com.kotlinnlp.simplednn.core.arrays.ParamsArray):27:27 -> apply
com.kotlinnlp.simplednn.core.functionalities.regularization.L2Regularization -> com.kotlinnlp.simplednn.core.functionalities.regularization.L2Regularization:
# {"id":"sourceFile","fileName":"L2Regularization.kt"}
    float lambda -> a
    1:1:void <init>(float):17:17 -> <init>
    1:1:void apply(com.kotlinnlp.simplednn.core.arrays.ParamsArray):27:27 -> apply
com.kotlinnlp.simplednn.core.functionalities.regularization.MaxNormRegularization -> com.kotlinnlp.simplednn.core.functionalities.regularization.MaxNormRegularization:
# {"id":"sourceFile","fileName":"MaxNormRegularization.kt"}
    1:1:void <init>():15:15 -> <init>
    1:10:void apply(com.kotlinnlp.simplednn.core.arrays.ParamsArray):24:33 -> apply
    11:19:void apply(com.kotlinnlp.simplednn.core.arrays.ParamsArray):27:35 -> apply
    20:20:void apply(com.kotlinnlp.simplednn.core.arrays.ParamsArray):28:28 -> apply
com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization -> com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization:
# {"id":"sourceFile","fileName":"ParamsRegularization.kt"}
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod:
# {"id":"sourceFile","fileName":"UpdateMethod.kt"}
    com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization regularization -> a
    1:1:void <init>(com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):28:28 -> <init>
    1:1:com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization getRegularization():28:28 -> getRegularization
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):111:111 -> optimizeDenseErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):122:122 -> optimizeGenericErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):100:100 -> optimizeSparseErrors
    1:5:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray):82:86 -> update
    1:5:void update(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):58 -> update
    6:8:void update(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):60:62 -> update
    9:9:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray):88:88 -> update
    9:9:void update(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):58 -> update
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod$Companion -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod$Companion:
# {"id":"sourceFile","fileName":"UpdateMethod.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():30:30 -> <init>
    1:7:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod invoke(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig):40:46 -> invoke
    8:8:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod invoke(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig):46:46 -> invoke
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig:
# {"id":"sourceFile","fileName":"UpdateMethodConfig.kt"}
    com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization regularization -> a
    1:1:void <init>(com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):18:18 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):18:18 -> <init>
    1:1:com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization getRegularization():18:18 -> getRegularization
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig:
# {"id":"sourceFile","fileName":"UpdateMethodConfig.kt"}
    float stepSize -> b
    float beta1 -> c
    float beta2 -> d
    float epsilon -> e
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):42:42 -> <init>
    3:3:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):48:48 -> <init>
    4:7:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):43:46 -> <init>
    1:1:float getBeta1():44:44 -> getBeta1
    1:1:float getBeta2():45:45 -> getBeta2
    1:1:float getEpsilon():46:46 -> getEpsilon
    1:1:float getStepSize():43:43 -> getStepSize
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$AdaGradConfig -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$AdaGradConfig:
# {"id":"sourceFile","fileName":"UpdateMethodConfig.kt"}
    float learningRate -> b
    float epsilon -> c
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):27:27 -> <init>
    3:3:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):31:31 -> <init>
    4:5:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):28:29 -> <init>
    1:1:float getEpsilon():29:29 -> getEpsilon
    1:1:float getLearningRate():28:28 -> getLearningRate
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$LearningRateConfig -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$LearningRateConfig:
# {"id":"sourceFile","fileName":"UpdateMethodConfig.kt"}
    float learningRate -> b
    com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod decayMethod -> c
    1:1:void <init>(float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):57:57 -> <init>
    2:2:void <init>(float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):61:61 -> <init>
    3:4:void <init>(float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):58:59 -> <init>
    1:1:com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod():59:59 -> getDecayMethod
    1:1:float getLearningRate():58:58 -> getLearningRate
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$MomentumConfig -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$MomentumConfig:
# {"id":"sourceFile","fileName":"UpdateMethodConfig.kt"}
    float learningRate -> b
    float momentum -> c
    com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod decayMethod -> d
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):71:71 -> <init>
    3:3:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):76:76 -> <init>
    4:6:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):72:74 -> <init>
    1:1:com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod():74:74 -> getDecayMethod
    1:1:float getLearningRate():72:72 -> getLearningRate
    1:1:float getMomentum():73:73 -> getMomentum
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$NesterovMomentumConfig -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$NesterovMomentumConfig:
# {"id":"sourceFile","fileName":"UpdateMethodConfig.kt"}
    float learningRate -> b
    float momentum -> c
    com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod decayMethod -> d
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):86:86 -> <init>
    3:3:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):91:91 -> <init>
    4:6:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):87:89 -> <init>
    1:1:com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod():89:89 -> getDecayMethod
    1:1:float getLearningRate():87:87 -> getLearningRate
    1:1:float getMomentum():88:88 -> getMomentum
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig:
# {"id":"sourceFile","fileName":"UpdateMethodConfig.kt"}
    float stepSize -> b
    float beta1 -> c
    float beta2 -> d
    float epsilon -> e
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):102:102 -> <init>
    3:3:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):108:108 -> <init>
    4:7:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):103:106 -> <init>
    1:1:float getBeta1():104:104 -> getBeta1
    1:1:float getBeta2():105:105 -> getBeta2
    1:1:float getEpsilon():106:106 -> getEpsilon
    1:1:float getStepSize():103:103 -> getStepSize
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RMSPropConfig -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RMSPropConfig:
# {"id":"sourceFile","fileName":"UpdateMethodConfig.kt"}
    float learningRate -> b
    float epsilon -> c
    float decay -> d
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):118:118 -> <init>
    3:3:void <init>(float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):123:123 -> <init>
    4:6:void <init>(float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):119:121 -> <init>
    1:1:float getDecay():121:121 -> getDecay
    1:1:float getEpsilon():120:120 -> getEpsilon
    1:1:float getLearningRate():119:119 -> getLearningRate
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure:
# {"id":"sourceFile","fileName":"UpdaterSupportStructure.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.Shape shape -> a
    kotlin.Lazy $cachedSerializer$delegate -> b
    1:1:void <clinit>():20:20 -> <clinit>
    1:1:void <init>(int,com.kotlinnlp.simplednn.simplemath.ndarray.Shape,kotlinx.serialization.internal.SerializationConstructorMarker):17:17 -> <init>
    2:3:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):17:18 -> <init>
    1:1:kotlin.Lazy access$get$cachedSerializer$delegate$cp():17:17 -> access$get$cachedSerializer$delegate$cp
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.Shape getShape():18:18 -> getShape
    1:1:void write$Self(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):17:17 -> write$Self
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure$Companion -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure$Companion:
# {"id":"sourceFile","fileName":"UpdaterSupportStructure.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():20:20 -> <init>
    1:1:kotlinx.serialization.KSerializer get$cachedSerializer():20:20 -> serializer
    1:1:kotlinx.serialization.KSerializer serializer():20 -> serializer
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure$Companion$1 -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.a:
# {"id":"sourceFile","fileName":"UpdaterSupportStructure.kt"}
    com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure$Companion$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/simplednn/core/functionalities/updatemethods/a;"}
    1:1:kotlinx.serialization.KSerializer invoke():20:20 -> invoke
    1:1:java.lang.Object invoke():20 -> invoke
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod:
# {"id":"sourceFile","fileName":"AdaGradMethod.kt"}
    float learningRate -> b
    float epsilon -> c
    1:1:void <init>():0:0 -> <init>
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):29:29 -> <init>
    2:2:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):29 -> <init>
    3:3:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):33:33 -> <init>
    4:4:float getLearningRate():30:30 -> <init>
    4:4:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):30 -> <init>
    5:5:float getEpsilon():31:31 -> <init>
    5:5:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):31 -> <init>
    6:8:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$AdaGradConfig):41:43 -> <init>
    9:9:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$AdaGradConfig):40:40 -> <init>
    1:1:float getEpsilon():31:31 -> getEpsilon
    1:1:float getLearningRate():30:30 -> getLearningRate
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):29:29 -> getSupportStructure$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):29 -> getSupportStructure$advancedml_release
    2:9:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():196:203 -> getSupportStructure$advancedml_release
    2:9:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):51 -> getSupportStructure$advancedml_release
    10:12:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:199 -> getSupportStructure$advancedml_release
    10:12:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):51 -> getSupportStructure$advancedml_release
    13:17:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:201 -> getSupportStructure$advancedml_release
    13:17:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):51 -> getSupportStructure$advancedml_release
    18:19:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:198 -> getSupportStructure$advancedml_release
    18:19:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):51 -> getSupportStructure$advancedml_release
    20:23:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:200 -> getSupportStructure$advancedml_release
    20:23:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):51 -> getSupportStructure$advancedml_release
    24:38:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:211 -> getSupportStructure$advancedml_release
    24:38:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):51 -> getSupportStructure$advancedml_release
    39:39:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():211:211 -> getSupportStructure$advancedml_release
    39:39:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):51 -> getSupportStructure$advancedml_release
    40:40:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():208:208 -> getSupportStructure$advancedml_release
    40:40:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):51 -> getSupportStructure$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):29:29 -> optimizeDenseErrors
    2:6:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure):80:84 -> optimizeDenseErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):29:29 -> optimizeSparseErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):29 -> optimizeSparseErrors
    2:6:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure):63:67 -> optimizeSparseErrors
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure:
# {"id":"sourceFile","fileName":"AdaGradStructure.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray secondOrderMoments -> c
    1:7:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):20:26 -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getSecondOrderMoments():26:26 -> getSecondOrderMoments
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod:
# {"id":"sourceFile","fileName":"ADAMMethod.kt"}
    float stepSize -> b
    float beta1 -> c
    float beta2 -> d
    float epsilon -> e
    int timeStep -> f
    1:1:void <init>():0:0 -> <init>
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):30:30 -> <init>
    2:2:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):30 -> <init>
    3:3:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):36:36 -> <init>
    4:4:float getStepSize():31:31 -> <init>
    4:4:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):31 -> <init>
    5:5:float getBeta1():32:32 -> <init>
    5:5:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):32 -> <init>
    6:6:float getBeta2():33:33 -> <init>
    6:6:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):33 -> <init>
    7:7:float getEpsilon():34:34 -> <init>
    7:7:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):34 -> <init>
    8:8:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):68:68 -> <init>
    9:9:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):67:67 -> <init>
    10:14:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig):44:48 -> <init>
    15:15:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig):43:43 -> <init>
    1:1:float calcAlpha():104:104 -> calcAlpha
    1:1:float getBeta1():32:32 -> getBeta1
    1:1:float getBeta2():33:33 -> getBeta2
    1:1:float getEpsilon():34:34 -> getEpsilon
    1:1:float getStepSize():31:31 -> getStepSize
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):30:30 -> getSupportStructure$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):30 -> getSupportStructure$advancedml_release
    2:9:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():196:203 -> getSupportStructure$advancedml_release
    2:9:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    10:12:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:199 -> getSupportStructure$advancedml_release
    10:12:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    13:17:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:201 -> getSupportStructure$advancedml_release
    13:17:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    18:19:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:198 -> getSupportStructure$advancedml_release
    18:19:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    20:23:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:200 -> getSupportStructure$advancedml_release
    20:23:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    24:38:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:211 -> getSupportStructure$advancedml_release
    24:38:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    39:39:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():211:211 -> getSupportStructure$advancedml_release
    39:39:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    40:40:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():208:208 -> getSupportStructure$advancedml_release
    40:40:com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    1:1:void setTimeStep(int):61:61 -> getTimeStep
    1:1:int getTimeStep():61 -> getTimeStep
    1:1:void newBatch():75:75 -> newBatch
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):30:30 -> optimizeGenericErrors
    2:11:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure):88:97 -> optimizeGenericErrors
    1:1:void setTimeStep(int):61:61 -> setTimeStep
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure:
# {"id":"sourceFile","fileName":"ADAMStructure.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray firstOrderMoments -> c
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray secondOrderMoments -> d
    1:13:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):20:32 -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getFirstOrderMoments():26:26 -> getFirstOrderMoments
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getSecondOrderMoments():32:32 -> getSecondOrderMoments
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod:
# {"id":"sourceFile","fileName":"LearningRateMethod.kt"}
    float learningRate -> b
    com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod decayMethod -> c
    float alpha -> d
    int epochCount -> e
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):28:28 -> <init>
    1:1:void <init>(float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):28 -> <init>
    2:2:void <init>(float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):32:32 -> <init>
    3:3:float getLearningRate():29:29 -> <init>
    3:3:void <init>(float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):29 -> <init>
    4:4:com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod():30:30 -> <init>
    4:4:void <init>(float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):30 -> <init>
    5:5:float getAlpha():55:55 -> <init>
    5:5:void <init>(float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):55 -> <init>
    6:8:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$LearningRateConfig):40:42 -> <init>
    9:9:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$LearningRateConfig):39:39 -> <init>
    1:1:float getAlpha():55:55 -> getAlpha
    1:1:com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod():30:30 -> getDecayMethod
    1:1:float getLearningRate():29:29 -> getLearningRate
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):28:28 -> getSupportStructure$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):28 -> getSupportStructure$advancedml_release
    2:9:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():196:203 -> getSupportStructure$advancedml_release
    2:9:com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):50 -> getSupportStructure$advancedml_release
    10:12:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:199 -> getSupportStructure$advancedml_release
    10:12:com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):50 -> getSupportStructure$advancedml_release
    13:17:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:201 -> getSupportStructure$advancedml_release
    13:17:com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):50 -> getSupportStructure$advancedml_release
    18:19:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:198 -> getSupportStructure$advancedml_release
    18:19:com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):50 -> getSupportStructure$advancedml_release
    20:23:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:200 -> getSupportStructure$advancedml_release
    20:23:com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):50 -> getSupportStructure$advancedml_release
    24:38:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:211 -> getSupportStructure$advancedml_release
    24:38:com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):50 -> getSupportStructure$advancedml_release
    39:39:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():211:211 -> getSupportStructure$advancedml_release
    39:39:com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):50 -> getSupportStructure$advancedml_release
    40:40:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():208:208 -> getSupportStructure$advancedml_release
    40:40:com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):50 -> getSupportStructure$advancedml_release
    1:4:void newEpoch():68:71 -> newEpoch
    5:5:void newEpoch():69:69 -> newEpoch
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):28:28 -> optimizeDenseErrors
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure):96:96 -> optimizeDenseErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):28:28 -> optimizeSparseErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):28 -> optimizeSparseErrors
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure):85:85 -> optimizeSparseErrors
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure:
# {"id":"sourceFile","fileName":"LearningRateStructure.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray denseErrors -> c
    1:7:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):20:26 -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getDenseErrors():26:26 -> getDenseErrors
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod:
# {"id":"sourceFile","fileName":"MomentumMethod.kt"}
    float learningRate -> b
    float momentum -> c
    com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod decayMethod -> d
    float alpha -> e
    int epochCount -> f
    1:1:void <init>():0:0 -> <init>
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):29:29 -> <init>
    2:2:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):29 -> <init>
    3:3:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):35:35 -> <init>
    4:4:float getLearningRate():30:30 -> <init>
    4:4:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):30 -> <init>
    5:5:float getMomentum():31:31 -> <init>
    5:5:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):31 -> <init>
    6:6:com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod():32:32 -> <init>
    6:6:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):32 -> <init>
    7:7:float getAlpha():59:59 -> <init>
    7:7:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):59 -> <init>
    8:11:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$MomentumConfig):43:46 -> <init>
    12:12:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$MomentumConfig):42:42 -> <init>
    1:1:float getAlpha():59:59 -> getAlpha
    1:1:com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod():32:32 -> getDecayMethod
    1:1:float getLearningRate():30:30 -> getLearningRate
    1:1:float getMomentum():31:31 -> getMomentum
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):29:29 -> getSupportStructure$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):29 -> getSupportStructure$advancedml_release
    2:9:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():196:203 -> getSupportStructure$advancedml_release
    2:9:com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    10:12:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:199 -> getSupportStructure$advancedml_release
    10:12:com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    13:17:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:201 -> getSupportStructure$advancedml_release
    13:17:com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    18:19:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:198 -> getSupportStructure$advancedml_release
    18:19:com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    20:23:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:200 -> getSupportStructure$advancedml_release
    20:23:com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    24:38:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:211 -> getSupportStructure$advancedml_release
    24:38:com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    39:39:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():211:211 -> getSupportStructure$advancedml_release
    39:39:com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    40:40:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():208:208 -> getSupportStructure$advancedml_release
    40:40:com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    1:4:void newEpoch():72:75 -> newEpoch
    5:5:void newEpoch():73:73 -> newEpoch
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):29:29 -> optimizeGenericErrors
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure):89:89 -> optimizeGenericErrors
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure:
# {"id":"sourceFile","fileName":"MomentumStructure.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray v -> c
    1:7:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):20:26 -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getV():26:26 -> getV
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod:
# {"id":"sourceFile","fileName":"NesterovMomentumMethod.kt"}
    float learningRate -> b
    float momentum -> c
    com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod decayMethod -> d
    float alpha -> e
    int epochCount -> f
    1:1:void <init>():0:0 -> <init>
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):29:29 -> <init>
    2:2:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):29 -> <init>
    3:3:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):34:34 -> <init>
    4:4:float getLearningRate():30:30 -> <init>
    4:4:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):30 -> <init>
    5:5:float getMomentum():31:31 -> <init>
    5:5:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):31 -> <init>
    6:6:com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod():32:32 -> <init>
    6:6:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):32 -> <init>
    7:7:float getAlpha():59:59 -> <init>
    7:7:void <init>(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):59 -> <init>
    8:11:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$NesterovMomentumConfig):42:45 -> <init>
    12:12:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$NesterovMomentumConfig):41:41 -> <init>
    1:1:float getAlpha():59:59 -> getAlpha
    1:1:com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod():32:32 -> getDecayMethod
    1:1:float getLearningRate():30:30 -> getLearningRate
    1:1:float getMomentum():31:31 -> getMomentum
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):29:29 -> getSupportStructure$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):29 -> getSupportStructure$advancedml_release
    2:9:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():196:203 -> getSupportStructure$advancedml_release
    2:9:com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    10:12:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:199 -> getSupportStructure$advancedml_release
    10:12:com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    13:17:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:201 -> getSupportStructure$advancedml_release
    13:17:com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    18:19:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:198 -> getSupportStructure$advancedml_release
    18:19:com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    20:23:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:200 -> getSupportStructure$advancedml_release
    20:23:com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    24:38:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:211 -> getSupportStructure$advancedml_release
    24:38:com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    39:39:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():211:211 -> getSupportStructure$advancedml_release
    39:39:com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    40:40:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():208:208 -> getSupportStructure$advancedml_release
    40:40:com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):54 -> getSupportStructure$advancedml_release
    1:4:void newEpoch():72:75 -> newEpoch
    5:5:void newEpoch():73:73 -> newEpoch
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):29:29 -> optimizeGenericErrors
    2:9:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure):90:97 -> optimizeGenericErrors
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure:
# {"id":"sourceFile","fileName":"NesterovMomentumStructure.kt"}
    kotlin.Lazy vTmp$delegate -> d
    1:7:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):20:26 -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getVTmp():26:26 -> getVTmp
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure$vTmp$2 -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.a:
# {"id":"sourceFile","fileName":"NesterovMomentumStructure.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.Shape $shape -> a
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray invoke():26:26 -> invoke
    1:1:java.lang.Object invoke():26 -> invoke
com.kotlinnlp.simplednn.core.functionalities.updatemethods.radam.RADAMMethod -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.radam.RADAMMethod:
# {"id":"sourceFile","fileName":"RADAMMethod.kt"}
    float roMax -> g
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):25:25 -> <init>
    3:27:void <init>(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):31:55 -> <init>
    28:32:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig):45:49 -> <init>
    33:33:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig):44:44 -> <init>
    1:10:float calcAlpha():62:71 -> calcAlpha
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod:
# {"id":"sourceFile","fileName":"RMSPropMethod.kt"}
    float learningRate -> b
    float epsilon -> c
    float decay -> d
    1:1:void <init>():0:0 -> <init>
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):32:32 -> <init>
    2:2:void <init>(float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker):32 -> <init>
    3:3:void <init>(float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):37:37 -> <init>
    4:4:float getLearningRate():33:33 -> <init>
    4:4:void <init>(float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):33 -> <init>
    5:5:float getEpsilon():34:34 -> <init>
    5:5:void <init>(float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):34 -> <init>
    6:6:float getDecay():35:35 -> <init>
    6:6:void <init>(float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization):35 -> <init>
    7:10:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RMSPropConfig):45:48 -> <init>
    11:11:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RMSPropConfig):44:44 -> <init>
    1:1:float getDecay():35:35 -> getDecay
    1:1:float getEpsilon():34:34 -> getEpsilon
    1:1:float getLearningRate():33:33 -> getLearningRate
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):32:32 -> getSupportStructure$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):32 -> getSupportStructure$advancedml_release
    2:9:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():196:203 -> getSupportStructure$advancedml_release
    2:9:com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    10:12:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:199 -> getSupportStructure$advancedml_release
    10:12:com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    13:17:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:201 -> getSupportStructure$advancedml_release
    13:17:com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    18:19:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:198 -> getSupportStructure$advancedml_release
    18:19:com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    20:23:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:200 -> getSupportStructure$advancedml_release
    20:23:com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    24:38:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():197:211 -> getSupportStructure$advancedml_release
    24:38:com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    39:39:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():211:211 -> getSupportStructure$advancedml_release
    39:39:com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    40:40:com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure com.kotlinnlp.simplednn.core.arrays.ParamsArray.getOrSetSupportStructure():208:208 -> getSupportStructure$advancedml_release
    40:40:com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray):56 -> getSupportStructure$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):32:32 -> optimizeDenseErrors
    2:6:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure):86:90 -> optimizeDenseErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):32:32 -> optimizeSparseErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure):32 -> optimizeSparseErrors
    2:7:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure):68:73 -> optimizeSparseErrors
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure -> com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure:
# {"id":"sourceFile","fileName":"RMSPropStructure.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray secondOrderMoments -> c
    1:7:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):20:26 -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getSecondOrderMoments():26:26 -> getSecondOrderMoments
com.kotlinnlp.simplednn.core.layers.Layer -> com.kotlinnlp.simplednn.core.layers.Layer:
# {"id":"sourceFile","fileName":"Layer.kt"}
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputArray -> a
    com.kotlinnlp.simplednn.core.layers.LayerType$Input inputType -> b
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray outputArray -> c
    com.kotlinnlp.simplednn.core.layers.LayerParameters params -> d
    com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction activationFunction -> e
    float dropout -> f
    float p -> g
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dropoutMask -> h
    com.kotlinnlp.simplednn.simplemath.ndarray.NDArray nonDroppedInput -> i
    boolean dropoutApplied -> j
    1:19:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):34:52 -> <init>
    20:20:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):34:34 -> <init>
    1:1:boolean applyDropout():213:213 -> a
    2:5:void saveNonDroppedInput():235:238 -> a
    2:5:boolean applyDropout():215 -> a
    6:11:boolean applyDropout():217:222 -> a
    1:3:void addInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):168:170 -> addInputRelevance
    1:9:void applyOutputActivationDeriv():194:202 -> applyOutputActivationDeriv
    1:3:java.util.List backward(boolean):178:180 -> backward
    4:4:void addDropoutErrors():245:245 -> backward
    4:4:java.util.List backward(boolean):183 -> backward
    5:5:void restoreInput():252:252 -> backward
    5:5:java.util.List backward(boolean):185 -> backward
    1:3:void forward():132:134 -> forward
    4:6:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):144:146 -> forward
    1:1:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getActivationFunction():39:39 -> getActivationFunction
    1:1:boolean getDenseInput():82:82 -> getDenseInput
    1:1:float getDropout():40:40 -> getDropout
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray():35:35 -> getInputArray
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType():36:36 -> getInputType
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getOutputArray():37:37 -> getOutputArray
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():38:38 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector getParamsErrorsCollector():125:125 -> getParamsErrorsCollector
    1:1:boolean getSparseInput():87:87 -> getSparseInput
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray setErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):101:101 -> setErrors
    1:1:void setInput(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):94:94 -> setInput
    1:3:void setInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):156:158 -> setInputRelevance
    1:1:void setOutputRelevance(com.kotlinnlp.simplednn.core.arrays.Norm1Array):109:109 -> setOutputRelevance
    1:1:void setParamsErrorsCollector(com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):118:118 -> setParamsErrorsCollector
com.kotlinnlp.simplednn.core.layers.LayerFactory -> com.kotlinnlp.simplednn.core.layers.LayerFactory:
# {"id":"sourceFile","fileName":"LayerFactory.kt"}
    1:1:void <init>():66:66 -> <init>
    1:276:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):87:362 -> invoke
    277:525:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):114:362 -> invoke
    526:530:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):115:119 -> invoke
    531:531:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):113:113 -> invoke
    532:787:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):103:358 -> invoke
    788:1042:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):104:358 -> invoke
    1043:1047:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):105:109 -> invoke
    1048:1048:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):103:103 -> invoke
    1049:1310:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):93:354 -> invoke
    1311:1571:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):94:354 -> invoke
    1572:1576:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):95:99 -> invoke
    1577:1577:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):93:93 -> invoke
    1578:1578:com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):87:87 -> invoke
    1579:1585:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):145:151 -> invoke
    1586:1586:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):145:145 -> invoke
    1587:1755:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):179:347 -> invoke
    1756:1757:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):342:342 -> invoke
    1758:1763:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):335:340 -> invoke
    1764:1764:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):334:334 -> invoke
    1765:1771:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):326:332 -> invoke
    1772:1772:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):325:325 -> invoke
    1773:1779:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):317:323 -> invoke
    1780:1780:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):316:316 -> invoke
    1781:1787:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):308:314 -> invoke
    1788:1788:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):307:307 -> invoke
    1789:1795:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):299:305 -> invoke
    1796:1796:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):298:298 -> invoke
    1797:1803:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):290:296 -> invoke
    1804:1804:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):289:289 -> invoke
    1805:1811:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):281:287 -> invoke
    1812:1812:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):280:280 -> invoke
    1813:1819:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):272:278 -> invoke
    1820:1820:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):271:271 -> invoke
    1821:1825:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):265:269 -> invoke
    1826:1826:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):265:265 -> invoke
    1827:1831:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):259:263 -> invoke
    1832:1832:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):259:259 -> invoke
    1833:1838:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):252:257 -> invoke
    1839:1839:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):252:252 -> invoke
    1840:1844:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):246:250 -> invoke
    1845:1845:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):246:246 -> invoke
    1846:1850:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):238:242 -> invoke
    1851:1851:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):238:238 -> invoke
    1852:1856:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):232:236 -> invoke
    1857:1857:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):232:232 -> invoke
    1858:1863:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):223:228 -> invoke
    1864:1864:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):223:223 -> invoke
    1865:1869:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):215:219 -> invoke
    1870:1870:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):215:215 -> invoke
    1871:1875:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):208:212 -> invoke
    1876:1876:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):208:208 -> invoke
    1877:1880:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):203:206 -> invoke
    1881:1881:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):203:203 -> invoke
    1882:1886:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):197:201 -> invoke
    1887:1887:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):197:197 -> invoke
    1888:1892:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):189:193 -> invoke
    1893:1893:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):189:189 -> invoke
    1894:1898:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):181:185 -> invoke
    1899:1899:com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow):181:181 -> invoke
com.kotlinnlp.simplednn.core.layers.LayerFactory$WhenMappings -> com.kotlinnlp.simplednn.core.layers.LayerFactory$WhenMappings:
# {"id":"sourceFile","fileName":"LayerFactory.kt"}
com.kotlinnlp.simplednn.core.layers.LayerInterface -> com.kotlinnlp.simplednn.core.layers.LayerInterface:
# {"id":"sourceFile","fileName":"LayerInterface.kt"}
    java.util.List sizes -> a
    com.kotlinnlp.simplednn.core.layers.LayerType$Input type -> b
    com.kotlinnlp.simplednn.core.layers.LayerType$Connection connectionType -> c
    com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction activationFunction -> d
    int size -> e
    kotlinx.serialization.KSerializer[] $childSerializers -> f
    1:1:void <clinit>():53:53 -> <clinit>
    1:4:void <init>(int,java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlinx.serialization.internal.SerializationConstructorMarker):20:23 -> <init>
    5:7:void <init>(int,java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlinx.serialization.internal.SerializationConstructorMarker):20:20 -> <init>
    38:38:void <init>(int,java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlinx.serialization.internal.SerializationConstructorMarker):51:51 -> <init>
    39:39:void <init>(int,java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlinx.serialization.internal.SerializationConstructorMarker):20:20 -> <init>
    40:71:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):20:51 -> <init>
    72:72:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker):23:23 -> <init>
    73:73:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker):21:21 -> <init>
    74:74:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker):38:38 -> <init>
    75:75:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker):36:36 -> <init>
    76:76:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):42:42 -> <init>
    77:77:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):41:41 -> <init>
    1:1:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():20:20 -> access$get$childSerializers$cp
    1:1:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getActivationFunction():25:25 -> getActivationFunction
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Connection getConnectionType():24:24 -> getConnectionType
    1:1:int getSize():51:51 -> getSize
    1:1:java.util.List getSizes():22:22 -> getSizes
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Input getType():23:23 -> getType
    1:4:void write$Self(com.kotlinnlp.simplednn.core.layers.LayerInterface,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):20:23 -> write$Self
    5:6:void write$Self(com.kotlinnlp.simplednn.core.layers.LayerInterface,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):20:20 -> write$Self
    37:37:void write$Self(com.kotlinnlp.simplednn.core.layers.LayerInterface,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):51:51 -> write$Self
    38:69:void write$Self(com.kotlinnlp.simplednn.core.layers.LayerInterface,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):20:51 -> write$Self
    70:70:void write$Self(com.kotlinnlp.simplednn.core.layers.LayerInterface,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):20:20 -> write$Self
com.kotlinnlp.simplednn.core.layers.LayerInterface$$serializer -> com.kotlinnlp.simplednn.core.layers.LayerInterface$$serializer:
# {"id":"sourceFile","fileName":"LayerInterface.kt"}
    kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor -> a
    1:1:void <clinit>():20:20 -> <clinit>
    1:1:void <init>():20:20 -> <init>
    1:1:kotlinx.serialization.KSerializer[] childSerializers():20:20 -> childSerializers
    1:1:com.kotlinnlp.simplednn.core.layers.LayerInterface deserialize(kotlinx.serialization.encoding.Decoder):20:20 -> deserialize
    2:2:java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder):20:20 -> deserialize
    1:1:kotlinx.serialization.descriptors.SerialDescriptor getDescriptor():20:20 -> getDescriptor
    1:1:void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.core.layers.LayerInterface):20:20 -> serialize
    2:2:void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object):20:20 -> serialize
    1:1:kotlinx.serialization.KSerializer[] typeParametersSerializers():20:20 -> typeParametersSerializers
com.kotlinnlp.simplednn.core.layers.LayerInterface$Companion -> com.kotlinnlp.simplednn.core.layers.LayerInterface$Companion:
# {"id":"sourceFile","fileName":"LayerInterface.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():53:53 -> <init>
    1:1:kotlinx.serialization.KSerializer serializer():53:53 -> serializer
com.kotlinnlp.simplednn.core.layers.LayerParameters -> com.kotlinnlp.simplednn.core.layers.LayerParameters:
# {"id":"sourceFile","fileName":"LayerParameters.kt"}
    int inputSize -> a
    int outputSize -> b
    com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer weightsInitializer -> c
    com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer biasesInitializer -> d
    kotlinx.serialization.KSerializer[] $childSerializers -> e
    kotlin.Lazy $cachedSerializer$delegate -> f
    1:1:void <clinit>():31:31 -> <clinit>
    1:1:kotlin.Lazy access$get$cachedSerializer$delegate$cp():23:23 -> <init>
    1:1:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,kotlinx.serialization.internal.SerializationConstructorMarker):23 -> <init>
    2:2:kotlin.Lazy access$get$cachedSerializer$delegate$cp():23:23 -> <init>
    2:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):23 -> <init>
    3:3:int getInputSize():25:25 -> <init>
    3:3:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):25 -> <init>
    4:4:int getOutputSize():26:26 -> <init>
    4:4:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):26 -> <init>
    5:6:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):27:28 -> <init>
    1:1:kotlin.Lazy access$get$cachedSerializer$delegate$cp():23:23 -> access$get$cachedSerializer$delegate$cp
    1:1:int getInputSize():25:25 -> getInputSize
    1:1:int getOutputSize():26:26 -> getOutputSize
    1:16:void initialize():58:73 -> initialize
    17:33:void initialize():59:75 -> initialize
    34:34:void initialize():63:63 -> initialize
    1:11:void setParams(java.util.List,java.util.List):68:78 -> setParams
    12:25:void setParams(java.util.List,java.util.List):68:81 -> setParams
    26:26:void setParams(java.util.List,java.util.List):69:69 -> setParams
    1:1:kotlin.Lazy access$get$cachedSerializer$delegate$cp():23:23 -> write$Self
    1:1:void write$Self(com.kotlinnlp.simplednn.core.layers.LayerParameters,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):23 -> write$Self
com.kotlinnlp.simplednn.core.layers.LayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.LayerParameters$Companion:
# {"id":"sourceFile","fileName":"LayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():31:31 -> <init>
    1:1:kotlinx.serialization.KSerializer get$cachedSerializer():31:31 -> serializer
    1:1:kotlinx.serialization.KSerializer serializer():31 -> serializer
com.kotlinnlp.simplednn.core.layers.LayerParameters$Companion$1 -> com.kotlinnlp.simplednn.core.layers.a:
# {"id":"sourceFile","fileName":"LayerParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.LayerParameters$Companion$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/simplednn/core/layers/a;"}
    1:1:kotlinx.serialization.KSerializer invoke():31:31 -> invoke
    1:1:java.lang.Object invoke():31 -> invoke
com.kotlinnlp.simplednn.core.layers.LayerParametersFactory -> com.kotlinnlp.simplednn.core.layers.LayerParametersFactory:
# {"id":"sourceFile","fileName":"LayerParametersFactory.kt"}
    1:1:void <init>():37:37 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke$default(com.kotlinnlp.simplednn.core.layers.LayerParametersFactory,java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,java.lang.Object):56:56 -> invoke
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):56 -> invoke
    2:3:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):244:245 -> invoke
    4:4:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):244:244 -> invoke
    5:6:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):234:234 -> invoke
    11:11:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):239:239 -> invoke
    12:12:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):238:238 -> invoke
    13:14:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):226:227 -> invoke
    15:15:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):225:225 -> invoke
    16:17:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):219:220 -> invoke
    18:18:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):218:218 -> invoke
    19:20:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):212:213 -> invoke
    21:21:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):211:211 -> invoke
    22:23:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):205:206 -> invoke
    24:24:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):204:204 -> invoke
    25:26:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):198:199 -> invoke
    27:27:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):197:197 -> invoke
    28:29:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):191:192 -> invoke
    30:30:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):190:190 -> invoke
    31:32:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):184:185 -> invoke
    33:33:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):183:183 -> invoke
    34:35:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):176:176 -> invoke
    39:39:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):180:180 -> invoke
    40:41:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):167:167 -> invoke
    45:45:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):171:171 -> invoke
    46:47:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):158:158 -> invoke
    51:51:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):162:162 -> invoke
    52:53:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):149:149 -> invoke
    57:57:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):153:153 -> invoke
    58:60:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):141:143 -> invoke
    61:61:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):141:141 -> invoke
    62:63:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):134:134 -> invoke
    67:67:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):138:138 -> invoke
    68:70:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):125:127 -> invoke
    71:71:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):124:124 -> invoke
    72:72:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):119:119 -> invoke
    73:73:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):117:117 -> invoke
    74:75:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):107:107 -> invoke
    79:81:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):111:113 -> invoke
    82:227:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):111:256 -> invoke
    228:229:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):92:92 -> invoke
    232:233:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):95:95 -> invoke
    237:238:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):99:100 -> invoke
    239:239:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):99:99 -> invoke
    240:241:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):80:80 -> invoke
    245:246:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):84:85 -> invoke
    247:247:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):84:84 -> invoke
    248:249:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):67:67 -> invoke
    254:254:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):72:72 -> invoke
    255:255:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):71:71 -> invoke
    256:257:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):59:60 -> invoke
    258:258:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):58:58 -> invoke
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters invoke$default(com.kotlinnlp.simplednn.core.layers.LayerParametersFactory,java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,java.lang.Object):51:51 -> invoke$default
com.kotlinnlp.simplednn.core.layers.LayerParametersFactory$WhenMappings -> com.kotlinnlp.simplednn.core.layers.LayerParametersFactory$WhenMappings:
# {"id":"sourceFile","fileName":"LayerParametersFactory.kt"}
com.kotlinnlp.simplednn.core.layers.LayerType -> com.kotlinnlp.simplednn.core.layers.LayerType:
# {"id":"sourceFile","fileName":"LayerType.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():13:13 -> <init>
com.kotlinnlp.simplednn.core.layers.LayerType$Connection -> com.kotlinnlp.simplednn.core.layers.LayerType$Connection:
# {"id":"sourceFile","fileName":"LayerType.kt"}
    com.kotlinnlp.simplednn.core.layers.LayerType$Property property -> a
    com.kotlinnlp.simplednn.core.layers.LayerType$Connection[] $VALUES -> b
    kotlin.enums.EnumEntries $ENTRIES -> c
    1:22:void <clinit>():29:50 -> <clinit>
    23:23:com.kotlinnlp.simplednn.core.layers.LayerType$Connection[] $values():0:0 -> <clinit>
    23:23:void <clinit>():50 -> <clinit>
    24:24:void <clinit>():50:50 -> <clinit>
    1:1:void <init>(java.lang.String,int,com.kotlinnlp.simplednn.core.layers.LayerType$Property):28:28 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Property getProperty():28:28 -> getProperty
com.kotlinnlp.simplednn.core.layers.LayerType$Input -> com.kotlinnlp.simplednn.core.layers.LayerType$Input:
# {"id":"sourceFile","fileName":"LayerType.kt"}
    com.kotlinnlp.simplednn.core.layers.LayerType$Input[] $VALUES -> a
    kotlin.enums.EnumEntries $ENTRIES -> b
    1:3:void <clinit>():57:59 -> <clinit>
    4:4:com.kotlinnlp.simplednn.core.layers.LayerType$Input[] $values():0:0 -> <clinit>
    4:4:void <clinit>():59 -> <clinit>
    5:5:void <clinit>():59:59 -> <clinit>
    1:1:void <init>(java.lang.String,int):56:56 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;)V"}
com.kotlinnlp.simplednn.core.layers.LayerType$Property -> com.kotlinnlp.simplednn.core.layers.LayerType$Property:
# {"id":"sourceFile","fileName":"LayerType.kt"}
    com.kotlinnlp.simplednn.core.layers.LayerType$Property[] $VALUES -> a
    kotlin.enums.EnumEntries $ENTRIES -> b
    1:4:void <clinit>():19:22 -> <clinit>
    5:5:com.kotlinnlp.simplednn.core.layers.LayerType$Property[] $values():0:0 -> <clinit>
    5:5:void <clinit>():22 -> <clinit>
    6:6:void <clinit>():22:22 -> <clinit>
    1:1:void <init>(java.lang.String,int):18:18 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;)V"}
com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers -> com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers:
# {"id":"sourceFile","fileName":"RecurrentStackedLayers.kt"}
    com.kotlinnlp.simplednn.core.layers.StatesWindow statesWindow -> d
    java.util.List useInitHidden -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List initHiddenLayers -> f
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,com.kotlinnlp.simplednn.core.layers.StatesWindow):29:29 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.StatesWindow getStatesWindow():28:28 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,com.kotlinnlp.simplednn.core.layers.StatesWindow):28 -> <init>
    3:58:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,com.kotlinnlp.simplednn.core.layers.StatesWindow):56:111 -> <init>
    59:114:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,com.kotlinnlp.simplednn.core.layers.StatesWindow):56:111 -> <init>
    115:121:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,com.kotlinnlp.simplednn.core.layers.StatesWindow):56:62 -> <init>
    122:122:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,com.kotlinnlp.simplednn.core.layers.StatesWindow):49:49 -> <init>
    123:123:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,com.kotlinnlp.simplednn.core.layers.StatesWindow):47:47 -> <init>
    1:36:java.util.List getInitHiddenErrors():91:126 -> getInitHiddenErrors
    37:72:java.util.List getInitHiddenErrors():91:126 -> getInitHiddenErrors
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getNextState():106:106 -> getNextState
    1:4:com.kotlinnlp.simplednn.core.layers.Layer getPrevState():98:101 -> getPrevState
    1:1:com.kotlinnlp.simplednn.core.layers.StatesWindow getStatesWindow():28:28 -> getStatesWindow
    1:2:void setInitHidden(java.util.List):71:72 -> setInitHidden
    3:46:void setInitHidden(java.util.List):71:114 -> setInitHidden
    47:89:void setInitHidden(java.util.List):76:118 -> setInitHidden
    90:127:void setInitHidden(java.util.List):81:118 -> setInitHidden
    128:169:void setInitHidden(java.util.List):81:122 -> setInitHidden
    170:211:void setInitHidden(java.util.List):81:122 -> setInitHidden
    212:212:void setInitHidden(java.util.List):81:81 -> setInitHidden
com.kotlinnlp.simplednn.core.layers.StackedLayers -> com.kotlinnlp.simplednn.core.layers.StackedLayers:
# {"id":"sourceFile","fileName":"StackedLayers.kt"}
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters params -> a
    java.util.List layers -> b
    int curLayerIndex -> c
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List):27:27 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getParams():28:28 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List):28 -> <init>
    3:3:java.util.List getLayers():47:47 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List):47 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float):41:41 -> <init>
    5:5:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float):39:39 -> <init>
    1:10:java.util.List backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,boolean):168:177 -> backward
    11:15:java.util.List backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,boolean):176:180 -> backward
    1:1:java.util.List backward$default(com.kotlinnlp.simplednn.core.layers.StackedLayers,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,boolean,int,java.lang.Object):166:166 -> backward$default
    1:54:java.util.List buildLayers(java.util.List):224:277 -> buildLayers
    55:56:java.util.List buildLayers(java.util.List):226:226 -> buildLayers
    59:110:java.util.List buildLayers(java.util.List):229:280 -> buildLayers
    111:112:java.util.List buildLayers(java.util.List):229:229 -> buildLayers
    115:130:java.util.List buildLayers(java.util.List):232:247 -> buildLayers
    131:144:java.util.List buildLayers(java.util.List):242:255 -> buildLayers
    145:145:java.util.List buildLayers(java.util.List):249:249 -> buildLayers
    146:146:java.util.List buildLayers(java.util.List):239:239 -> buildLayers
    147:148:java.util.List buildLayers(java.util.List):233:234 -> buildLayers
    149:149:java.util.List buildLayers(java.util.List):232:232 -> buildLayers
    1:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):75:82 -> forward
    9:16:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters):95:102 -> forward
    17:168:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List):115:266 -> forward
    169:177:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List):120:128 -> forward
    178:178:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List):115:115 -> forward
    179:306:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters):142:269 -> forward
    307:315:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters):147:155 -> forward
    316:316:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters):142:142 -> forward
    1:1:void setCurLayerIndex(int):52:52 -> getCurLayerIndex
    1:1:int getCurLayerIndex():52 -> getCurLayerIndex
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getInputLayer():58:58 -> getInputLayer
    1:1:java.util.List getLayers():47:47 -> getLayers
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getOutputLayer():64:64 -> getOutputLayer
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getParams():28:28 -> getParams
    1:79:void propagateRelevance(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,com.kotlinnlp.simplednn.core.arrays.DistributionArray):194:272 -> propagateRelevance
    80:81:void propagateRelevance(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,com.kotlinnlp.simplednn.core.arrays.DistributionArray):194:194 -> propagateRelevance
    85:89:void propagateRelevance(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,com.kotlinnlp.simplednn.core.arrays.DistributionArray):198:202 -> propagateRelevance
    1:1:void setCurLayerIndex(int):52:52 -> setCurLayerIndex
    1:64:void setParamsErrorsCollector(com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):211:274 -> setParamsErrorsCollector
    65:65:void setParamsErrorsCollector(com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):211:211 -> setParamsErrorsCollector
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters -> com.kotlinnlp.simplednn.core.layers.StackedLayersParameters:
# {"id":"sourceFile","fileName":"StackedLayersParameters.kt"}
    java.util.List layersConfiguration -> a
    com.kotlinnlp.simplednn.core.layers.LayerType$Input inputType -> b
    boolean sparseInput -> c
    int inputSize -> d
    java.util.List inputsSize -> e
    int outputSize -> f
    java.util.List paramsPerLayer -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    int numOfLayers -> h
    1:1:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):26:26 -> <init>
    1:1:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):26 -> <init>
    2:2:java.util.List getLayersConfiguration():27:27 -> <init>
    2:2:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):27 -> <init>
    3:3:com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType():72:72 -> <init>
    3:3:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):72 -> <init>
    4:4:boolean getSparseInput():77:77 -> <init>
    4:4:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):77 -> <init>
    5:5:int getInputSize():82:82 -> <init>
    5:5:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):82 -> <init>
    6:6:java.util.List getInputsSize():87:87 -> <init>
    6:6:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):87 -> <init>
    7:7:int getOutputSize():92:92 -> <init>
    7:7:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):92 -> <init>
    8:8:java.util.List getParamsPerLayer():97:97 -> <init>
    8:8:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):97 -> <init>
    9:15:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):98:104 -> <init>
    16:16:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):98:98 -> <init>
    17:17:java.util.List getParamsPerLayer():97:97 -> <init>
    17:17:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):97 -> <init>
    18:18:int getNumOfLayers():110:110 -> <init>
    18:18:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):110 -> <init>
    19:20:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):28:29 -> <init>
    21:21:void <init>(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):26:26 -> <init>
    22:23:void <init>(com.kotlinnlp.simplednn.core.layers.LayerInterface[],com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):61:62 -> <init>
    24:24:void <init>(com.kotlinnlp.simplednn.core.layers.LayerInterface[],com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):59:59 -> <init>
    25:25:void <init>(com.kotlinnlp.simplednn.core.layers.LayerInterface[],com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):64:64 -> <init>
    26:26:void <init>(com.kotlinnlp.simplednn.core.layers.LayerInterface[],com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):63:63 -> <init>
    1:1:int getInputSize():82:82 -> getInputSize
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType():72:72 -> getInputType
    1:1:java.util.List getInputsSize():87:87 -> getInputsSize
    1:1:java.util.List getLayersConfiguration():27:27 -> getLayersConfiguration
    1:1:int getNumOfLayers():110:110 -> getNumOfLayers
    1:1:int getOutputSize():92:92 -> getOutputSize
    1:12:java.util.List getParams():145:156 -> getParams
    13:24:java.util.List getParams():145:156 -> getParams
    25:36:java.util.List getParams():145:156 -> getParams
    37:51:java.util.List getParams():146:160 -> getParams
    52:66:java.util.List getParams():146:160 -> getParams
    67:78:java.util.List getParams():145:156 -> getParams
    1:1:java.util.List getParamsPerLayer():97:97 -> getParamsPerLayer
    1:1:boolean getSparseInput():77:77 -> getSparseInput
    1:17:void setParams(java.util.List):136:152 -> setParams
    18:19:void setParams(java.util.List):140:141 -> setParams
    20:20:void setParams(java.util.List):138:138 -> setParams
    21:21:void setParams(java.util.List):136:136 -> setParams
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters$Companion -> com.kotlinnlp.simplednn.core.layers.StackedLayersParameters$Companion:
# {"id":"sourceFile","fileName":"StackedLayersParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():32:32 -> <init>
com.kotlinnlp.simplednn.core.layers.StatesWindow -> com.kotlinnlp.simplednn.core.layers.StatesWindow:
# {"id":"sourceFile","fileName":"StatesWindow.kt"}
    1:1:void <init>():17:17 -> <init>
com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper -> com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper:
# {"id":"sourceFile","fileName":"BackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.Layer layer -> a
    com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector paramsErrorsCollector -> b
    java.util.Set touchedErrors -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/LinkedHashSet;"}
    1:16:void <init>(com.kotlinnlp.simplednn.core.layers.Layer):20:35 -> <init>
    1:5:java.util.List backward(boolean):59:63 -> backward
    1:1:java.util.List backward$default(com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper,boolean,int,java.lang.Object):57:57 -> backward$default
    1:1:void execBackward$default(com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper,boolean,int,java.lang.Object):72:72 -> execBackward$default
    1:3:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors getErrors(com.kotlinnlp.simplednn.core.arrays.ParamsArray):91:93 -> getErrors
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():21:21 -> getLayer
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector getParamsErrorsCollector():47:47 -> getParamsErrorsCollector
    1:1:void setParamsErrorsCollector(com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):42:42 -> setParamsErrorsCollector
com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper -> com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper:
# {"id":"sourceFile","fileName":"ForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.Layer layer -> a
    1:2:void <init>(com.kotlinnlp.simplednn.core.layers.Layer):20:21 -> <init>
    1:3:void addRecurrentContribution(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):93:95 -> addRecurrentContribution
    1:1:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):37:37 -> forward
    1:15:void forwardArray(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):55:69 -> forwardArray
    1:1:void forwardArray$default(com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,java.lang.Object):49:49 -> forwardArray$default
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector -> com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector:
# {"id":"sourceFile","fileName":"ParamsErrorsCollector.kt"}
    java.util.Map paramsErrorsMap -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/LinkedHashMap;"}
    1:6:void <init>():16:21 -> <init>
    1:1:void clear():42:42 -> clear
    1:1:java.util.List getAll():37:37 -> getAll
    1:14:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors getErrors(com.kotlinnlp.simplednn.core.arrays.ParamsArray):32:45 -> getErrors
    15:31:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors getErrors(com.kotlinnlp.simplednn.core.arrays.ParamsArray):32:48 -> getErrors
    32:32:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors getErrors(com.kotlinnlp.simplednn.core.arrays.ParamsArray):46:46 -> getErrors
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper -> com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper:
# {"id":"sourceFile","fileName":"RelevanceHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.Layer layer -> a
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.Layer):19:19 -> <init>
    1:1:void addInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):37:37 -> addInputRelevance
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    1:1:void setInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):27:27 -> setInputRelevance
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils -> com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils:
# {"id":"sourceFile","fileName":"RelevanceUtils.kt"}
    1:1:void <init>():16:16 -> <init>
    1:11:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateRelevanceOfArray(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):38:48 -> calculateRelevanceOfArray
    1:11:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateRelevanceOfDenseArray(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):70:80 -> calculateRelevanceOfDenseArray
    1:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRelevancePartition1(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int):102:106 -> getRelevancePartition1
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRelevancePartition1$default(com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,int,java.lang.Object):96:96 -> getRelevancePartition1$default
    1:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRelevancePartition2(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int):122:125 -> getRelevancePartition2
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRelevancePartition2$default(com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,int,java.lang.Object):117:117 -> getRelevancePartition2$default
com.kotlinnlp.simplednn.core.layers.models.LinearParams -> com.kotlinnlp.simplednn.core.layers.models.LinearParams:
# {"id":"sourceFile","fileName":"LinearParams.kt"}
    int inputSize -> a
    int outputSize -> b
    boolean sparseInput -> c
    com.kotlinnlp.simplednn.core.arrays.ParamsArray biases -> d
    com.kotlinnlp.simplednn.core.arrays.ParamsArray weights -> e
    1:2:void <init>(int,int,int,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,kotlinx.serialization.internal.SerializationConstructorMarker):19:19 -> <init>
    21:21:void <init>(int,int,int,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,kotlinx.serialization.internal.SerializationConstructorMarker):38:38 -> <init>
    22:52:void <init>(int,int,int,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,kotlinx.serialization.internal.SerializationConstructorMarker):19:49 -> <init>
    53:53:void <init>(int,int,int,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,kotlinx.serialization.internal.SerializationConstructorMarker):43:43 -> <init>
    54:54:void <init>(int,int,int,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,kotlinx.serialization.internal.SerializationConstructorMarker):19:19 -> <init>
    55:85:void <init>(int,int,boolean):19:49 -> <init>
    86:86:void <init>(int,int,boolean):43:43 -> <init>
    87:87:void <init>(int,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):20:20 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getBiases():38:38 -> getBiases
    1:1:int getInputSize():21:21 -> getInputSize
    1:1:int getOutputSize():22:22 -> getOutputSize
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getWeights():43:43 -> getWeights
    1:3:void write$Self(com.kotlinnlp.simplednn.core.layers.models.LinearParams,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):19:19 -> write$Self
    22:22:void write$Self(com.kotlinnlp.simplednn.core.layers.models.LinearParams,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):38:38 -> write$Self
    23:42:void write$Self(com.kotlinnlp.simplednn.core.layers.models.LinearParams,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):19:38 -> write$Self
    43:44:void write$Self(com.kotlinnlp.simplednn.core.layers.models.LinearParams,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):19:19 -> write$Self
    68:68:void write$Self(com.kotlinnlp.simplednn.core.layers.models.LinearParams,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):43:43 -> write$Self
    69:70:void write$Self(com.kotlinnlp.simplednn.core.layers.models.LinearParams,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):19:19 -> write$Self
    98:100:void write$Self(com.kotlinnlp.simplednn.core.layers.models.LinearParams,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):47:49 -> write$Self
    101:101:void write$Self(com.kotlinnlp.simplednn.core.layers.models.LinearParams,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):43:43 -> write$Self
    102:102:void write$Self(com.kotlinnlp.simplednn.core.layers.models.LinearParams,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):19:19 -> write$Self
com.kotlinnlp.simplednn.core.layers.models.LinearParams$$serializer -> com.kotlinnlp.simplednn.core.layers.models.LinearParams$$serializer:
# {"id":"sourceFile","fileName":"LinearParams.kt"}
    kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor -> a
    1:1:void <clinit>():19:19 -> <clinit>
    1:1:void <init>():19:19 -> <init>
    1:1:kotlinx.serialization.KSerializer[] childSerializers():19:19 -> childSerializers
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams deserialize(kotlinx.serialization.encoding.Decoder):19:19 -> deserialize
    2:2:java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder):19:19 -> deserialize
    1:1:kotlinx.serialization.descriptors.SerialDescriptor getDescriptor():19:19 -> getDescriptor
    1:1:void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.core.layers.models.LinearParams):19:19 -> serialize
    2:2:void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object):19:19 -> serialize
    1:1:kotlinx.serialization.KSerializer[] typeParametersSerializers():19:19 -> typeParametersSerializers
com.kotlinnlp.simplednn.core.layers.models.LinearParams$Companion -> com.kotlinnlp.simplednn.core.layers.models.LinearParams$Companion:
# {"id":"sourceFile","fileName":"LinearParams.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():26:26 -> <init>
    1:1:kotlinx.serialization.KSerializer serializer():26:26 -> serializer
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.attention.AttentionBackwardHelper:
# {"id":"sourceFile","fileName":"AttentionBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer):21:21 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer getLayer():20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer):20 -> <init>
    1:8:void setAttentionErrors():58:65 -> execBackward
    1:8:void execBackward(boolean):43 -> execBackward
    9:9:void execBackward(boolean):45:45 -> execBackward
    10:10:void touchParamsErrors():74:74 -> execBackward
    10:10:void execBackward(boolean):46 -> execBackward
    11:20:void assignLayerGradients():84:93 -> execBackward
    11:20:void execBackward(boolean):49 -> execBackward
    21:21:void assignLayerGradients():88:88 -> execBackward
    21:21:void execBackward(boolean):49 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.attention.AttentionForwardHelper:
# {"id":"sourceFile","fileName":"AttentionForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer):21:21 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer getLayer():20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer):20 -> <init>
    1:14:void forward():32:45 -> forward
    15:15:void forward():39:39 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer -> com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer:
# {"id":"sourceFile","fileName":"AttentionLayer.kt"}
    java.util.List inputArrays -> k
    java.util.List attentionArrays -> l
    com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters params -> m
    com.kotlinnlp.simplednn.core.layers.models.attention.AttentionForwardHelper forwardHelper -> n
    com.kotlinnlp.simplednn.core.layers.models.attention.AttentionBackwardHelper backwardHelper -> o
    com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer attentionMechanism -> p
    1:1:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker):37:37 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():32:32 -> <init>
    2:2:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker):32 -> <init>
    3:5:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):39:41 -> <init>
    6:6:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):38:38 -> <init>
    7:7:java.util.List getInputArrays():33:33 -> <init>
    7:7:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):33 -> <init>
    8:8:java.util.List getAttentionArrays():35:35 -> <init>
    8:8:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):35 -> <init>
    9:9:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters getParams():36:36 -> <init>
    9:9:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):36 -> <init>
    10:10:com.kotlinnlp.simplednn.core.layers.models.attention.AttentionForwardHelper getForwardHelper$advancedml_release():50:50 -> <init>
    10:10:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):50 -> <init>
    11:11:com.kotlinnlp.simplednn.core.layers.models.attention.AttentionBackwardHelper getBackwardHelper$advancedml_release():55:55 -> <init>
    11:11:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):55 -> <init>
    12:12:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer getAttentionMechanism$advancedml_release():65:65 -> <init>
    12:12:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):65 -> <init>
    13:14:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):68:69 -> <init>
    15:15:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer getAttentionMechanism$advancedml_release():65:65 -> <init>
    15:15:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):65 -> <init>
    16:16:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):71:71 -> <init>
    17:49:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):70:102 -> <init>
    50:51:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):96:96 -> <init>
    52:52:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):91:91 -> <init>
    53:53:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):90:90 -> <init>
    54:54:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):89:89 -> <init>
    1:1:java.util.List getAttentionArrays():35:35 -> getAttentionArrays
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getAttentionMatrix():82:82 -> getAttentionMatrix
    1:1:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer getAttentionMechanism$advancedml_release():65:65 -> getAttentionMechanism$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getAttentionScores():77:77 -> getAttentionScores
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():32:32 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.AttentionBackwardHelper getBackwardHelper$advancedml_release():55:55 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():32:32 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():32 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.AttentionForwardHelper getForwardHelper$advancedml_release():50:50 -> getForwardHelper$advancedml_release
    1:1:java.util.List getInputArrays():33:33 -> getInputArrays
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():32:32 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():32 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters getParams():36:36 -> getParams
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismBackwardHelper:
# {"id":"sourceFile","fileName":"AttentionMechanismBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer):20:20 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer getLayer():19:19 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer):19 -> <init>
    1:1:void execBackward(boolean):30:30 -> execBackward
    2:4:void assignParamsGradients():45:47 -> execBackward
    2:4:void execBackward(boolean):32 -> execBackward
    5:6:void assignAttentionMatrixErrors():55:56 -> execBackward
    5:6:void execBackward(boolean):33 -> execBackward
    7:7:void assignAttentionMatrixErrors():55:55 -> execBackward
    7:7:void execBackward(boolean):33 -> execBackward
    8:15:void assignLayerGradients():64:71 -> execBackward
    8:15:void execBackward(boolean):36 -> execBackward
    16:16:void assignLayerGradients():65:65 -> execBackward
    16:16:void execBackward(boolean):36 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():18:18 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer getLayer():19:19 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismForwardHelper:
# {"id":"sourceFile","fileName":"AttentionMechanismForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer):20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer):19:19 -> <init>
    1:2:void forward():32:33 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():18:18 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer getLayer():19:19 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer -> com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer:
# {"id":"sourceFile","fileName":"AttentionMechanismLayer.kt"}
    java.util.List inputArrays -> k
    com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters params -> l
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray attentionMatrix -> m
    com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismForwardHelper forwardHelper -> n
    com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismBackwardHelper backwardHelper -> o
    1:1:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker):31:31 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():27:27 -> <init>
    2:2:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker):27 -> <init>
    3:5:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):33:35 -> <init>
    6:6:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):32:32 -> <init>
    7:7:java.util.List getInputArrays():28:28 -> <init>
    7:7:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):28 -> <init>
    8:8:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters getParams():30:30 -> <init>
    8:8:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):30 -> <init>
    9:9:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getAttentionMatrix$advancedml_release():44:44 -> <init>
    9:9:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):44 -> <init>
    10:45:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):45:80 -> <init>
    46:81:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):45:80 -> <init>
    82:82:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):45:45 -> <init>
    83:83:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getAttentionMatrix$advancedml_release():44:44 -> <init>
    83:83:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):44 -> <init>
    84:84:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismForwardHelper getForwardHelper$advancedml_release():51:51 -> <init>
    84:84:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):51 -> <init>
    85:85:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismBackwardHelper getBackwardHelper$advancedml_release():56:56 -> <init>
    85:85:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):56 -> <init>
    86:102:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):68:84 -> <init>
    103:104:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):69:70 -> <init>
    105:110:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):69:74 -> <init>
    111:111:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):68:68 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getAttentionMatrix$advancedml_release():44:44 -> getAttentionMatrix$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():27:27 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismBackwardHelper getBackwardHelper$advancedml_release():56:56 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():27:27 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():27 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismForwardHelper getForwardHelper$advancedml_release():51:51 -> getForwardHelper$advancedml_release
    1:1:java.util.List getInputArrays():28:28 -> getInputArrays
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():27:27 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():27 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters getParams():30:30 -> getParams
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters:
# {"id":"sourceFile","fileName":"AttentionMechanismLayerParameters.kt"}
    com.kotlinnlp.simplednn.core.arrays.ParamsArray contextVector -> g
    java.util.List weightsList -> h
    java.util.List biasesList -> i
    1:1:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):24:24 -> <init>
    2:2:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):22:22 -> <init>
    3:38:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):26:61 -> <init>
    1:1:java.util.List getBiasesList():55:55 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getContextVector():45:45 -> getContextVector
    1:1:java.util.List getWeightsList():50:50 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters$Companion:
# {"id":"sourceFile","fileName":"AttentionMechanismLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():33:33 -> <init>
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper:
# {"id":"sourceFile","fileName":"ScaledDotAttentionBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer):23:23 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer getLayer():22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer):22 -> <init>
    1:49:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignParamsGradients$sumRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):100:148 -> a
    50:96:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignParamsGradients$sumRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):103:149 -> a
    97:97:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignParamsGradients$sumRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):104:104 -> a
    1:1:void execBackward(boolean):33:33 -> execBackward
    2:7:void assignValuesGradients(kotlin.sequences.Sequence):52:57 -> execBackward
    2:7:void execBackward(boolean):35 -> execBackward
    8:21:void assignAttentionGradients(kotlin.sequences.Sequence):68:81 -> execBackward
    8:21:void execBackward(boolean):36 -> execBackward
    22:35:void assignAttentionGradients(kotlin.sequences.Sequence):74:87 -> execBackward
    22:35:void execBackward(boolean):36 -> execBackward
    36:47:void assignParamsGradients():111:122 -> execBackward
    36:47:void execBackward(boolean):38 -> execBackward
    48:64:void assignInputGradients():130:146 -> execBackward
    48:64:void execBackward(boolean):41 -> execBackward
    65:66:void assignInputGradients():140:141 -> execBackward
    65:66:void execBackward(boolean):41 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():21:21 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer getLayer():22:22 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper$assignAttentionGradients$attentionErrors$1 -> com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.a:
# {"id":"sourceFile","fileName":"ScaledDotAttentionBackwardHelper.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray $v -> a
    1:1:java.lang.Object invoke(java.lang.Object):72:72 -> invoke
    2:74:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray invoke(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):0:72 -> invoke
    2:74:java.lang.Object invoke(java.lang.Object):72 -> invoke
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper$assignAttentionGradients$attentionInnerErrors$1 -> com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.b:
# {"id":"sourceFile","fileName":"ScaledDotAttentionBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper this$0 -> a
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):76:76 -> invoke
    2:81:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray invoke(int,kotlin.Pair):0:79 -> invoke
    2:81:java.lang.Object invoke(java.lang.Object,java.lang.Object):76 -> invoke
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper$execBackward$outputErrors$1 -> com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.c:
# {"id":"sourceFile","fileName":"ScaledDotAttentionBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper$execBackward$outputErrors$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/simplednn/core/layers/models/attention/scaleddot/c;"}
    1:1:java.lang.Object invoke(java.lang.Object):33:33 -> invoke
    2:35:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray invoke(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):0:33 -> invoke
    2:35:java.lang.Object invoke(java.lang.Object):33 -> invoke
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionForwardHelper:
# {"id":"sourceFile","fileName":"ScaledDotAttentionForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer):21:21 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer getLayer():20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer):20 -> <init>
    1:31:void forwardInputs$addBias(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):60:90 -> a
    32:62:void forwardInputs$addBias(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):61:91 -> a
    63:63:void forwardInputs$addBias(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):62:62 -> a
    1:13:void forwardInputs():67:79 -> forward
    1:13:void forward():31 -> forward
    14:66:void forward():33:85 -> forward
    67:114:void forward():38:85 -> forward
    115:165:void forward():38:88 -> forward
    166:168:void forward():40:42 -> forward
    169:171:void forward():41:43 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer -> com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer:
# {"id":"sourceFile","fileName":"ScaledDotAttentionLayer.kt"}
    java.util.List inputArrays -> k
    com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters params -> l
    float attentionDropout -> m
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputMatrix -> n
    java.util.List outputArrays -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray queries -> p
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray keys -> q
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray values -> r
    java.util.List dropoutMasks -> s
    com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask dropoutMaskFull -> t
    com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionForwardHelper forwardHelper -> u
    com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper backwardHelper -> v
    1:1:float access$getAttentionDropout$p(com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer):27:27 -> <init>
    1:1:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float,int,kotlin.jvm.internal.DefaultConstructorMarker):27 -> <init>
    2:4:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):32:34 -> <init>
    5:5:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):31:31 -> <init>
    6:6:java.util.List getInputArrays():28:28 -> <init>
    6:6:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):28 -> <init>
    7:7:com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters getParams():29:29 -> <init>
    7:7:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):29 -> <init>
    8:8:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float,int,kotlin.jvm.internal.DefaultConstructorMarker):30:30 -> <init>
    8:8:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):30 -> <init>
    9:110:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):44:145 -> <init>
    111:212:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):44:145 -> <init>
    213:213:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):44:44 -> <init>
    214:214:java.util.List getOutputArrays():49:49 -> <init>
    214:214:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):49 -> <init>
    215:217:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):147:149 -> <init>
    218:317:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):50:149 -> <init>
    318:318:java.util.List getOutputArrays():49:49 -> <init>
    318:318:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):49 -> <init>
    319:331:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):57:69 -> <init>
    332:332:void setDropoutMasks$advancedml_release(java.util.List):74:74 -> <init>
    332:332:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):74 -> <init>
    333:404:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):81:152 -> <init>
    405:480:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):81:156 -> <init>
    481:481:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):83:83 -> <init>
    482:482:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):80:80 -> <init>
    483:483:void setDropoutMaskFull$advancedml_release(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):79:79 -> <init>
    483:483:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):79 -> <init>
    484:484:com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionForwardHelper getForwardHelper$advancedml_release():100:100 -> <init>
    484:484:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):100 -> <init>
    485:485:com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper getBackwardHelper$advancedml_release():105:105 -> <init>
    485:485:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):105 -> <init>
    486:530:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):116:160 -> <init>
    531:532:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):117:118 -> <init>
    533:533:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):117:117 -> <init>
    534:534:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float):116:116 -> <init>
    1:1:float access$getAttentionDropout$p(com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer):27:27 -> access$getAttentionDropout$p
    1:1:java.util.List buildDropoutMasks():126:126 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ljava/util/ArrayList;"}
    2:15:java.util.List buildDropoutMasks():125:138 -> b
    16:16:java.util.List buildDropoutMasks():125:125 -> b
    1:1:void setAttention$advancedml_release(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):90:90 -> getAttention$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getAttention$advancedml_release():90 -> getAttention$advancedml_release
    1:1:void setAttentionAct$advancedml_release(java.util.List):95:95 -> getAttentionAct$advancedml_release
    1:1:java.util.List getAttentionAct$advancedml_release():95 -> getAttentionAct$advancedml_release
    1:1:float access$getAttentionDropout$p(com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer):27:27 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():27 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper getBackwardHelper$advancedml_release():105:105 -> getBackwardHelper$advancedml_release
    1:1:void setDropoutMaskFull$advancedml_release(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):79:79 -> getDropoutMaskFull$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask getDropoutMaskFull$advancedml_release():79 -> getDropoutMaskFull$advancedml_release
    1:1:void setDropoutMasks$advancedml_release(java.util.List):74:74 -> getDropoutMasks$advancedml_release
    1:1:java.util.List getDropoutMasks$advancedml_release():74 -> getDropoutMasks$advancedml_release
    1:1:float access$getAttentionDropout$p(com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer):27:27 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():27 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionForwardHelper getForwardHelper$advancedml_release():100:100 -> getForwardHelper$advancedml_release
    1:1:java.util.List getInputArrays():28:28 -> getInputArrays
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputMatrix():43:43 -> getInputMatrix
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getKeys$advancedml_release():62:62 -> getKeys$advancedml_release
    1:1:java.util.List getOutputArrays():49:49 -> getOutputArrays
    1:1:float access$getAttentionDropout$p(com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer):27:27 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():27 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters getParams():29:29 -> getParams
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getQueries$advancedml_release():56:56 -> getQueries$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getValues$advancedml_release():68:68 -> getValues$advancedml_release
    1:1:void setAttention$advancedml_release(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):90:90 -> setAttention$advancedml_release
    1:1:void setAttentionAct$advancedml_release(java.util.List):95:95 -> setAttentionAct$advancedml_release
    1:1:void setDropoutMaskFull$advancedml_release(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):79:79 -> setDropoutMaskFull$advancedml_release
    1:1:void setDropoutMasks$advancedml_release(java.util.List):74:74 -> setDropoutMasks$advancedml_release
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer$buildDropoutMasks$1$activeIndices$1 -> com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.d:
# {"id":"sourceFile","fileName":"ScaledDotAttentionLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer$buildDropoutMasks$1$activeIndices$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/simplednn/core/layers/models/attention/scaleddot/d;"}
    1:1:java.lang.Object invoke(java.lang.Object):131:131 -> invoke
    2:2:kotlin.Pair invoke(int):131:131 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):131 -> invoke
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer$buildDropoutMasks$1$activeIndices$2 -> com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.e:
# {"id":"sourceFile","fileName":"ScaledDotAttentionLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer this$0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):132:132 -> invoke
    2:134:java.lang.Boolean invoke(kotlin.Pair):0:132 -> invoke
    2:134:java.lang.Object invoke(java.lang.Object):132 -> invoke
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer$buildDropoutMasks$1$activeIndices$3 -> com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.f:
# {"id":"sourceFile","fileName":"ScaledDotAttentionLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer$buildDropoutMasks$1$activeIndices$3 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/simplednn/core/layers/models/attention/scaleddot/f;"}
    1:1:java.lang.Object invoke(java.lang.Object):133:133 -> invoke
    2:135:java.lang.Integer invoke(kotlin.Pair):0:133 -> invoke
    2:135:java.lang.Object invoke(java.lang.Object):133 -> invoke
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters:
# {"id":"sourceFile","fileName":"ScaledDotAttentionLayerParameters.kt"}
    int attentionSize -> g
    float attentionFactor -> h
    com.kotlinnlp.simplednn.core.layers.models.LinearParams queries -> i
    com.kotlinnlp.simplednn.core.layers.models.LinearParams keys -> j
    com.kotlinnlp.simplednn.core.layers.models.LinearParams values -> k
    java.util.List weightsList -> l
    java.util.List biasesList -> m
    1:2:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):30:31 -> <init>
    3:3:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):26:26 -> <init>
    4:4:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):32:32 -> <init>
    5:51:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):28:74 -> <init>
    52:64:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):71:83 -> <init>
    65:75:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):80:90 -> <init>
    1:1:float getAttentionFactor$advancedml_release():51:51 -> getAttentionFactor$advancedml_release
    1:1:int getAttentionSize():28:28 -> getAttentionSize
    1:1:java.util.List getBiasesList():80:80 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getKeys():61:61 -> getKeys
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getQueries():56:56 -> getQueries
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getValues():66:66 -> getValues
    1:1:java.util.List getWeightsList():71:71 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters$Companion:
# {"id":"sourceFile","fileName":"ScaledDotAttentionLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():39:39 -> <init>
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationBackwardHelper:
# {"id":"sourceFile","fileName":"NewRecirculationBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer):20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer):19:19 -> <init>
    1:13:void assignParamsGradients():45:57 -> execBackward
    1:13:void execBackward(boolean):33 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():18:18 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer getLayer():19:19 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationForwardHelper:
# {"id":"sourceFile","fileName":"NewRecirculationForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer):20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer):19:19 -> <init>
    1:18:void forward():31:48 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():18:18 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer getLayer():19:19 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer -> com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer:
# {"id":"sourceFile","fileName":"NewRecirculationLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters params -> k
    float lambda -> l
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray realInput -> m
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray imaginaryInput -> n
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray realOutput -> o
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray imaginaryOutput -> p
    com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationForwardHelper forwardHelper -> q
    com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationBackwardHelper backwardHelper -> r
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,float,int,kotlin.jvm.internal.DefaultConstructorMarker):34:34 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,float,int,kotlin.jvm.internal.DefaultConstructorMarker):30:30 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,float):39:39 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,float):37:37 -> <init>
    5:65:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,float):33:93 -> <init>
    66:66:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,float):87:87 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():30:30 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationBackwardHelper getBackwardHelper$advancedml_release():75:75 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():30:30 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationForwardHelper getForwardHelper$advancedml_release():70:70 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getImaginaryInput():54:54 -> getImaginaryInput
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getImaginaryOutput():64:64 -> getImaginaryOutput
    1:1:float getLambda():35:35 -> getLambda
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():30:30 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters getParams():33:33 -> getParams
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getRealInput():49:49 -> getRealInput
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getRealOutput():59:59 -> getRealOutput
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters:
# {"id":"sourceFile","fileName":"NewRecirculationLayerParameters.kt"}
    int hiddenSize -> g
    com.kotlinnlp.simplednn.core.layers.models.LinearParams unit -> h
    java.util.List weightsList -> i
    java.util.List biasesList -> j
    1:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):27:28 -> <init>
    3:3:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):24:24 -> <init>
    4:4:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):29:29 -> <init>
    5:28:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):26:49 -> <init>
    29:38:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):48:57 -> <init>
    39:47:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):56:64 -> <init>
    48:56:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):63:71 -> <init>
    1:1:java.util.List getBiasesList():63:63 -> getBiasesList
    1:1:int getHiddenSize():26:26 -> getHiddenSize
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getUnit():48:48 -> getUnit
    1:1:java.util.List getWeightsList():56:56 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters$Companion:
# {"id":"sourceFile","fileName":"NewRecirculationLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():36:36 -> <init>
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormBackwardHelper:
# {"id":"sourceFile","fileName":"BatchNormBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer):20:20 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer getLayer():19:19 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer):19 -> <init>
    1:24:void execBackward(boolean):30:53 -> execBackward
    25:38:void execBackward(boolean):35:48 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():18:18 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer getLayer():19:19 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper:
# {"id":"sourceFile","fileName":"BatchNormForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer):21:21 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer getLayer():20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer):20 -> <init>
    1:15:void calculateMean():77:91 -> forward
    1:15:void forward():37 -> forward
    16:19:void calculateMean():80:83 -> forward
    16:19:void forward():37 -> forward
    20:52:void calculateStdDev():57:89 -> forward
    20:52:void forward():38 -> forward
    53:61:void calculateStdDev():61:69 -> forward
    53:61:void forward():38 -> forward
    62:109:void forward():40:87 -> forward
    110:116:void forward():42:48 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper$Companion -> com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper$Companion:
# {"id":"sourceFile","fileName":"BatchNormForwardHelper.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():23:23 -> <init>
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer -> com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer:
# {"id":"sourceFile","fileName":"BatchNormLayer.kt"}
    java.util.List inputArrays -> k
    com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters params -> l
    int inputSize -> m
    java.util.List outputArrays -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray mean -> o
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray stdDev -> p
    com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper forwardHelper -> q
    com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormBackwardHelper backwardHelper -> r
    1:3:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):31:33 -> <init>
    4:4:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):30:30 -> <init>
    5:5:java.util.List getInputArrays():27:27 -> <init>
    5:5:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):27 -> <init>
    6:6:com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters getParams():29:29 -> <init>
    6:6:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):29 -> <init>
    7:7:int getInputSize():42:42 -> <init>
    7:7:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):42 -> <init>
    8:8:java.util.List getOutputArrays():47:47 -> <init>
    8:8:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):47 -> <init>
    9:9:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):48:48 -> <init>
    10:10:java.util.List getOutputArrays():47:47 -> <init>
    10:10:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):47 -> <init>
    11:11:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getMean$advancedml_release():54:54 -> <init>
    11:11:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):54 -> <init>
    12:12:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getStdDev$advancedml_release():59:59 -> <init>
    12:12:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):59 -> <init>
    13:13:com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper getForwardHelper$advancedml_release():64:64 -> <init>
    13:13:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):64 -> <init>
    14:14:com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormBackwardHelper getBackwardHelper$advancedml_release():69:69 -> <init>
    14:14:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):69 -> <init>
    15:55:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):81:121 -> <init>
    56:57:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters):81:81 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():26:26 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormBackwardHelper getBackwardHelper$advancedml_release():69:69 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():26:26 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():26 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper getForwardHelper$advancedml_release():64:64 -> getForwardHelper$advancedml_release
    1:1:java.util.List getInputArrays():27:27 -> getInputArrays
    1:1:java.util.List getInputErrors$default(com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer,boolean,int,java.lang.Object):115:115 -> getInputErrors
    1:1:java.util.List getInputErrors(boolean):115 -> getInputErrors
    2:4:java.util.List getInputErrors(boolean):127:129 -> getInputErrors
    5:18:java.util.List getInputErrors(boolean):116:129 -> getInputErrors
    1:1:java.util.List getInputErrors$default(com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer,boolean,int,java.lang.Object):115:115 -> getInputErrors$default
    1:1:int getInputSize():42:42 -> getInputSize
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getMean$advancedml_release():54:54 -> getMean$advancedml_release
    1:1:java.util.List getOutputArrays():47:47 -> getOutputArrays
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():26:26 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():26 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters getParams():29:29 -> getParams
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getStdDev$advancedml_release():59:59 -> getStdDev$advancedml_release
    1:21:void setErrors(java.util.List):105:125 -> setErrors
    22:23:void setErrors(java.util.List):105:106 -> setErrors
    1:31:void setInputs(java.util.List):93:123 -> setInputs
    32:33:void setInputs(java.util.List):93:94 -> setInputs
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters:
# {"id":"sourceFile","fileName":"BatchNormLayerParameters.kt"}
    com.kotlinnlp.simplednn.core.arrays.ParamsArray b -> g
    com.kotlinnlp.simplednn.core.arrays.ParamsArray g -> h
    java.util.List weightsList -> i
    java.util.List biasesList -> j
    1:2:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):24:25 -> <init>
    3:3:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):22:22 -> <init>
    4:48:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):26:70 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getB():45:45 -> getB
    1:1:java.util.List getBiasesList():62:62 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getG():50:50 -> getG
    1:1:java.util.List getWeightsList():55:55 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters$Companion:
# {"id":"sourceFile","fileName":"BatchNormLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():33:33 -> <init>
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayBackwardHelper:
# {"id":"sourceFile","fileName":"HighwayBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer):22:22 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer getLayer():21:21 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer):21 -> <init>
    1:1:void execBackward(boolean):33:33 -> execBackward
    2:15:void assignGatesGradients():49:62 -> execBackward
    2:15:void execBackward(boolean):35 -> execBackward
    16:19:void assignParamsGradients():73:76 -> execBackward
    16:19:void execBackward(boolean):37 -> execBackward
    20:28:void assignParamsGradients():73:81 -> execBackward
    20:28:void execBackward(boolean):37 -> execBackward
    29:29:void assignParamsGradients():78:78 -> execBackward
    29:29:void execBackward(boolean):37 -> execBackward
    30:35:void assignLayerGradients():89:94 -> execBackward
    30:35:void execBackward(boolean):40 -> execBackward
    36:36:void execBackward(boolean):33:33 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayForwardHelper:
# {"id":"sourceFile","fileName":"HighwayForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer):21:21 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer getLayer():20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer):20 -> <init>
    1:10:void forward():33:42 -> forward
    11:21:void forward():40:50 -> forward
    22:30:void forward():48:56 -> forward
    31:31:void forward():33:33 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer -> com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer:
# {"id":"sourceFile","fileName":"HighwayLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters params -> k
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputUnit -> l
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray transformGate -> m
    com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayForwardHelper forwardHelper -> n
    com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayBackwardHelper backwardHelper -> o
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):28:28 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):35:35 -> <init>
    3:52:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):32:81 -> <init>
    53:53:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):74:74 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():28:28 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayBackwardHelper getBackwardHelper$advancedml_release():62:62 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():28:28 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayForwardHelper getForwardHelper$advancedml_release():57:57 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputUnit():47:47 -> getInputUnit
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():28:28 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters getParams():32:32 -> getParams
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getTransformGate():52:52 -> getTransformGate
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters:
# {"id":"sourceFile","fileName":"HighwayLayerParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.models.LinearParams input -> g
    com.kotlinnlp.simplednn.core.layers.models.LinearParams transformGate -> h
    java.util.List weightsList -> i
    java.util.List biasesList -> j
    1:2:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):26:27 -> <init>
    3:3:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):24:24 -> <init>
    4:25:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):29:50 -> <init>
    26:36:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):48:58 -> <init>
    37:47:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):56:66 -> <init>
    48:58:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):64:74 -> <init>
    59:68:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):72:81 -> <init>
    1:1:java.util.List getBiasesList():72:72 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getInput():48:48 -> getInput
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getTransformGate():56:56 -> getTransformGate
    1:1:java.util.List getWeightsList():64:64 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters$Companion:
# {"id":"sourceFile","fileName":"HighwayLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():36:36 -> <init>
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormBackwardHelper:
# {"id":"sourceFile","fileName":"NormBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer):19:19 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer):18:18 -> <init>
    1:25:void execBackward(boolean):29:53 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():17:17 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer getLayer():18:18 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormForwardHelper:
# {"id":"sourceFile","fileName":"NormForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer):21:21 -> <init>
    1:16:void forward():31:46 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer -> com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer:
# {"id":"sourceFile","fileName":"NormLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters params -> k
    float stdDev -> l
    float v -> m
    com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormForwardHelper forwardHelper -> n
    com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormBackwardHelper backwardHelper -> o
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters):33:33 -> <init>
    2:60:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters):32:90 -> <init>
    61:61:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters):90:90 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():28:28 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormBackwardHelper getBackwardHelper$advancedml_release():78:78 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getDev$advancedml_release():53:53 -> getDev$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getDevStdDev$advancedml_release():63:63 -> getDevStdDev$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():28:28 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormForwardHelper getForwardHelper$advancedml_release():73:73 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():28:28 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters getParams():32:32 -> getParams
    1:1:float getStdDev$advancedml_release():58:58 -> getStdDev$advancedml_release
    1:1:float getV$advancedml_release():68:68 -> getV$advancedml_release
    1:1:void setDev$advancedml_release(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):53:53 -> setDev$advancedml_release
    1:1:void setDevStdDev$advancedml_release(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):63:63 -> setDevStdDev$advancedml_release
    1:1:void setStdDev$advancedml_release(float):58:58 -> setStdDev$advancedml_release
    1:1:void setV$advancedml_release(float):68:68 -> setV$advancedml_release
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer$Companion -> com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer$Companion:
# {"id":"sourceFile","fileName":"NormLayer.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():42:42 -> <init>
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters:
# {"id":"sourceFile","fileName":"NormLayerParameters.kt"}
    com.kotlinnlp.simplednn.core.arrays.ParamsArray b -> g
    com.kotlinnlp.simplednn.core.arrays.ParamsArray g -> h
    java.util.List weightsList -> i
    java.util.List biasesList -> j
    1:2:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):24:25 -> <init>
    3:3:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):22:22 -> <init>
    4:48:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):26:70 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getB():45:45 -> getB
    1:1:java.util.List getBiasesList():62:62 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getG():50:50 -> getG
    1:1:java.util.List getWeightsList():55:55 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters$Companion:
# {"id":"sourceFile","fileName":"NormLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():33:33 -> <init>
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardBackwardHelper:
# {"id":"sourceFile","fileName":"FeedforwardBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer):21:21 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer):20:20 -> <init>
    1:1:void execBackward(boolean):31:31 -> execBackward
    2:5:void assignParamsGradients():46:49 -> execBackward
    2:5:void execBackward(boolean):33 -> execBackward
    6:6:void assignParamsGradients():46:46 -> execBackward
    6:6:void execBackward(boolean):33 -> execBackward
    7:8:void assignLayerGradients():57:58 -> execBackward
    7:8:void execBackward(boolean):36 -> execBackward
    9:9:void assignLayerGradients():57:57 -> execBackward
    9:9:void execBackward(boolean):36 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardForwardHelper:
# {"id":"sourceFile","fileName":"FeedforwardForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer):21:21 -> <init>
    1:4:void forward():31:34 -> forward
    5:10:void forward():31:36 -> forward
    11:20:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):48:57 -> forward
    21:28:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):52:59 -> forward
    29:29:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):48:48 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer -> com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer:
# {"id":"sourceFile","fileName":"FeedforwardLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters params -> k
    com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardForwardHelper forwardHelper -> l
    com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardBackwardHelper backwardHelper -> m
    com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardRelevanceHelper relevanceHelper -> n
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):26:26 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):33:33 -> <init>
    3:30:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):30:57 -> <init>
    31:41:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):56:66 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():26:26 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardBackwardHelper getBackwardHelper$advancedml_release():50:50 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():26:26 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardForwardHelper getForwardHelper$advancedml_release():45:45 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():26:26 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters getParams():30:30 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release():26:26 -> getRelevanceHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardRelevanceHelper getRelevanceHelper$advancedml_release():56:56 -> getRelevanceHelper$advancedml_release
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters:
# {"id":"sourceFile","fileName":"FeedforwardLayerParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.models.LinearParams unit -> g
    java.util.List weightsList -> h
    java.util.List biasesList -> i
    1:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):28:29 -> <init>
    3:3:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):25:25 -> <init>
    4:29:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):31:56 -> <init>
    30:38:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):55:63 -> <init>
    39:47:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):62:70 -> <init>
    1:1:java.util.List getBiasesList():62:62 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getUnit():50:50 -> getUnit
    1:1:java.util.List getWeightsList():55:55 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters$Companion:
# {"id":"sourceFile","fileName":"FeedforwardLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():38:38 -> <init>
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardRelevanceHelper -> com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardRelevanceHelper:
# {"id":"sourceFile","fileName":"FeedforwardRelevanceHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer):20:20 -> <init>
    1:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):28:30 -> getInputRelevance
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):28:28 -> getInputRelevance
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceBackwardHelper:
# {"id":"sourceFile","fileName":"SquaredDistanceBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer):21:21 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer):20:20 -> <init>
    1:3:void execBackward(boolean):31:33 -> execBackward
    4:6:void assignParamsGradients():47:49 -> execBackward
    4:6:void execBackward(boolean):35 -> execBackward
    7:9:void assignLayerGradients():57:59 -> execBackward
    7:9:void execBackward(boolean):38 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceForwardHelper:
# {"id":"sourceFile","fileName":"SquaredDistanceForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer):20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer):19:19 -> <init>
    1:4:void forward():28:31 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():18:18 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer getLayer():19:19 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer -> com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer:
# {"id":"sourceFile","fileName":"SquaredDistanceLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters params -> k
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray bhOut -> l
    com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceForwardHelper forwardHelper -> m
    com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceBackwardHelper backwardHelper -> n
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters,float):32:32 -> <init>
    2:26:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters,float):30:54 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():26:26 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceBackwardHelper getBackwardHelper$advancedml_release():54:54 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getBhOut():44:44 -> getBhOut
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():26:26 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceForwardHelper getForwardHelper$advancedml_release():49:49 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():26:26 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters getParams():30:30 -> getParams
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters:
# {"id":"sourceFile","fileName":"SquaredDistanceLayerParameters.kt"}
    int rank -> g
    com.kotlinnlp.simplednn.core.arrays.ParamsArray wB -> h
    java.util.List weightsList -> i
    java.util.List biasesList -> j
    1:1:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):30:30 -> <init>
    2:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):27:27 -> <init>
    3:3:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):31:31 -> <init>
    4:41:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):29:66 -> <init>
    1:1:java.util.List getBiasesList():60:60 -> getBiasesList
    1:1:int getRank():29:29 -> getRank
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getWB():50:50 -> getWB
    1:1:java.util.List getWeightsList():55:55 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters$Companion:
# {"id":"sourceFile","fileName":"SquaredDistanceLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():38:38 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer -> com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer:
# {"id":"sourceFile","fileName":"MergeLayer.kt"}
    java.util.List inputArrays -> k
    com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters params -> l
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():28:28 -> <init>
    1:1:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):28 -> <init>
    2:2:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):36:36 -> <init>
    3:3:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):35:35 -> <init>
    4:4:java.util.List getInputArrays():29:29 -> <init>
    4:4:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):29 -> <init>
    5:5:com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams():32:32 -> <init>
    5:5:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):32 -> <init>
    1:12:void checkInputSize():66:77 -> checkInputSize
    13:14:void checkInputSize():68:68 -> checkInputSize
    15:15:void checkInputSize():67:67 -> checkInputSize
    16:16:void checkInputSize():66:66 -> checkInputSize
    1:1:java.util.List getInputArrays():29:29 -> getInputArrays
    1:1:java.util.List getInputErrors$default(com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer,boolean,int,java.lang.Object):57:57 -> getInputErrors
    1:1:java.util.List getInputErrors(boolean):57 -> getInputErrors
    2:4:java.util.List getInputErrors(boolean):72:74 -> getInputErrors
    5:21:java.util.List getInputErrors(boolean):58:74 -> getInputErrors
    1:1:java.util.List getInputErrors$default(com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer,boolean,int,java.lang.Object):57:57 -> getInputErrors$default
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():28:28 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams():32:32 -> getParams
    1:1:void setInput(int,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):50:50 -> setInput
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters:
# {"id":"sourceFile","fileName":"MergeLayerParameters.kt"}
    java.util.List inputsSize -> g
    boolean sparseInput -> h
    1:1:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):30:30 -> <init>
    2:2:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):29:29 -> <init>
    3:7:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):24:28 -> <init>
    1:1:java.util.List getInputsSize():24:24 -> getInputsSize
    1:1:boolean getSparseInput():28:28 -> getSparseInput
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineBackwardHelper:
# {"id":"sourceFile","fileName":"AffineBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer):21:21 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer getLayer():20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer):20 -> <init>
    1:1:void execBackward(boolean):31:31 -> execBackward
    2:28:void assignParamsGradients():45:71 -> execBackward
    2:28:void execBackward(boolean):33 -> execBackward
    29:50:void assignParamsGradients():50:71 -> execBackward
    29:50:void execBackward(boolean):33 -> execBackward
    51:74:void assignParamsGradients():50:73 -> execBackward
    51:74:void execBackward(boolean):33 -> execBackward
    75:76:void assignParamsGradients():50:51 -> execBackward
    75:76:void execBackward(boolean):33 -> execBackward
    77:92:void assignLayerGradients():60:75 -> execBackward
    77:92:void execBackward(boolean):36 -> execBackward
    93:94:void assignLayerGradients():63:64 -> execBackward
    93:94:void execBackward(boolean):36 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineForwardHelper:
# {"id":"sourceFile","fileName":"AffineForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer):23:23 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer getLayer():22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer):22 -> <init>
    1:13:void forward():32:44 -> forward
    14:18:void forward():36:40 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():21:21 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer getLayer():22:22 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer -> com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer:
# {"id":"sourceFile","fileName":"AffineLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters params -> m
    com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineForwardHelper forwardHelper -> n
    com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineBackwardHelper backwardHelper -> o
    1:1:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):28:28 -> <init>
    2:2:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):35:35 -> <init>
    3:37:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):32:66 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():28:28 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineBackwardHelper getBackwardHelper$advancedml_release():54:54 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():28:28 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineForwardHelper getForwardHelper$advancedml_release():49:49 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():28:28 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams():28:28 -> getParams
    3:3:com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters getParams():32:32 -> getParams
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters:
# {"id":"sourceFile","fileName":"AffineLayerParameters.kt"}
    java.util.List w -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    com.kotlinnlp.simplednn.core.arrays.ParamsArray b -> j
    java.util.List weightsList -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List biasesList -> l
    1:2:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):27:28 -> <init>
    3:3:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):24:24 -> <init>
    4:51:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):30:77 -> <init>
    52:52:java.util.List getW():50:50 -> <init>
    52:52:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):50 -> <init>
    53:53:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):77:77 -> <init>
    54:54:java.util.List getW():50:50 -> <init>
    54:54:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):50 -> <init>
    55:55:com.kotlinnlp.simplednn.core.arrays.ParamsArray getB() -> <init>
    55:55:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):55 -> <init>
    56:56:java.util.List getWeightsList():60:60 -> <init>
    56:56:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):60 -> <init>
    57:57:java.util.List getBiasesList():65:65 -> <init>
    57:57:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):65 -> <init>
    58:58:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):71:71 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getB():55:55 -> getB
    1:1:java.util.List getBiasesList():65:65 -> getBiasesList
    1:1:java.util.List getW():50:50 -> getW
    1:1:java.util.List getWeightsList():60:60 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters$Companion:
# {"id":"sourceFile","fileName":"AffineLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():38:38 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgBackwardHelper:
# {"id":"sourceFile","fileName":"AvgBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer):21:21 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer getLayer():20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer):20 -> <init>
    1:10:void assignLayerGradients():41:50 -> execBackward
    1:10:void execBackward(boolean):32 -> execBackward
    11:11:void assignLayerGradients():45:45 -> execBackward
    11:11:void execBackward(boolean):32 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgForwardHelper:
# {"id":"sourceFile","fileName":"AvgForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer):23:23 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer getLayer():22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer):22 -> <init>
    1:16:void forward():30:45 -> forward
    17:19:void forward():38:40 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():21:21 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer getLayer():22:22 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer -> com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer:
# {"id":"sourceFile","fileName":"AvgLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters params -> m
    com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgForwardHelper forwardHelper -> n
    com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgBackwardHelper backwardHelper -> o
    1:1:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters):29:29 -> <init>
    2:22:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters):28:48 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():24:24 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgBackwardHelper getBackwardHelper$advancedml_release():48:48 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():24:24 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgForwardHelper getForwardHelper$advancedml_release():43:43 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():24:24 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams():24:24 -> getParams
    3:3:com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters getParams():28:28 -> getParams
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters:
# {"id":"sourceFile","fileName":"AvgLayerParameters.kt"}
    int nInputs -> i
    java.util.List weightsList -> j
    java.util.List biasesList -> k
    1:1:void <init>(int,int):23:23 -> <init>
    2:2:void <init>(int,int):22:22 -> <init>
    3:3:int getNInputs():21:21 -> <init>
    3:3:void <init>(int,int):21 -> <init>
    4:20:void <init>(int,int):43:59 -> <init>
    21:22:void <init>(int,int):43:43 -> <init>
    23:23:java.util.List getWeightsList():49:49 -> <init>
    23:23:void <init>(int,int):49 -> <init>
    24:24:java.util.List getBiasesList():54:54 -> <init>
    24:24:void <init>(int,int):54 -> <init>
    1:1:java.util.List getBiasesList():54:54 -> getBiasesList
    1:1:int getNInputs():21:21 -> getNInputs
    1:1:java.util.List getWeightsList():49:49 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters$Companion:
# {"id":"sourceFile","fileName":"AvgLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():30:30 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineBackwardHelper:
# {"id":"sourceFile","fileName":"BiaffineBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer):25:25 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer getLayer():24:24 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer):24 -> <init>
    1:1:void execBackward(boolean):35:35 -> execBackward
    2:6:java.util.List getWX1ArraysGradients():52:56 -> execBackward
    2:6:void execBackward(boolean):37 -> execBackward
    7:20:java.util.List getWX1ArraysGradients():55:68 -> execBackward
    7:20:void execBackward(boolean):37 -> execBackward
    21:49:java.util.List getWX1ArraysGradients():55:83 -> execBackward
    21:49:void execBackward(boolean):37 -> execBackward
    50:99:void assignParamsGradients(java.util.List):95:144 -> execBackward
    50:99:void execBackward(boolean):39 -> execBackward
    100:144:void assignParamsGradients(java.util.List) -> execBackward
    100:144:void execBackward(boolean):39 -> execBackward
    145:191:void assignParamsGradients(java.util.List):101:147 -> execBackward
    145:191:void execBackward(boolean):39 -> execBackward
    192:199:void assignParamsGradients(java.util.List):106:113 -> execBackward
    192:199:void execBackward(boolean):39 -> execBackward
    200:228:void assignLayerGradients(java.util.List):122:150 -> execBackward
    200:228:void execBackward(boolean):42 -> execBackward
    229:233:void assignLayerGradients(java.util.List):133:137 -> execBackward
    229:233:void execBackward(boolean):42 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():23:23 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer getLayer():24:24 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineForwardHelper:
# {"id":"sourceFile","fileName":"BiaffineForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer):25:25 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer getLayer():24:24 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer):24 -> <init>
    1:25:void forward():35:59 -> forward
    26:35:void forward():45:54 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():23:23 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer getLayer():24:24 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer -> com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer:
# {"id":"sourceFile","fileName":"BiaffineLayer.kt"}
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputArray1 -> m
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputArray2 -> n
    com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters params -> o
    java.util.List wx1Arrays -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineForwardHelper forwardHelper -> q
    com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineBackwardHelper backwardHelper -> r
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):31:31 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):40:40 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):39:39 -> <init>
    4:45:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):32:73 -> <init>
    46:48:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):72:74 -> <init>
    49:74:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):72:97 -> <init>
    75:75:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):55:55 -> <init>
    76:79:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):60:63 -> <init>
    80:80:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):59:59 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():31:31 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineBackwardHelper getBackwardHelper$advancedml_release():85:85 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():31:31 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineForwardHelper getForwardHelper$advancedml_release():80:80 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray1$advancedml_release():32:32 -> getInputArray1$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray2$advancedml_release():33:33 -> getInputArray2$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():31:31 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams():31:31 -> getParams
    3:3:com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters getParams():36:36 -> getParams
    1:1:java.util.List getWx1Arrays():72:72 -> getWx1Arrays
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters:
# {"id":"sourceFile","fileName":"BiaffineLayerParameters.kt"}
    int inputSize1 -> i
    int inputSize2 -> j
    com.kotlinnlp.simplednn.core.arrays.ParamsArray w1 -> k
    com.kotlinnlp.simplednn.core.arrays.ParamsArray w2 -> l
    com.kotlinnlp.simplednn.core.arrays.ParamsArray b -> m
    java.util.List w -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List weightsList -> o
    java.util.List biasesList -> p
    1:2:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):29:30 -> <init>
    3:3:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):25:25 -> <init>
    4:4:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):33:33 -> <init>
    5:5:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):32:32 -> <init>
    6:48:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):26:68 -> <init>
    49:51:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):67:69 -> <init>
    52:66:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):67:81 -> <init>
    67:75:void <init>(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):80:88 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getB():62:62 -> getB
    1:1:java.util.List getBiasesList():80:80 -> getBiasesList
    1:1:int getInputSize1$advancedml_release():26:26 -> getInputSize1$advancedml_release
    1:1:int getInputSize2$advancedml_release():27:27 -> getInputSize2$advancedml_release
    1:1:java.util.List getW():67:67 -> getW
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getW1():52:52 -> getW1
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getW2():57:57 -> getW2
    1:1:java.util.List getWeightsList():75:75 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters$Companion:
# {"id":"sourceFile","fileName":"BiaffineLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():40:40 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatBackwardHelper:
# {"id":"sourceFile","fileName":"ConcatBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer layer -> d
    int[] errorsSplitSizes -> e
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer):21:21 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer getLayer():20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer):20 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer):26:26 -> <init>
    1:9:void assignLayerGradients():46:54 -> execBackward
    1:9:void execBackward(boolean):37 -> execBackward
    10:11:void assignLayerGradients():48:49 -> execBackward
    10:11:void execBackward(boolean):37 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatForwardHelper:
# {"id":"sourceFile","fileName":"ConcatForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer):22:22 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer getLayer():21:21 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer):21 -> <init>
    1:9:void forward():30:38 -> forward
    10:17:void forward():31:38 -> forward
    18:18:void forward():31:31 -> forward
    19:19:void forward():30:30 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer -> com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer:
# {"id":"sourceFile","fileName":"ConcatLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters params -> m
    com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatForwardHelper forwardHelper -> n
    com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatBackwardHelper backwardHelper -> o
    1:1:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters):30:30 -> <init>
    2:22:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters):29:49 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():25:25 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatBackwardHelper getBackwardHelper$advancedml_release():49:49 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():25:25 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatForwardHelper getForwardHelper$advancedml_release():44:44 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():25:25 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams():25:25 -> getParams
    3:3:com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters getParams():29:29 -> getParams
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters:
# {"id":"sourceFile","fileName":"ConcatLayerParameters.kt"}
    java.util.List weightsList -> i
    java.util.List biasesList -> j
    1:1:void <init>(java.util.List):22:22 -> <init>
    2:27:void <init>(java.util.List):20:45 -> <init>
    1:1:java.util.List getBiasesList():45:45 -> getBiasesList
    1:1:java.util.List getWeightsList():40:40 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters$Companion:
# {"id":"sourceFile","fileName":"ConcatLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():28:28 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFBackwardHelper:
# {"id":"sourceFile","fileName":"ConcatFFBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer layer -> d
    int[] errorsSplitSizes -> e
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer):21:21 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer getLayer():20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer):20 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer):26:26 -> <init>
    1:6:void execBackward(boolean):36:41 -> execBackward
    7:15:void assignInputGradients():53:61 -> execBackward
    7:15:void execBackward(boolean):44 -> execBackward
    16:17:void assignInputGradients():55:56 -> execBackward
    16:17:void execBackward(boolean):44 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFForwardHelper:
# {"id":"sourceFile","fileName":"ConcatFFForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer):22:22 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer getLayer():21:21 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer):21 -> <init>
    1:11:void forward():30:40 -> forward
    12:21:void forward():31:40 -> forward
    22:22:void forward():31:31 -> forward
    23:27:void forward():30:34 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer -> com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer:
# {"id":"sourceFile","fileName":"ConcatFFLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters params -> m
    com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFForwardHelper forwardHelper -> n
    com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFBackwardHelper backwardHelper -> o
    com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer outputFeedforward -> p
    1:1:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):29:29 -> <init>
    2:2:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):36:36 -> <init>
    3:38:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):33:68 -> <init>
    39:47:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):64:72 -> <init>
    48:53:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):71:76 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():29:29 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFBackwardHelper getBackwardHelper$advancedml_release():53:53 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():29:29 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFForwardHelper getForwardHelper$advancedml_release():48:48 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer getOutputFeedforward$advancedml_release():64:64 -> getOutputFeedforward$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():29:29 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams():29:29 -> getParams
    3:3:com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters getParams():33:33 -> getParams
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters:
# {"id":"sourceFile","fileName":"ConcatFFLayerParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters output -> i
    java.util.List weightsList -> j
    java.util.List biasesList -> k
    1:2:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):27:28 -> <init>
    3:3:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):24:24 -> <init>
    4:27:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):29:52 -> <init>
    28:47:void <init>(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):49:68 -> <init>
    1:1:java.util.List getBiasesList():62:62 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters getOutput():49:49 -> getOutput
    1:1:java.util.List getWeightsList():57:57 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters$Companion:
# {"id":"sourceFile","fileName":"ConcatFFLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():37:37 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineBackwardHelper:
# {"id":"sourceFile","fileName":"CosineBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer layer -> d
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer):19 -> <init>
    1:23:void assignLayerGradients():39:61 -> execBackward
    1:23:void execBackward(boolean):30 -> execBackward
    24:26:void assignLayerGradients():46:48 -> execBackward
    24:26:void execBackward(boolean):30 -> execBackward
    27:33:void assignLayerGradients():46:52 -> execBackward
    27:33:void execBackward(boolean):30 -> execBackward
    34:40:void assignLayerGradients():50:56 -> execBackward
    34:40:void execBackward(boolean):30 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer getLayer():19 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineForwardHelper:
# {"id":"sourceFile","fileName":"CosineForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer layer -> b
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer):20 -> <init>
    1:22:void forward():28:49 -> forward
    23:32:void forward():36:45 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer getLayer():20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer -> com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer:
# {"id":"sourceFile","fileName":"CosineLayer.kt"}
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputArray1 -> m
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputArray2 -> n
    com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters params -> o
    float input1Norm -> p
    float input2Norm -> q
    com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineForwardHelper forwardHelper -> r
    com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineBackwardHelper backwardHelper -> s
    1:3:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters):28:30 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters):27:27 -> <init>
    5:37:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters):24:56 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():23:23 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineBackwardHelper getBackwardHelper$advancedml_release():56:56 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():23:23 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineForwardHelper getForwardHelper$advancedml_release():51:51 -> getForwardHelper$advancedml_release
    1:1:float getInput1Norm():41:41 -> getInput1Norm
    1:1:float getInput2Norm():46:46 -> getInput2Norm
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray1$advancedml_release():24:24 -> getInputArray1$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray2$advancedml_release():25:25 -> getInputArray2$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():23:23 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams():23:23 -> getParams
    3:3:com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters getParams():26:26 -> getParams
    1:1:void setInput1Norm(float):41:41 -> setInput1Norm
    1:1:void setInput2Norm(float):46:46 -> setInput2Norm
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters:
# {"id":"sourceFile","fileName":"CosineLayerParameters.kt"}
    java.util.List weightsList -> i
    java.util.List biasesList -> j
    1:1:void <init>(int):21:21 -> <init>
    2:2:void <init>(int):20:20 -> <init>
    3:3:java.util.List getWeightsList():40:40 -> <init>
    3:3:void <init>(int):40 -> <init>
    4:4:java.util.List getBiasesList():45:45 -> <init>
    4:4:void <init>(int):45 -> <init>
    1:1:java.util.List getBiasesList():45:45 -> getBiasesList
    1:1:java.util.List getWeightsList():40:40 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters$Companion:
# {"id":"sourceFile","fileName":"CosineLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():28:28 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceBackwardHelper:
# {"id":"sourceFile","fileName":"DistanceBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer layer -> d
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer):19 -> <init>
    1:28:void assignLayerGradients():39:66 -> execBackward
    1:28:void execBackward(boolean):30 -> execBackward
    29:40:void assignLayerGradients():51:62 -> execBackward
    29:40:void execBackward(boolean):30 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer getLayer():19 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceForwardHelper:
# {"id":"sourceFile","fileName":"DistanceForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer layer -> b
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():21:21 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer):21 -> <init>
    1:14:void forward():28:41 -> forward
    15:19:void forward():33:37 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():21:21 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.Layer getLayer():21:21 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer getLayer():21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer -> com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer:
# {"id":"sourceFile","fileName":"DistanceLayer.kt"}
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputArray1 -> m
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputArray2 -> n
    com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters params -> o
    com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceForwardHelper forwardHelper -> p
    com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceBackwardHelper backwardHelper -> q
    1:3:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters):28:30 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters):27:27 -> <init>
    5:27:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters):24:46 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():23:23 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceBackwardHelper getBackwardHelper$advancedml_release():46:46 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():23:23 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceForwardHelper getForwardHelper$advancedml_release():41:41 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray1$advancedml_release():24:24 -> getInputArray1$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray2$advancedml_release():25:25 -> getInputArray2$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():23:23 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams():23:23 -> getParams
    3:3:com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters getParams():26:26 -> getParams
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters:
# {"id":"sourceFile","fileName":"DistanceLayerParameters.kt"}
    java.util.List weightsList -> i
    java.util.List biasesList -> j
    1:1:void <init>(int):21:21 -> <init>
    2:2:void <init>(int):20:20 -> <init>
    3:3:java.util.List getWeightsList():40:40 -> <init>
    3:3:void <init>(int):40 -> <init>
    4:4:java.util.List getBiasesList():45:45 -> <init>
    4:4:void <init>(int):45 -> <init>
    1:1:java.util.List getBiasesList():45:45 -> getBiasesList
    1:1:java.util.List getWeightsList():40:40 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters$Companion:
# {"id":"sourceFile","fileName":"DistanceLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():28:28 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.AffineMerge -> com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.AffineMerge:
# {"id":"sourceFile","fileName":"AffineMerge.kt"}
    1:1:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker):19:19 -> <init>
    2:2:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):23:23 -> <init>
    3:3:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):22:22 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.AvgMerge -> com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.AvgMerge:
# {"id":"sourceFile","fileName":"AvgMerge.kt"}
    1:1:void <init>():15:15 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.BiaffineMerge -> com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.BiaffineMerge:
# {"id":"sourceFile","fileName":"BiaffineMerge.kt"}
    1:1:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker):19:19 -> <init>
    2:2:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):23:23 -> <init>
    3:3:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):22:22 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ConcatFeedforwardMerge -> com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ConcatFeedforwardMerge:
# {"id":"sourceFile","fileName":"ConcatFeedforwardMerge.kt"}
    1:1:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker):19:19 -> <init>
    2:2:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):23:23 -> <init>
    3:3:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):22:22 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ConcatMerge -> com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ConcatMerge:
# {"id":"sourceFile","fileName":"ConcatMerge.kt"}
    1:1:void <init>():15:15 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration -> com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration:
# {"id":"sourceFile","fileName":"MergeConfiguration.kt"}
    com.kotlinnlp.simplednn.core.layers.LayerType$Connection type -> a
    1:7:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Connection):17:23 -> <init>
    8:8:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Connection):23:23 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Connection getType():17:17 -> getType
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ProductMerge -> com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ProductMerge:
# {"id":"sourceFile","fileName":"ProductMerge.kt"}
    1:1:void <init>():15:15 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.SumMerge -> com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.SumMerge:
# {"id":"sourceFile","fileName":"SumMerge.kt"}
    1:1:void <init>():15:15 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.VariableOutputMergeConfig -> com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.VariableOutputMergeConfig:
# {"id":"sourceFile","fileName":"VariableOutputMergeConfig.kt"}
    int outputSize -> b
    com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction activationFunction -> c
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):24:24 -> <init>
    2:3:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):22:23 -> <init>
    1:1:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getActivationFunction():23:23 -> getActivationFunction
    1:1:int getOutputSize():22:22 -> getOutputSize
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductBackwardHelper:
# {"id":"sourceFile","fileName":"ProductBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer):21:21 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer getLayer():20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer):20 -> <init>
    1:18:void assignLayerGradients():43:60 -> execBackward
    1:18:void execBackward(boolean):32 -> execBackward
    19:33:void assignLayerGradients():48:62 -> execBackward
    19:33:void execBackward(boolean):32 -> execBackward
    34:37:void assignLayerGradients():51:54 -> execBackward
    34:37:void execBackward(boolean):32 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductForwardHelper:
# {"id":"sourceFile","fileName":"ProductForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer):22:22 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer getLayer():21:21 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer):21 -> <init>
    1:14:void forward():29:42 -> forward
    15:15:void forward():37:37 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer -> com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer:
# {"id":"sourceFile","fileName":"ProductLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters params -> m
    com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductForwardHelper forwardHelper -> n
    com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductBackwardHelper backwardHelper -> o
    1:1:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters):29:29 -> <init>
    2:22:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters):28:48 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():24:24 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductBackwardHelper getBackwardHelper$advancedml_release():48:48 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():24:24 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductForwardHelper getForwardHelper$advancedml_release():43:43 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():24:24 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams():24:24 -> getParams
    3:3:com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters getParams():28:28 -> getParams
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters:
# {"id":"sourceFile","fileName":"ProductLayerParameters.kt"}
    int nInputs -> i
    java.util.List weightsList -> j
    java.util.List biasesList -> k
    1:1:void <init>(int,int):23:23 -> <init>
    2:2:void <init>(int,int):22:22 -> <init>
    3:3:int getNInputs():21:21 -> <init>
    3:3:void <init>(int,int):21 -> <init>
    4:20:void <init>(int,int):43:59 -> <init>
    21:22:void <init>(int,int):43:43 -> <init>
    23:23:java.util.List getWeightsList():49:49 -> <init>
    23:23:void <init>(int,int):49 -> <init>
    24:24:java.util.List getBiasesList():54:54 -> <init>
    24:24:void <init>(int,int):54 -> <init>
    1:1:java.util.List getBiasesList():54:54 -> getBiasesList
    1:1:int getNInputs():21:21 -> getNInputs
    1:1:java.util.List getWeightsList():49:49 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters$Companion:
# {"id":"sourceFile","fileName":"ProductLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():30:30 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubBackwardHelper:
# {"id":"sourceFile","fileName":"SubBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer):21:21 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer):20:20 -> <init>
    1:4:void assignLayerGradients():41:44 -> execBackward
    1:4:void execBackward(boolean):32 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubForwardHelper:
# {"id":"sourceFile","fileName":"SubForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer):21:21 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer):20:20 -> <init>
    1:2:void forward():28:29 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer -> com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer:
# {"id":"sourceFile","fileName":"SubLayer.kt"}
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputArray1 -> m
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputArray2 -> n
    com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters params -> o
    com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubForwardHelper forwardHelper -> p
    com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubBackwardHelper backwardHelper -> q
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters):31:31 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters):30:30 -> <init>
    3:27:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters):25:49 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():24:24 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubBackwardHelper getBackwardHelper$advancedml_release():49:49 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():24:24 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubForwardHelper getForwardHelper$advancedml_release():44:44 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray1$advancedml_release():25:25 -> getInputArray1$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray2$advancedml_release():26:26 -> getInputArray2$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():24:24 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams():24:24 -> getParams
    3:3:com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters getParams():29:29 -> getParams
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters:
# {"id":"sourceFile","fileName":"SubLayerParameters.kt"}
    java.util.List weightsList -> i
    java.util.List biasesList -> j
    1:1:void <init>(int):21:21 -> <init>
    2:39:void <init>(int):20:57 -> <init>
    40:41:void <init>(int):41:41 -> <init>
    42:42:java.util.List getWeightsList():47:47 -> <init>
    42:42:void <init>(int):47 -> <init>
    43:43:java.util.List getBiasesList():52:52 -> <init>
    43:43:void <init>(int):52 -> <init>
    1:1:java.util.List getBiasesList():52:52 -> getBiasesList
    1:1:java.util.List getWeightsList():47:47 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters$Companion:
# {"id":"sourceFile","fileName":"SubLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():28:28 -> <init>
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumBackwardHelper:
# {"id":"sourceFile","fileName":"SumBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer):21:21 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer getLayer():20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer):20 -> <init>
    1:9:void assignLayerGradients():41:49 -> execBackward
    1:9:void execBackward(boolean):32 -> execBackward
    10:10:void assignLayerGradients():44:44 -> execBackward
    10:10:void execBackward(boolean):32 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumForwardHelper:
# {"id":"sourceFile","fileName":"SumForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer):22:22 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer getLayer():21:21 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer):21 -> <init>
    1:14:void forward():29:42 -> forward
    15:15:void forward():37:37 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer -> com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer:
# {"id":"sourceFile","fileName":"SumLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters params -> m
    com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumForwardHelper forwardHelper -> n
    com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumBackwardHelper backwardHelper -> o
    1:1:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters):29:29 -> <init>
    2:22:void <init>(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters):28:48 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():24:24 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumBackwardHelper getBackwardHelper$advancedml_release():48:48 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():24:24 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumForwardHelper getForwardHelper$advancedml_release():43:43 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():24:24 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams():24:24 -> getParams
    3:3:com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters getParams():28:28 -> getParams
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters:
# {"id":"sourceFile","fileName":"SumLayerParameters.kt"}
    int nInputs -> i
    java.util.List weightsList -> j
    java.util.List biasesList -> k
    1:1:void <init>(int,int):23:23 -> <init>
    2:2:void <init>(int,int):22:22 -> <init>
    3:3:int getNInputs():21:21 -> <init>
    3:3:void <init>(int,int):21 -> <init>
    4:20:void <init>(int,int):43:59 -> <init>
    21:22:void <init>(int,int):43:43 -> <init>
    23:23:java.util.List getWeightsList():49:49 -> <init>
    23:23:void <init>(int,int):49 -> <init>
    24:24:java.util.List getBiasesList():54:54 -> <init>
    24:24:void <init>(int,int):54 -> <init>
    1:1:java.util.List getBiasesList():54:54 -> getBiasesList
    1:1:int getNInputs():21:21 -> getNInputs
    1:1:java.util.List getWeightsList():49:49 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters$Companion:
# {"id":"sourceFile","fileName":"SumLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():30:30 -> <init>
com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentLayer -> com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentLayer:
# {"id":"sourceFile","fileName":"GatedRecurrentLayer.kt"}
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):27:27 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):35:35 -> <init>
    1:3:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):58:60 -> propagateRelevanceToGates
com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper:
# {"id":"sourceFile","fileName":"GatedRecurrentRelevanceHelper.kt"}
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer):20:20 -> <init>
com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow -> com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow:
# {"id":"sourceFile","fileName":"LayersWindow.kt"}
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer -> com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer:
# {"id":"sourceFile","fileName":"RecurrentLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow layersWindow -> k
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):27:27 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):35:35 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):32:32 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow getLayersWindow():32:32 -> getLayersWindow
    1:3:void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):57:59 -> setRecurrentRelevance
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit -> com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit:
# {"id":"sourceFile","fileName":"RecurrentLayerUnit.kt"}
    1:4:void <init>(int):21:24 -> <init>
    1:3:void addRecurrentContribution(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):37:39 -> addRecurrentContribution
    1:6:void assignParamsGradients(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):61:66 -> assignParamsGradients
    1:1:void assignParamsGradients$default(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,java.lang.Object):55:55 -> assignParamsGradients$default
    1:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevancePartitioned(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams):110:114 -> getInputRelevance
    1:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams,boolean):97 -> getInputRelevance
    6:16:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevancePartitioned(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams):113:123 -> getInputRelevance
    6:16:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams,boolean):97 -> getInputRelevance
    17:17:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevancePartitioned(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams):119:119 -> getInputRelevance
    17:17:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams,boolean):97 -> getInputRelevance
    18:18:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams,boolean):99:99 -> getInputRelevance
    1:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRecurrentErrors(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams):79:81 -> getRecurrentErrors
    1:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):138:141 -> getRecurrentRelevance
    5:14:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):139:148 -> getRecurrentRelevance
    15:15:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):144:144 -> getRecurrentRelevance
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams -> com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams:
# {"id":"sourceFile","fileName":"RecurrentLinearParams.kt"}
    com.kotlinnlp.simplednn.core.arrays.ParamsArray recurrentWeights -> f
    1:1:void <init>(int,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):20:20 -> <init>
    2:19:void <init>(int,int,boolean):24:41 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getRecurrentWeights():41:41 -> getRecurrentWeights
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams$Companion -> com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams$Companion:
# {"id":"sourceFile","fileName":"RecurrentLinearParams.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():29:29 -> <init>
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper:
# {"id":"sourceFile","fileName":"RecurrentRelevanceHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer):21:21 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer):20:20 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNBackwardHelper:
# {"id":"sourceFile","fileName":"CFNBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer):21:21 -> <init>
    1:2:void execBackward(boolean):32:33 -> execBackward
    3:3:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer):137:137 -> execBackward
    3:3:void execBackward(boolean):36 -> execBackward
    4:26:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getLayerRecurrentContribution(com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer):149:171 -> execBackward
    4:26:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer):138 -> execBackward
    4:26:void execBackward(boolean):36 -> execBackward
    27:27:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer):140:140 -> execBackward
    27:27:void execBackward(boolean):36 -> execBackward
    28:54:void assignGatesGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer):55:81 -> execBackward
    28:54:void execBackward(boolean):39 -> execBackward
    55:55:void execBackward(boolean):41:41 -> execBackward
    56:62:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):90:96 -> execBackward
    56:62:void execBackward(boolean):41 -> execBackward
    63:73:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):93:103 -> execBackward
    63:73:void execBackward(boolean):41 -> execBackward
    74:83:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):100:109 -> execBackward
    74:83:void execBackward(boolean):41 -> execBackward
    84:95:void assignLayerGradients():117:128 -> execBackward
    84:95:void execBackward(boolean):44 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNForwardHelper:
# {"id":"sourceFile","fileName":"CFNForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer):21:21 -> <init>
    1:1:void forward():31:31 -> forward
    2:8:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):65:71 -> forward
    2:8:void forward():33 -> forward
    9:17:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):69:77 -> forward
    9:17:void forward():33 -> forward
    18:34:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):75:91 -> forward
    18:34:void forward():33 -> forward
    35:48:void forward() -> forward
    49:54:void forward():47:52 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer -> com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer:
# {"id":"sourceFile","fileName":"CFNLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters params -> l
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray candidate -> m
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit inputGate -> n
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit forgetGate -> o
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray activatedPrevOutput -> p
    com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNForwardHelper forwardHelper -> q
    com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNBackwardHelper backwardHelper -> r
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):31:31 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):39:39 -> <init>
    3:61:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):35:93 -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getActivatedPrevOutput():67:67 -> getActivatedPrevOutput
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():31:31 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNBackwardHelper getBackwardHelper$advancedml_release():77:77 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getCandidate():52:52 -> getCandidate
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getForgetGate():62:62 -> getForgetGate
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():31:31 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNForwardHelper getForwardHelper$advancedml_release():72:72 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors():114:114 -> getInitHiddenErrors
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getInputGate():57:57 -> getInputGate
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():31:31 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters getParams():35:35 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release():0:0 -> getRelevanceHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release():31:31 -> getRelevanceHelper$advancedml_release
    3:3:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release():31:31 -> getRelevanceHelper$advancedml_release
    1:1:void setActivatedPrevOutput(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):67:67 -> setActivatedPrevOutput
    1:1:void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):104:104 -> setInitHidden
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters:
# {"id":"sourceFile","fileName":"CFNLayerParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams inputGate -> g
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams forgetGate -> h
    com.kotlinnlp.simplednn.core.arrays.ParamsArray candidateWeights -> i
    java.util.List weightsList -> j
    java.util.List biasesList -> k
    1:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):28:29 -> <init>
    3:3:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):25:25 -> <init>
    4:25:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):31:52 -> <init>
    26:36:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):50:60 -> <init>
    37:57:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):58:78 -> <init>
    58:73:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):71:86 -> <init>
    74:83:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):84:93 -> <init>
    1:1:java.util.List getBiasesList():84:84 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getCandidateWeights():66:66 -> getCandidateWeights
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getForgetGate():58:58 -> getForgetGate
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getInputGate():50:50 -> getInputGate
    1:1:java.util.List getWeightsList():71:71 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters$Companion:
# {"id":"sourceFile","fileName":"CFNLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():38:38 -> <init>
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNBackwardHelper:
# {"id":"sourceFile","fileName":"DeltaRNNBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer):21:21 -> <init>
    1:5:void execBackward(boolean):32:36 -> execBackward
    6:6:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer):76:76 -> execBackward
    6:6:void execBackward(boolean):36 -> execBackward
    7:19:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getLayerRecurrentContribution(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer):89:101 -> execBackward
    7:19:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer):77 -> execBackward
    7:19:void execBackward(boolean):36 -> execBackward
    20:20:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer):79:79 -> execBackward
    20:20:void execBackward(boolean):36 -> execBackward
    21:21:void execBackward(boolean):39:39 -> execBackward
    22:32:void assignArraysGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):56:66 -> execBackward
    22:32:void execBackward(boolean):41 -> execBackward
    33:67:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):111:145 -> execBackward
    33:67:void execBackward(boolean):42 -> execBackward
    68:79:void assignInputGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):156:167 -> execBackward
    68:79:void execBackward(boolean):45 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNForwardHelper:
# {"id":"sourceFile","fileName":"DeltaRNNForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer):24:24 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer getLayer():23:23 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer):23 -> <init>
    1:7:void forward():33:39 -> forward
    8:11:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateRecurrentContribution(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):117:120 -> forward
    8:11:void forward():42 -> forward
    12:32:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateCandidate(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):136:156 -> forward
    12:32:void forward():41 -> forward
    33:41:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculatePartition():220:228 -> forward
    33:41:void forward():44 -> forward
    42:49:void forward():46:53 -> forward
    50:66:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):63:79 -> forward
    67:80:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):75:88 -> forward
    81:81:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):84:84 -> forward
    82:114:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateCandidateSavingContributions(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):174:206 -> forward
    82:114:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):91 -> forward
    115:123:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculatePartition():220:228 -> forward
    115:123:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):92 -> forward
    124:262:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):94:232 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():22:22 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer getLayer():23:23 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer -> com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer:
# {"id":"sourceFile","fileName":"DeltaRNNLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters params -> l
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray candidate -> m
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray partition -> n
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray wx -> o
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray wyRec -> p
    com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNForwardHelper forwardHelper -> q
    com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNBackwardHelper backwardHelper -> r
    com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper relevanceHelper -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/simplednn/core/layers/models/recurrent/deltarnn/DeltaRNNRelevanceHelper;"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport _relevanceSupport -> t
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):34:34 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):42:42 -> <init>
    3:66:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):38:101 -> <init>
    67:88:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):100:121 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():34:34 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNBackwardHelper getBackwardHelper$advancedml_release():94:94 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getCandidate():55:55 -> getCandidate
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():34:34 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNForwardHelper getForwardHelper$advancedml_release():89:89 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors():141:141 -> getInitHiddenErrors
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():34:34 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters getParams():38:38 -> getParams
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getPartition():60:60 -> getPartition
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release():34:34 -> getRelevanceHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release():34:34 -> getRelevanceHelper$advancedml_release
    3:3:com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release():100:100 -> getRelevanceHelper$advancedml_release
    1:4:com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport getRelevanceSupport():79:82 -> getRelevanceSupport
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getWx():65:65 -> getWx
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getWyRec():71:71 -> getWyRec
    1:1:void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):131:131 -> setInitHidden
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters:
# {"id":"sourceFile","fileName":"DeltaRNNLayerParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.models.LinearParams feedforwardUnit -> g
    com.kotlinnlp.simplednn.core.layers.models.LinearParams recurrentUnit -> h
    com.kotlinnlp.simplednn.core.arrays.ParamsArray alpha -> i
    com.kotlinnlp.simplednn.core.arrays.ParamsArray beta1 -> j
    com.kotlinnlp.simplednn.core.arrays.ParamsArray beta2 -> k
    java.util.List weightsList -> l
    java.util.List biasesList -> m
    1:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):29:30 -> <init>
    3:3:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):26:26 -> <init>
    4:25:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):32:53 -> <init>
    26:59:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):51:84 -> <init>
    60:73:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):79:92 -> <init>
    74:83:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):90:99 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getAlpha():64:64 -> getAlpha
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getBeta1():69:69 -> getBeta1
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getBeta2():74:74 -> getBeta2
    1:1:java.util.List getBiasesList():90:90 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getFeedforwardUnit():51:51 -> getFeedforwardUnit
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getRecurrentUnit():59:59 -> getRecurrentUnit
    1:1:java.util.List getWeightsList():79:79 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters$Companion:
# {"id":"sourceFile","fileName":"DeltaRNNLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():39:39 -> <init>
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceHelper:
# {"id":"sourceFile","fileName":"DeltaRNNRelevanceHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer layer -> c
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer):23:23 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer):22:22 -> <init>
    1:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray partialAssignSum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):248:254 -> a
    1:19:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):59:77 -> getInputRelevance
    20:31:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):73:84 -> getInputRelevance
    32:47:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):80:95 -> getInputRelevance
    48:57:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):90:99 -> getInputRelevance
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():21:21 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer getLayer():21:21 -> getLayer
    3:3:com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer getLayer():22:22 -> getLayer
    1:5:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):32:36 -> propagateRelevanceToGates
    6:11:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputPartition(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters):157:162 -> propagateRelevanceToGates
    6:11:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):39 -> propagateRelevanceToGates
    12:12:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputPartition(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters):161:161 -> propagateRelevanceToGates
    12:12:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):39 -> propagateRelevanceToGates
    13:21:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):39:47 -> propagateRelevanceToGates
    22:23:void setCandidateRelevancePartitions(boolean):190:191 -> propagateRelevanceToGates
    22:23:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):49 -> propagateRelevanceToGates
    24:31:void splitCandidateRelevancePartitions(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport):209:216 -> propagateRelevanceToGates
    24:31:void setCandidateRelevancePartitions(boolean):194 -> propagateRelevanceToGates
    24:31:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):49 -> propagateRelevanceToGates
    32:32:void splitCandidateRelevancePartitions(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport):213:213 -> propagateRelevanceToGates
    32:32:void setCandidateRelevancePartitions(boolean):194 -> propagateRelevanceToGates
    32:32:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):49 -> propagateRelevanceToGates
    33:46:void splitCandidateRelevancePartitions(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport):212:225 -> propagateRelevanceToGates
    33:46:void setCandidateRelevancePartitions(boolean):194 -> propagateRelevanceToGates
    33:46:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):49 -> propagateRelevanceToGates
    47:47:void splitCandidateRelevancePartitions(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport):222:222 -> propagateRelevanceToGates
    47:47:void setCandidateRelevancePartitions(boolean):194 -> propagateRelevanceToGates
    47:47:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):49 -> propagateRelevanceToGates
    48:58:void splitCandidateRelevancePartitions(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport):221:231 -> propagateRelevanceToGates
    48:58:void setCandidateRelevancePartitions(boolean):194 -> propagateRelevanceToGates
    48:58:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):49 -> propagateRelevanceToGates
    59:59:void splitCandidateRelevancePartitions(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport):230:230 -> propagateRelevanceToGates
    59:59:void setCandidateRelevancePartitions(boolean):194 -> propagateRelevanceToGates
    59:59:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):49 -> propagateRelevanceToGates
    60:60:void setCandidateRelevancePartitions(boolean):197:197 -> propagateRelevanceToGates
    60:60:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):49 -> propagateRelevanceToGates
    1:17:void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):115:131 -> setRecurrentRelevance
    18:30:void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):127:139 -> setRecurrentRelevance
    31:31:void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):134:134 -> setRecurrentRelevance
    32:34:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRecurrentPartition(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters):178:180 -> setRecurrentRelevance
    32:34:void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):143 -> setRecurrentRelevance
    35:35:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRecurrentPartition(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters):177:177 -> setRecurrentRelevance
    35:35:void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):143 -> setRecurrentRelevance
    36:37:void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):143:144 -> setRecurrentRelevance
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport -> com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport:
# {"id":"sourceFile","fileName":"DeltaRNNRelevanceSupport.kt"}
    int outputSize -> a
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray d1Input -> b
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray d1Rec -> c
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray d2 -> d
    1:16:void <init>(int):20:35 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getD1Input():25:25 -> getD1Input
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getD1Rec():30:30 -> getD1Rec
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getD2():35:35 -> getD2
    1:1:int getOutputSize():20:20 -> getOutputSize
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUBackwardHelper:
# {"id":"sourceFile","fileName":"GRUBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer):21:21 -> <init>
    1:4:void execBackward(boolean):32:35 -> execBackward
    5:5:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer):140:140 -> execBackward
    5:5:void execBackward(boolean):35 -> execBackward
    6:28:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getLayerRecurrentContribution(com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer):152:174 -> execBackward
    6:28:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer):141 -> execBackward
    6:28:void execBackward(boolean):35 -> execBackward
    29:29:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer):143:143 -> execBackward
    29:29:void execBackward(boolean):35 -> execBackward
    30:55:void assignGatesGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):51:76 -> execBackward
    30:55:void execBackward(boolean):37 -> execBackward
    56:62:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):85:91 -> execBackward
    56:62:void execBackward(boolean):39 -> execBackward
    63:73:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):88:98 -> execBackward
    63:73:void execBackward(boolean):39 -> execBackward
    74:83:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):95:104 -> execBackward
    74:83:void execBackward(boolean):39 -> execBackward
    84:93:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):102:111 -> execBackward
    84:93:void execBackward(boolean):39 -> execBackward
    94:105:void assignLayerGradients():120:131 -> execBackward
    94:105:void execBackward(boolean):42 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUForwardHelper:
# {"id":"sourceFile","fileName":"GRUForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer):21:21 -> <init>
    1:1:void forward():31:31 -> forward
    2:6:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):58:62 -> forward
    2:6:void forward():33 -> forward
    7:15:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):60:68 -> forward
    7:15:void forward():33 -> forward
    16:24:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):66:74 -> forward
    16:24:void forward():33 -> forward
    25:46:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):72:93 -> forward
    25:46:void forward():33 -> forward
    47:57:void forward():35:45 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer -> com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer:
# {"id":"sourceFile","fileName":"GRULayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters params -> l
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit candidate -> m
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit resetGate -> n
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit partitionGate -> o
    com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUForwardHelper forwardHelper -> p
    com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUBackwardHelper backwardHelper -> q
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):32:32 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):40:40 -> <init>
    3:56:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):36:89 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():32:32 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUBackwardHelper getBackwardHelper$advancedml_release():73:73 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getCandidate():53:53 -> getCandidate
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():32:32 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUForwardHelper getForwardHelper$advancedml_release():68:68 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors():110:110 -> getInitHiddenErrors
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():32:32 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters getParams():36:36 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getPartitionGate():63:63 -> getPartitionGate
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release():0:0 -> getRelevanceHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release():32:32 -> getRelevanceHelper$advancedml_release
    3:3:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release():32:32 -> getRelevanceHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getResetGate():58:58 -> getResetGate
    1:1:void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):100:100 -> setInitHidden
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters -> com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters:
# {"id":"sourceFile","fileName":"GRULayerParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams candidate -> g
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams resetGate -> h
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams partitionGate -> i
    java.util.List weightsList -> j
    java.util.List biasesList -> k
    1:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):28:29 -> <init>
    3:3:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):25:25 -> <init>
    4:24:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):31:51 -> <init>
    25:35:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):49:59 -> <init>
    36:46:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):57:67 -> <init>
    47:63:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):65:81 -> <init>
    64:81:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):73:90 -> <init>
    82:92:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):87:97 -> <init>
    1:1:java.util.List getBiasesList():87:87 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getCandidate():49:49 -> getCandidate
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getPartitionGate():65:65 -> getPartitionGate
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getResetGate():57:57 -> getResetGate
    1:1:java.util.List getWeightsList():73:73 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters$Companion:
# {"id":"sourceFile","fileName":"GRULayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():37:37 -> <init>
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNBackwardHelper:
# {"id":"sourceFile","fileName":"IndRNNBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer):23:23 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer):22:22 -> <init>
    1:5:void execBackward(boolean):33:37 -> execBackward
    6:10:void addLayerRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer):88:92 -> execBackward
    6:10:void execBackward(boolean):37 -> execBackward
    11:13:void execBackward(boolean):40:42 -> execBackward
    14:17:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):58:61 -> execBackward
    14:17:void execBackward(boolean):42 -> execBackward
    18:30:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):58:70 -> execBackward
    18:30:void execBackward(boolean):42 -> execBackward
    31:32:void assignLayerGradients():78:79 -> execBackward
    31:32:void execBackward(boolean):45 -> execBackward
    33:33:void assignLayerGradients():78:78 -> execBackward
    33:33:void execBackward(boolean):45 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():21:21 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer getLayer():22:22 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNForwardHelper:
# {"id":"sourceFile","fileName":"IndRNNForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer):20:20 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer):19:19 -> <init>
    1:4:void forward():30:33 -> forward
    5:18:void forward():30:43 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():18:18 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer getLayer():19:19 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer -> com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer:
# {"id":"sourceFile","fileName":"IndRNNLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters params -> l
    com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNForwardHelper forwardHelper -> m
    com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNBackwardHelper backwardHelper -> n
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):30:30 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):38:38 -> <init>
    3:37:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):34:68 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():30:30 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNBackwardHelper getBackwardHelper$advancedml_release():56:56 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():30:30 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNForwardHelper getForwardHelper$advancedml_release():51:51 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors():89:89 -> getInitHiddenErrors
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():30:30 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters getParams():34:34 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release():0:0 -> getRelevanceHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release():30:30 -> getRelevanceHelper$advancedml_release
    3:3:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release():30:30 -> getRelevanceHelper$advancedml_release
    1:1:void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):79:79 -> setInitHidden
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters:
# {"id":"sourceFile","fileName":"IndRNNLayerParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.models.LinearParams feedforwardUnit -> g
    com.kotlinnlp.simplednn.core.arrays.ParamsArray recurrentWeights -> h
    java.util.List weightsList -> i
    java.util.List biasesList -> j
    1:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):28:29 -> <init>
    3:3:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):25:25 -> <init>
    4:25:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):31:52 -> <init>
    26:41:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):50:65 -> <init>
    42:51:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):63:72 -> <init>
    52:60:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):71:79 -> <init>
    1:1:java.util.List getBiasesList():71:71 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getFeedforwardUnit():50:50 -> getFeedforwardUnit
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getRecurrentWeights():58:58 -> getRecurrentWeights
    1:1:java.util.List getWeightsList():63:63 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters$Companion:
# {"id":"sourceFile","fileName":"IndRNNLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():38:38 -> <init>
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMBackwardHelper:
# {"id":"sourceFile","fileName":"LSTMBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer):21:21 -> <init>
    1:2:void execBackward(boolean):32:33 -> execBackward
    3:6:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer):186:189 -> execBackward
    3:6:void execBackward(boolean):36 -> execBackward
    7:22:void assignGatesGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer,com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer):79:94 -> execBackward
    7:22:void execBackward(boolean):39 -> execBackward
    23:26:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getCellRecurrentContribution(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer):198:201 -> execBackward
    23:26:void assignGatesGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer,com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer):98 -> execBackward
    23:26:void execBackward(boolean):39 -> execBackward
    27:46:void assignGatesGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer,com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer):98:117 -> execBackward
    27:46:void execBackward(boolean):39 -> execBackward
    47:47:void execBackward(boolean):41:41 -> execBackward
    48:54:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):126:132 -> execBackward
    48:54:void execBackward(boolean):41 -> execBackward
    55:65:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):129:139 -> execBackward
    55:65:void execBackward(boolean):41 -> execBackward
    66:76:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):136:146 -> execBackward
    66:76:void execBackward(boolean):41 -> execBackward
    77:87:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):143:153 -> execBackward
    77:87:void execBackward(boolean):41 -> execBackward
    88:88:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):150:150 -> execBackward
    88:88:void execBackward(boolean):41 -> execBackward
    89:103:void assignLayerGradients():163:177 -> execBackward
    89:103:void execBackward(boolean):44 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer getLayer():21:21 -> getLayer
    1:16:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getLayerRecurrentContribution(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer):54:69 -> getLayerRecurrentContribution
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMForwardHelper:
# {"id":"sourceFile","fileName":"LSTMForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer):21:21 -> <init>
    1:1:void forward():31:31 -> forward
    2:6:void forwardGates():78:82 -> forward
    2:6:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):51 -> forward
    2:6:void forward():31 -> forward
    7:15:void forwardGates():80:88 -> forward
    7:15:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):51 -> forward
    7:15:void forward():31 -> forward
    16:24:void forwardGates():86:94 -> forward
    16:24:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):51 -> forward
    16:24:void forward():31 -> forward
    25:33:void forwardGates():92:100 -> forward
    25:33:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):51 -> forward
    25:33:void forward():31 -> forward
    34:34:void forwardGates():98:98 -> forward
    34:34:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):51 -> forward
    34:34:void forward():31 -> forward
    35:40:void addGatesRecurrentContribution(com.kotlinnlp.simplednn.core.layers.Layer):110:115 -> forward
    35:40:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):54 -> forward
    35:40:void forward():31 -> forward
    41:44:void activateGates():122:125 -> forward
    41:44:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):57 -> forward
    41:44:void forward():31 -> forward
    45:56:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):59:70 -> forward
    45:56:void forward():31 -> forward
    57:61:void forward():33:37 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer -> com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer:
# {"id":"sourceFile","fileName":"LSTMLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters params -> l
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit inputGate -> m
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit outputGate -> n
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit forgetGate -> o
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit candidate -> p
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray cell -> q
    com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMForwardHelper forwardHelper -> r
    com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMBackwardHelper backwardHelper -> s
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):32:32 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):40:40 -> <init>
    3:68:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):36:101 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():32:32 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMBackwardHelper getBackwardHelper$advancedml_release():83:83 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getCandidate():68:68 -> getCandidate
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getCell():73:73 -> getCell
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getForgetGate():63:63 -> getForgetGate
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():32:32 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMForwardHelper getForwardHelper$advancedml_release():78:78 -> getForwardHelper$advancedml_release
    1:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors():123:124 -> getInitHiddenErrors
    3:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors():123:124 -> getInitHiddenErrors
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getInputGate():53:53 -> getInputGate
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getOutputGate():58:58 -> getOutputGate
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():32:32 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters getParams():36:36 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release():0:0 -> getRelevanceHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release():32:32 -> getRelevanceHelper$advancedml_release
    3:3:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release():32:32 -> getRelevanceHelper$advancedml_release
    1:2:void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):112:113 -> setInitHidden
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters:
# {"id":"sourceFile","fileName":"LSTMLayerParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams inputGate -> g
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams outputGate -> h
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams forgetGate -> i
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams candidate -> j
    java.util.List weightsList -> k
    java.util.List biasesList -> l
    1:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):29:30 -> <init>
    3:3:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):26:26 -> <init>
    4:25:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):32:53 -> <init>
    26:36:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):51:61 -> <init>
    37:47:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):59:69 -> <init>
    48:58:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):67:77 -> <init>
    59:77:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):75:93 -> <init>
    78:98:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):83:103 -> <init>
    99:110:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean) -> <init>
    1:1:java.util.List getBiasesList():99:99 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getCandidate():75:75 -> getCandidate
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getForgetGate():67:67 -> getForgetGate
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getInputGate():51:51 -> getInputGate
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getOutputGate():59:59 -> getOutputGate
    1:1:java.util.List getWeightsList():83:83 -> getWeightsList
    1:1:void initForgetGateBiasToOne():117:117 -> initForgetGateBiasToOne
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters$Companion:
# {"id":"sourceFile","fileName":"LSTMLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():39:39 -> <init>
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMBackwardHelper:
# {"id":"sourceFile","fileName":"LTMBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer):21:21 -> <init>
    1:2:void execBackward(boolean):32:33 -> execBackward
    3:7:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer):123:127 -> execBackward
    3:7:void execBackward(boolean):35 -> execBackward
    8:20:void assignCellGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer):54:66 -> execBackward
    8:20:void execBackward(boolean):37 -> execBackward
    21:34:void assignGatesGradients():74:87 -> execBackward
    21:34:void execBackward(boolean):38 -> execBackward
    35:38:void assignParamsGradients():95:98 -> execBackward
    35:38:void execBackward(boolean):40 -> execBackward
    39:47:void assignParamsGradients():95:103 -> execBackward
    39:47:void execBackward(boolean):40 -> execBackward
    48:56:void assignParamsGradients():100:108 -> execBackward
    48:56:void execBackward(boolean):40 -> execBackward
    57:65:void assignParamsGradients():105:113 -> execBackward
    57:65:void execBackward(boolean):40 -> execBackward
    66:66:void assignParamsGradients():110:110 -> execBackward
    66:66:void execBackward(boolean):40 -> execBackward
    67:75:void assignInputGradients():135:143 -> execBackward
    67:75:void execBackward(boolean):45 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMForwardHelper:
# {"id":"sourceFile","fileName":"LTMForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer):21:21 -> <init>
    1:1:void forward():31:31 -> forward
    2:12:void forwardInputGates(com.kotlinnlp.simplednn.core.layers.Layer):54:64 -> forward
    2:12:void forward():33 -> forward
    13:21:void forwardCell(com.kotlinnlp.simplednn.core.layers.Layer):77:85 -> forward
    13:21:void forward():34 -> forward
    22:26:void forward():36:40 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer getLayer():21:21 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer -> com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer:
# {"id":"sourceFile","fileName":"LTMLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters params -> l
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray c -> m
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputGate1 -> n
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputGate2 -> o
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray inputGate3 -> p
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray cell -> q
    com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMForwardHelper forwardHelper -> r
    com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMBackwardHelper backwardHelper -> s
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,float):36:36 -> <init>
    2:69:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,float):33:100 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():29:29 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMBackwardHelper getBackwardHelper$advancedml_release():86:86 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getC():56:56 -> getC
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getCell():76:76 -> getCell
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():29:29 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMForwardHelper getForwardHelper$advancedml_release():81:81 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors():121:121 -> getInitHiddenErrors
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputGate1():61:61 -> getInputGate1
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputGate2():66:66 -> getInputGate2
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputGate3():71:71 -> getInputGate3
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():29:29 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters getParams():33:33 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release():0:0 -> getRelevanceHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release():29:29 -> getRelevanceHelper$advancedml_release
    3:3:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release():29:29 -> getRelevanceHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getX():50:50 -> getX
    1:2:void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):110:111 -> setInitHidden
    1:1:void setX(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):50:50 -> setX
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters:
# {"id":"sourceFile","fileName":"LTMLayerParameters.kt"}
    boolean sparseInput -> g
    com.kotlinnlp.simplednn.core.layers.models.LinearParams inputGate1 -> h
    com.kotlinnlp.simplednn.core.layers.models.LinearParams inputGate2 -> i
    com.kotlinnlp.simplednn.core.layers.models.LinearParams inputGate3 -> j
    com.kotlinnlp.simplednn.core.layers.models.LinearParams cell -> k
    java.util.List weightsList -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List biasesList -> m
    1:1:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):25:25 -> <init>
    2:2:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):23:23 -> <init>
    3:3:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):27:27 -> <init>
    4:4:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):26:26 -> <init>
    4:4:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):26 -> <init>
    5:5:com.kotlinnlp.simplednn.core.layers.models.LinearParams getInputGate1():46:46 -> <init>
    5:5:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):46 -> <init>
    6:6:com.kotlinnlp.simplednn.core.layers.models.LinearParams getInputGate2():51:51 -> <init>
    6:6:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):51 -> <init>
    7:7:com.kotlinnlp.simplednn.core.layers.models.LinearParams getInputGate3():56:56 -> <init>
    7:7:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):56 -> <init>
    8:8:com.kotlinnlp.simplednn.core.layers.models.LinearParams getCell():61:61 -> <init>
    8:8:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):61 -> <init>
    9:9:java.util.List getBiasesList():71:71 -> <init>
    9:9:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):71 -> <init>
    10:28:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):78:96 -> <init>
    29:45:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):80:96 -> <init>
    46:48:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):80:82 -> <init>
    1:4:com.kotlinnlp.simplednn.core.layers.models.LinearParams buildGateParams():88:91 -> a
    5:5:com.kotlinnlp.simplednn.core.layers.models.LinearParams buildGateParams():88:88 -> a
    1:1:java.util.List getBiasesList():71:71 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getCell():61:61 -> getCell
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getInputGate1():46:46 -> getInputGate1
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getInputGate2():51:51 -> getInputGate2
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getInputGate3():56:56 -> getInputGate3
    1:1:java.util.List getWeightsList():66:66 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters$Companion:
# {"id":"sourceFile","fileName":"LTMLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():34:34 -> <init>
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANBackwardHelper:
# {"id":"sourceFile","fileName":"RANBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer):23:23 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer):22:22 -> <init>
    1:4:void execBackward(boolean):33:36 -> execBackward
    5:5:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer):124:124 -> execBackward
    5:5:void execBackward(boolean):38 -> execBackward
    6:13:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getLayerRecurrentContribution(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer):136:143 -> execBackward
    6:13:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer):125 -> execBackward
    6:13:void execBackward(boolean):38 -> execBackward
    14:14:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer):127:127 -> execBackward
    14:14:void execBackward(boolean):38 -> execBackward
    15:36:void assignGatesGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer):54:75 -> execBackward
    15:36:void execBackward(boolean):40 -> execBackward
    37:37:void execBackward(boolean):42:42 -> execBackward
    38:44:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):84:90 -> execBackward
    38:44:void execBackward(boolean):42 -> execBackward
    45:55:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):87:97 -> execBackward
    45:55:void execBackward(boolean):42 -> execBackward
    56:65:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):94:103 -> execBackward
    56:65:void execBackward(boolean):42 -> execBackward
    66:66:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):101:101 -> execBackward
    66:66:void execBackward(boolean):42 -> execBackward
    67:70:void assignLayerGradients():112:115 -> execBackward
    67:70:void execBackward(boolean):45 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():21:21 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer getLayer():22:22 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANForwardHelper:
# {"id":"sourceFile","fileName":"RANForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer):25:25 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer getLayer():24:24 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer):24 -> <init>
    1:1:void forward():34:34 -> forward
    2:6:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):104:108 -> forward
    2:6:void forward():36 -> forward
    7:15:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):106:114 -> forward
    7:15:void forward():36 -> forward
    16:24:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):112:120 -> forward
    16:24:void forward():36 -> forward
    25:38:void setGates(com.kotlinnlp.simplednn.core.layers.Layer):118:131 -> forward
    25:38:void forward():36 -> forward
    39:54:void forward():38:53 -> forward
    55:58:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):66:69 -> forward
    59:64:void setGates(com.kotlinnlp.simplednn.core.layers.Layer,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):148:153 -> forward
    59:64:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):69 -> forward
    65:77:void forwardGates(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):180:192 -> forward
    65:77:void setGates(com.kotlinnlp.simplednn.core.layers.Layer,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):155 -> forward
    65:77:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):69 -> forward
    78:89:void forwardGates(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):187:198 -> forward
    78:89:void setGates(com.kotlinnlp.simplednn.core.layers.Layer,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):155 -> forward
    78:89:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):69 -> forward
    90:101:void forwardGates(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):194:205 -> forward
    90:101:void setGates(com.kotlinnlp.simplednn.core.layers.Layer,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):155 -> forward
    90:101:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):69 -> forward
    102:102:void forwardGates(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):201:201 -> forward
    102:102:void setGates(com.kotlinnlp.simplednn.core.layers.Layer,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):155 -> forward
    102:102:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):69 -> forward
    103:103:void setGates(com.kotlinnlp.simplednn.core.layers.Layer,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):160:160 -> forward
    103:103:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):69 -> forward
    104:113:void addGatesRecurrentContribution(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):224:233 -> forward
    104:113:void setGates(com.kotlinnlp.simplednn.core.layers.Layer,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):158 -> forward
    104:113:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):69 -> forward
    114:129:void addGatesRecurrentContribution(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):227:242 -> forward
    114:129:void setGates(com.kotlinnlp.simplednn.core.layers.Layer,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):158 -> forward
    114:129:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):69 -> forward
    130:130:void addGatesRecurrentContribution(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):236:236 -> forward
    130:130:void setGates(com.kotlinnlp.simplednn.core.layers.Layer,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):158 -> forward
    130:130:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):69 -> forward
    131:132:void setGates(com.kotlinnlp.simplednn.core.layers.Layer,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):165:166 -> forward
    131:132:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):69 -> forward
    133:152:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):71:90 -> forward
    153:153:void forwardGates(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):247:247 -> forward
    153:153:void setGates(com.kotlinnlp.simplednn.core.layers.Layer,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):155 -> forward
    153:153:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):69 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():23:23 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer getLayer():24:24 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer -> com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer:
# {"id":"sourceFile","fileName":"RANLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters params -> l
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray candidate -> m
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit inputGate -> n
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit forgetGate -> o
    com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANForwardHelper forwardHelper -> p
    com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANBackwardHelper backwardHelper -> q
    com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper relevanceHelper -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/simplednn/core/layers/models/recurrent/ran/RANRelevanceHelper;"}
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):32:32 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):40:40 -> <init>
    3:47:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):36:80 -> <init>
    48:62:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):79:93 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():32:32 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANBackwardHelper getBackwardHelper$advancedml_release():73:73 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getCandidate():53:53 -> getCandidate
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getForgetGate():63:63 -> getForgetGate
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():32:32 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANForwardHelper getForwardHelper$advancedml_release():68:68 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors():114:114 -> getInitHiddenErrors
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getInputGate():58:58 -> getInputGate
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():32:32 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters getParams():36:36 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release():32:32 -> getRelevanceHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release():32:32 -> getRelevanceHelper$advancedml_release
    3:3:com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release():79:79 -> getRelevanceHelper$advancedml_release
    1:1:void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):104:104 -> setInitHidden
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters:
# {"id":"sourceFile","fileName":"RANLayerParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams inputGate -> g
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams forgetGate -> h
    com.kotlinnlp.simplednn.core.layers.models.LinearParams candidate -> i
    java.util.List weightsList -> j
    java.util.List biasesList -> k
    1:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):29:30 -> <init>
    3:3:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):26:26 -> <init>
    4:25:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):32:53 -> <init>
    26:36:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):51:61 -> <init>
    37:60:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):59:82 -> <init>
    61:77:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):75:91 -> <init>
    78:88:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):88:98 -> <init>
    1:1:java.util.List getBiasesList():88:88 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.layers.models.LinearParams getCandidate():67:67 -> getCandidate
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getForgetGate():59:59 -> getForgetGate
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getInputGate():51:51 -> getInputGate
    1:1:java.util.List getWeightsList():75:75 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters$Companion:
# {"id":"sourceFile","fileName":"RANLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():39:39 -> <init>
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANRelevanceHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANRelevanceHelper:
# {"id":"sourceFile","fileName":"RANRelevanceHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer layer -> c
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer):22:22 -> <init>
    1:3:kotlin.Pair getRelevancePartitions(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):114:116 -> a
    4:19:kotlin.Pair splitRelevancePartitions(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):133:148 -> a
    4:19:kotlin.Pair getRelevancePartitions(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):117 -> a
    20:20:kotlin.Pair getRelevancePartitions(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters):120:120 -> a
    1:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):49:56 -> getInputRelevance
    9:24:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):54:69 -> getInputRelevance
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():22:22 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer getLayer():22:22 -> getLayer
    3:3:com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer getLayer():22:22 -> getLayer
    1:8:void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters):31:38 -> propagateRelevanceToGates
    1:9:void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):85:93 -> setRecurrentRelevance
    10:16:void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):91:97 -> setRecurrentRelevance
    17:22:void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):95:100 -> setRecurrentRelevance
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentBackwardHelper:
# {"id":"sourceFile","fileName":"SimpleRecurrentBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer):23:23 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer):22:22 -> <init>
    1:5:void execBackward(boolean):33:37 -> execBackward
    6:9:void addLayerRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer):79:82 -> execBackward
    6:9:void execBackward(boolean):37 -> execBackward
    10:12:void execBackward(boolean):40:42 -> execBackward
    13:18:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):58:63 -> execBackward
    13:18:void execBackward(boolean):42 -> execBackward
    19:19:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):58:58 -> execBackward
    19:19:void execBackward(boolean):42 -> execBackward
    20:20:void assignLayerGradients():71:71 -> execBackward
    20:20:void execBackward(boolean):45 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():21:21 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer getLayer():22:22 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentForwardHelper:
# {"id":"sourceFile","fileName":"SimpleRecurrentForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer):24:24 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer getLayer():23:23 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer):23 -> <init>
    1:4:void forward():34:37 -> forward
    5:15:void forward():34:44 -> forward
    16:21:void forward():42:47 -> forward
    22:38:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):59:75 -> forward
    39:55:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):71:87 -> forward
    56:70:void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters):81:95 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():22:22 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer getLayer():23:23 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer -> com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer:
# {"id":"sourceFile","fileName":"SimpleRecurrentLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit outputArray -> l
    com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters params -> m
    com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentForwardHelper forwardHelper -> n
    com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentBackwardHelper backwardHelper -> o
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper relevanceHelper -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/simplednn/core/layers/models/recurrent/simple/SimpleRecurrentRelevanceHelper;"}
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit,com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker):31:31 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit,com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):39:39 -> <init>
    3:33:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit,com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):34:64 -> <init>
    34:44:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit,com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float):63:73 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():31:31 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentBackwardHelper getBackwardHelper$advancedml_release():57:57 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():31:31 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentForwardHelper getForwardHelper$advancedml_release():52:52 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors():94:94 -> getInitHiddenErrors
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getOutputArray():31:31 -> getOutputArray
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getOutputArray():34:34 -> getOutputArray
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():31:31 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters getParams():35:35 -> getParams
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release():31:31 -> getRelevanceHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release():63:63 -> getRelevanceHelper$advancedml_release
    1:1:void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):84:84 -> setInitHidden
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters:
# {"id":"sourceFile","fileName":"SimpleRecurrentLayerParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams unit -> g
    java.util.List weightsList -> h
    java.util.List biasesList -> i
    1:2:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):28:29 -> <init>
    3:3:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):25:25 -> <init>
    4:25:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):31:52 -> <init>
    26:36:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):50:60 -> <init>
    37:46:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):58:67 -> <init>
    47:55:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean):66:74 -> <init>
    1:1:java.util.List getBiasesList():66:66 -> getBiasesList
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getUnit():50:50 -> getUnit
    1:1:java.util.List getWeightsList():58:58 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters$Companion:
# {"id":"sourceFile","fileName":"SimpleRecurrentLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():38:38 -> <init>
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentRelevanceHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentRelevanceHelper:
# {"id":"sourceFile","fileName":"SimpleRecurrentRelevanceHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer layer -> c
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer):21:21 -> <init>
    1:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):30:33 -> getInputRelevance
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):30:30 -> getInputRelevance
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():20:20 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer getLayer():20:20 -> getLayer
    3:3:com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer getLayer():21:21 -> getLayer
    1:4:void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):45:48 -> setRecurrentRelevance
    5:9:void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters):46:50 -> setRecurrentRelevance
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRBackwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRBackwardHelper:
# {"id":"sourceFile","fileName":"TPRBackwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer layer -> d
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer):24:24 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer):23:23 -> <init>
    1:4:void execBackward(boolean):34:37 -> execBackward
    5:5:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer):157:157 -> execBackward
    5:5:void execBackward(boolean):37 -> execBackward
    6:15:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getLayerRecurrentContribution(com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer):54:63 -> execBackward
    6:15:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer):158 -> execBackward
    6:15:void execBackward(boolean):37 -> execBackward
    16:16:void addOutputRecurrentGradients(com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer):160:160 -> execBackward
    16:16:void execBackward(boolean):37 -> execBackward
    17:43:void assignGradients():71:97 -> execBackward
    17:43:void execBackward(boolean):39 -> execBackward
    44:68:void assignParamsGradients(com.kotlinnlp.simplednn.core.arrays.AugmentedArray):107:131 -> execBackward
    44:68:void execBackward(boolean):41 -> execBackward
    69:76:void assignLayerGradients():140:147 -> execBackward
    69:76:void execBackward(boolean):44 -> execBackward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():22:22 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer getLayer():23:23 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRForwardHelper -> com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRForwardHelper:
# {"id":"sourceFile","fileName":"TPRForwardHelper.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer layer -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer):21:21 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer):20:20 -> <init>
    1:4:void forward():28:31 -> forward
    5:10:void addRecurrentContribution():50:55 -> forward
    5:10:void forward():33 -> forward
    11:18:void forward():35:42 -> forward
    1:1:com.kotlinnlp.simplednn.core.layers.Layer getLayer():19:19 -> getLayer
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer getLayer():20:20 -> getLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer -> com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer:
# {"id":"sourceFile","fileName":"TPRLayer.kt"}
    com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters params -> l
    float q -> m
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray aS -> n
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray aR -> o
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray s -> p
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray r -> q
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray bindingMatrix -> r
    com.kotlinnlp.simplednn.core.arrays.AugmentedArray outputArray -> s
    com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRForwardHelper forwardHelper -> t
    com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRBackwardHelper backwardHelper -> u
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,float,float):44:44 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,float,float):41:41 -> <init>
    3:68:void <init>(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,float,float):37:102 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getAR():59:59 -> getAR
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getAS():54:54 -> getAS
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release():34:34 -> getBackwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRBackwardHelper getBackwardHelper$advancedml_release():90:90 -> getBackwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getBindingMatrix():75:75 -> getBindingMatrix
    1:1:com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release():34:34 -> getForwardHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRForwardHelper getForwardHelper$advancedml_release():85:85 -> getForwardHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors():122:122 -> getInitHiddenErrors
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getOutputArray():80:80 -> getOutputArray
    1:1:com.kotlinnlp.simplednn.core.layers.LayerParameters getParams():34:34 -> getParams
    2:2:com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters getParams():37:37 -> getParams
    1:1:float getQ():40:40 -> getQ
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getR():69:69 -> getR
    1:1:com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release():0:0 -> getRelevanceHelper$advancedml_release
    2:2:com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release():34:34 -> getRelevanceHelper$advancedml_release
    3:3:com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release():34:34 -> getRelevanceHelper$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.arrays.AugmentedArray getS():64:64 -> getS
    1:1:void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):112:112 -> setInitHidden
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters -> com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters:
# {"id":"sourceFile","fileName":"TPRLayerParameters.kt"}
    int nSymbols -> g
    int dSymbols -> h
    int nRoles -> i
    int dRoles -> j
    com.kotlinnlp.simplednn.core.arrays.ParamsArray wInS -> k
    com.kotlinnlp.simplednn.core.arrays.ParamsArray wInR -> l
    com.kotlinnlp.simplednn.core.arrays.ParamsArray wRecS -> m
    com.kotlinnlp.simplednn.core.arrays.ParamsArray wRecR -> n
    com.kotlinnlp.simplednn.core.arrays.ParamsArray bS -> o
    com.kotlinnlp.simplednn.core.arrays.ParamsArray bR -> p
    com.kotlinnlp.simplednn.core.arrays.ParamsArray s -> q
    java.util.List weightsList -> s
    java.util.List biasesList -> t
    1:2:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):32:33 -> <init>
    3:3:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):26:26 -> <init>
    4:4:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):34:34 -> <init>
    5:76:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):28:99 -> <init>
    77:91:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):93:107 -> <init>
    92:101:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):105:114 -> <init>
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getBR():78:78 -> getBR
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getBS():73:73 -> getBS
    1:1:java.util.List getBiasesList():105:105 -> getBiasesList
    1:1:int getDRoles():31:31 -> getDRoles
    1:1:int getDSymbols():29:29 -> getDSymbols
    1:1:int getNRoles():30:30 -> getNRoles
    1:1:int getNSymbols():28:28 -> getNSymbols
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getR():88:88 -> getR
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getS():83:83 -> getS
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getWInR():58:58 -> getWInR
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getWInS():53:53 -> getWInS
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getWRecR():68:68 -> getWRecR
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray getWRecS():63:63 -> getWRecS
    1:1:java.util.List getWeightsList():93:93 -> getWeightsList
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters$Companion -> com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters$Companion:
# {"id":"sourceFile","fileName":"TPRLayerParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():41:41 -> <init>
com.kotlinnlp.simplednn.core.neuralnetwork.preset.CFN -> com.kotlinnlp.simplednn.core.neuralnetwork.preset.CFN:
# {"id":"sourceFile","fileName":"CFN.kt"}
    1:1:void <init>():19:19 -> <init>
    1:6:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:46 -> invoke
    7:7:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:41 -> invoke
    1:8:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.CFN,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):33:40 -> invoke$default
    9:9:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.CFN,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):32:32 -> invoke$default
com.kotlinnlp.simplednn.core.neuralnetwork.preset.DeltaRNN -> com.kotlinnlp.simplednn.core.neuralnetwork.preset.DeltaRNN:
# {"id":"sourceFile","fileName":"DeltaRNN.kt"}
    1:1:void <init>():19:19 -> <init>
    1:6:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:46 -> invoke
    7:7:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:41 -> invoke
    1:8:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.DeltaRNN,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):33:40 -> invoke$default
    9:9:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.DeltaRNN,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):32:32 -> invoke$default
com.kotlinnlp.simplednn.core.neuralnetwork.preset.FeedforwardNeuralNetwork -> com.kotlinnlp.simplednn.core.neuralnetwork.preset.FeedforwardNeuralNetwork:
# {"id":"sourceFile","fileName":"FeedforwardNeuralNetwork.kt"}
    1:1:void <init>():19:19 -> <init>
    1:6:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:46 -> invoke
    7:7:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:41 -> invoke
    1:8:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.FeedforwardNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):33:40 -> invoke$default
    9:9:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.FeedforwardNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):32:32 -> invoke$default
com.kotlinnlp.simplednn.core.neuralnetwork.preset.GRUNeuralNetwork -> com.kotlinnlp.simplednn.core.neuralnetwork.preset.GRUNeuralNetwork:
# {"id":"sourceFile","fileName":"GRUNeuralNetwork.kt"}
    1:1:void <init>():19:19 -> <init>
    1:6:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:46 -> invoke
    7:7:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:41 -> invoke
    1:8:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.GRUNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):33:40 -> invoke$default
    9:9:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.GRUNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):32:32 -> invoke$default
com.kotlinnlp.simplednn.core.neuralnetwork.preset.GenericNeuralNetwork -> com.kotlinnlp.simplednn.core.neuralnetwork.preset.GenericNeuralNetwork:
# {"id":"sourceFile","fileName":"GenericNeuralNetwork.kt"}
    1:1:void <init>():20:20 -> <init>
    1:15:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):47:61 -> invoke
    16:31:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):58:73 -> invoke
    32:32:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):65:65 -> invoke
    33:33:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):64:64 -> invoke
    34:34:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):45:45 -> invoke
com.kotlinnlp.simplednn.core.neuralnetwork.preset.HighwayNeuralNetwork -> com.kotlinnlp.simplednn.core.neuralnetwork.preset.HighwayNeuralNetwork:
# {"id":"sourceFile","fileName":"HighwayNeuralNetwork.kt"}
    1:1:void <init>():13:13 -> <init>
    1:8:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):38:45 -> invoke
    9:18:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):42:51 -> invoke
    19:28:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):48:57 -> invoke
    29:44:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):54:69 -> invoke
    45:45:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):61:61 -> invoke
    46:46:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):60:60 -> invoke
    47:47:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):36:36 -> invoke
    1:8:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.HighwayNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):27:34 -> invoke$default
    9:9:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.HighwayNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):26:26 -> invoke$default
com.kotlinnlp.simplednn.core.neuralnetwork.preset.IndRNNNeuralNetwork -> com.kotlinnlp.simplednn.core.neuralnetwork.preset.IndRNNNeuralNetwork:
# {"id":"sourceFile","fileName":"IndRNNNeuralNetwork.kt"}
    1:1:void <init>():12:12 -> <init>
    1:6:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):34:39 -> invoke
    7:7:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):34:34 -> invoke
    1:8:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.IndRNNNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):26:33 -> invoke$default
    9:9:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.IndRNNNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):25:25 -> invoke$default
com.kotlinnlp.simplednn.core.neuralnetwork.preset.LSTMNeuralNetwork -> com.kotlinnlp.simplednn.core.neuralnetwork.preset.LSTMNeuralNetwork:
# {"id":"sourceFile","fileName":"LSTMNeuralNetwork.kt"}
    1:1:void <init>():19:19 -> <init>
    1:6:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:46 -> invoke
    7:7:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:41 -> invoke
    1:8:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.LSTMNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):33:40 -> invoke$default
    9:9:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.LSTMNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):32:32 -> invoke$default
com.kotlinnlp.simplednn.core.neuralnetwork.preset.LTMNeuralNetwork -> com.kotlinnlp.simplednn.core.neuralnetwork.preset.LTMNeuralNetwork:
# {"id":"sourceFile","fileName":"LTMNeuralNetwork.kt"}
    1:1:void <init>():19:19 -> <init>
    1:6:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):37:42 -> invoke
    7:7:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):37:37 -> invoke
    1:6:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.LTMNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):31:36 -> invoke$default
    7:7:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.LTMNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):30:30 -> invoke$default
com.kotlinnlp.simplednn.core.neuralnetwork.preset.RANNeuralNetwork -> com.kotlinnlp.simplednn.core.neuralnetwork.preset.RANNeuralNetwork:
# {"id":"sourceFile","fileName":"RANNeuralNetwork.kt"}
    1:1:void <init>():19:19 -> <init>
    1:6:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:46 -> invoke
    7:7:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:41 -> invoke
    1:8:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.RANNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):33:40 -> invoke$default
    9:9:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.RANNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):32:32 -> invoke$default
com.kotlinnlp.simplednn.core.neuralnetwork.preset.SimpleRecurrentNeuralNetwork -> com.kotlinnlp.simplednn.core.neuralnetwork.preset.SimpleRecurrentNeuralNetwork:
# {"id":"sourceFile","fileName":"SimpleRecurrentNeuralNetwork.kt"}
    1:1:void <init>():19:19 -> <init>
    1:6:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:46 -> invoke
    7:7:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41:41 -> invoke
    1:8:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.SimpleRecurrentNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):33:40 -> invoke$default
    9:9:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.SimpleRecurrentNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):32:32 -> invoke$default
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor -> com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor:
# {"id":"sourceFile","fileName":"ChainProcessor.kt"}
    com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor inputProcessor -> a
    java.util.List hiddenProcessors -> b
    com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor outputProcessor -> c
    int id -> d
    boolean propagateToInput -> e
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):24:24 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.util.List,com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,int):24 -> <init>
    2:2:com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor getInputProcessor():31:31 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.util.List,com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,int):31 -> <init>
    3:3:java.util.List getHiddenProcessors():32:32 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.util.List,com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,int):32 -> <init>
    4:4:com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor getOutputProcessor():33:33 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.util.List,com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,int):33 -> <init>
    5:5:int getId():34:34 -> <init>
    5:5:void <init>(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.util.List,com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,int):34 -> <init>
    6:6:boolean getPropagateToInput():45:45 -> <init>
    6:6:void <init>(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.util.List,com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,int):45 -> <init>
    7:7:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):24:24 -> <init>
    7:7:void <init>(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.util.List,com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,int,int,kotlin.jvm.internal.DefaultConstructorMarker):24 -> <init>
    1:5:void backward(java.lang.Object):66:70 -> backward
    6:32:java.lang.Object backwardAndGetInputErrors(java.util.List,java.lang.Object):127:153 -> backward
    6:32:void backward(java.lang.Object):67 -> backward
    33:34:java.lang.Object backwardAndGetInputErrors(java.util.List,java.lang.Object):132:133 -> backward
    33:34:void backward(java.lang.Object):67 -> backward
    35:41:java.lang.Object backwardAndGetInputErrors(java.util.List,java.lang.Object):131:137 -> backward
    35:41:void backward(java.lang.Object):67 -> backward
    42:42:void backward(java.lang.Object):66:66 -> backward
    1:3:java.lang.Object forward(java.lang.Object):55:57 -> forward
    4:4:java.lang.Object forward(java.util.List,java.lang.Object):151:151 -> forward
    4:4:java.lang.Object forward(java.lang.Object):56 -> forward
    5:5:java.lang.Object forward(java.util.List,java.lang.Object):111:111 -> forward
    5:5:java.lang.Object forward(java.lang.Object):56 -> forward
    6:6:java.lang.Object forward(java.lang.Object):55:55 -> forward
    1:1:java.util.List getHiddenProcessors():32:32 -> getHiddenProcessors
    1:1:int getId():34:34 -> getId
    1:1:java.lang.Object getInputErrors(boolean):96:96 -> getInputErrors
    1:1:com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor getInputProcessor():31:31 -> getInputProcessor
    1:1:com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor getOutputProcessor():33:33 -> getOutputProcessor
    1:2:java.util.List getParamsErrors(boolean):84:85 -> getParamsErrors
    3:5:java.util.List getParamsErrors(java.util.List,boolean):155:157 -> getParamsErrors
    3:5:java.util.List getParamsErrors(boolean):85 -> getParamsErrors
    6:15:java.util.List getParamsErrors(java.util.List,boolean):148:157 -> getParamsErrors
    6:15:java.util.List getParamsErrors(boolean):85 -> getParamsErrors
    16:16:java.util.List getParamsErrors(java.util.List,boolean):148:148 -> getParamsErrors
    16:16:java.util.List getParamsErrors(boolean):85 -> getParamsErrors
    17:19:java.util.List getParamsErrors(boolean):84:86 -> getParamsErrors
    20:20:java.util.List getParamsErrors(boolean):84:84 -> getParamsErrors
    1:1:boolean getPropagateToInput():45:45 -> getPropagateToInput
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):24:24 -> propagateErrors
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor -> com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor:
# {"id":"sourceFile","fileName":"NeuralProcessor.kt"}
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$DefaultImpls -> com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$DefaultImpls:
# {"id":"sourceFile","fileName":"NeuralProcessor.kt"}
    1:1:java.lang.Object getInputErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,boolean,int,java.lang.Object):58:58 -> getInputErrors$default
    1:1:java.util.List getParamsErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,boolean,int,java.lang.Object):67:67 -> getParamsErrors$default
    1:5:java.lang.Object propagateErrors(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):82:86 -> propagateErrors
    1:1:java.lang.Object propagateErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean,int,java.lang.Object):80:80 -> propagateErrors$default
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors -> com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors:
# {"id":"sourceFile","fileName":"NeuralProcessor.kt"}
    1:1:void <init>():27:27 -> <init>
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor -> com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor:
# {"id":"sourceFile","fileName":"BatchFeedforwardProcessor.kt"}
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters model -> a
    boolean propagateToInput -> b
    int id -> c
    com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator errorsAccumulator -> d
    com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessorsPool processorsPool -> e
    java.util.List usedProcessors -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,int):29 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel():30:30 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,int):30 -> <init>
    3:3:boolean getPropagateToInput():32:32 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,int):32 -> <init>
    4:4:int getId():33:33 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,int):33 -> <init>
    5:18:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,int):59:72 -> <init>
    19:28:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,int):69:78 -> <init>
    29:29:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean) -> <init>
    29:29:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):29 -> <init>
    30:30:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):49:49 -> <init>
    31:31:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,int):51:51 -> <init>
    32:32:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):49:49 -> <init>
    32:32:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,int):49 -> <init>
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> backward
    1:1:void backward(java.lang.Object):29 -> backward
    2:6:void backward(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):171:175 -> backward
    7:9:void processorBackward(com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):237:239 -> backward
    7:9:void backward(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):175 -> backward
    10:10:void backward(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):171:171 -> backward
    11:88:void backward(java.util.List):185:262 -> backward
    89:89:void backward(java.util.List):190:190 -> backward
    90:92:void processorBackward(com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):237:239 -> backward
    90:92:void backward(java.util.List):191 -> backward
    93:93:void backward(java.util.List):187:187 -> backward
    94:94:void backward(java.util.List):186:186 -> backward
    95:95:void backward(java.util.List):185:185 -> backward
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> forward
    1:1:java.lang.Object forward(java.lang.Object):29 -> forward
    2:2:java.util.List forward(java.util.List):118:118 -> forward
    3:6:java.util.List forward(java.util.List,boolean):252:255 -> forward
    7:9:void reset():224:226 -> forward
    7:9:java.util.List forward(java.util.List,boolean):137 -> forward
    10:10:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forwardProcessor(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):205:205 -> forward
    10:10:java.util.List forward(java.util.List,boolean):138 -> forward
    11:11:java.util.List forward(java.util.List,boolean):255:255 -> forward
    12:14:java.util.List forward(java.util.List[],boolean):257:259 -> forward
    15:17:void reset():224:226 -> forward
    15:17:java.util.List forward(java.util.List[],boolean):158 -> forward
    18:18:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forwardProcessor(java.util.List):217:217 -> forward
    18:18:java.util.List forward(java.util.List[],boolean):159 -> forward
    19:19:java.util.List forward(java.util.List[],boolean):260:260 -> forward
    1:1:java.util.List forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor,java.util.List,boolean,int,java.lang.Object):135:135 -> forward$default
    2:2:java.util.List forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor,java.util.List[],boolean,int,java.lang.Object):156:156 -> forward$default
    1:1:int getId():33:33 -> getId
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):29 -> getInputErrors
    2:160:java.util.List getInputErrors(boolean):88:246 -> getInputErrors
    161:319:java.util.List getInputErrors(boolean):88:246 -> getInputErrors
    1:153:java.util.List getInputsErrors(boolean):98:250 -> getInputsErrors
    154:306:java.util.List getInputsErrors(boolean):98:250 -> getInputsErrors
    1:1:java.util.List getInputsErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor,boolean,int,java.lang.Object):97:97 -> getInputsErrors$default
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel():30:30 -> getModel
    1:1:java.util.List getParamsErrors(boolean):106:106 -> getParamsErrors
    1:1:boolean getPropagateToInput():32:32 -> getPropagateToInput
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> propagateErrors
    2:2:java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29 -> propagateErrors
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor -> com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor:
# {"id":"sourceFile","fileName":"MultiBatchFeedforwardProcessor.kt"}
    java.util.List model -> a
    boolean propagateToInput -> b
    int id -> c
    java.util.List encoders -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):27:27 -> <init>
    1:1:void <init>(java.util.List,java.util.List,boolean,int):27 -> <init>
    2:2:java.util.List getModel():28:28 -> <init>
    2:2:void <init>(java.util.List,java.util.List,boolean,int):28 -> <init>
    3:3:boolean getPropagateToInput():30:30 -> <init>
    3:3:void <init>(java.util.List,java.util.List,boolean,int):30 -> <init>
    4:4:int getId():31:31 -> <init>
    4:4:void <init>(java.util.List,java.util.List,boolean,int):31 -> <init>
    5:72:void <init>(java.util.List,java.util.List,boolean,int):63:130 -> <init>
    73:77:void <init>(java.util.List,java.util.List,boolean,int):63:67 -> <init>
    78:144:void <init>(java.util.List,java.util.List,boolean,int):64:130 -> <init>
    145:145:void <init>(java.util.List,java.util.List,boolean,int):63:63 -> <init>
    146:146:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):27:27 -> <init>
    146:146:void <init>(java.util.List,java.util.List,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):27 -> <init>
    147:147:void <init>(java.util.List,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):47:47 -> <init>
    148:150:void <init>(java.util.List,float,boolean,int):132:134 -> <init>
    151:231:void <init>(java.util.List,float,boolean,int):54:134 -> <init>
    232:232:void <init>(java.util.List,float,boolean,int):52:52 -> <init>
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):27:27 -> backward
    1:1:void backward(java.lang.Object):27 -> backward
    2:33:void backward(java.util.List):122:153 -> backward
    34:64:void backward(java.util.List):123:153 -> backward
    65:65:void backward(java.util.List):123:123 -> backward
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):27:27 -> forward
    1:1:java.lang.Object forward(java.lang.Object):27 -> forward
    2:44:java.util.List forward(java.util.List):105:147 -> forward
    45:87:java.util.List forward(java.util.List):105:147 -> forward
    88:88:java.util.List forward(java.util.List):108:108 -> forward
    89:92:java.util.List forward(java.util.List):107:110 -> forward
    93:93:java.util.List forward(java.util.List):107:107 -> forward
    1:1:int getId():31:31 -> getId
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):27:27 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):27 -> getInputErrors
    2:61:java.util.List getInputErrors(boolean):78:137 -> getInputErrors
    62:62:java.util.List getInputErrors(boolean):82:82 -> getInputErrors
    1:1:java.util.List getModel():28:28 -> getModel
    1:48:java.util.List getParamsErrors(boolean):94:141 -> getParamsErrors
    49:97:java.util.List getParamsErrors(boolean):94:142 -> getParamsErrors
    1:1:boolean getPropagateToInput():30:30 -> getPropagateToInput
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):27:27 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):27:27 -> propagateErrors
    2:2:java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):27 -> propagateErrors
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor -> com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor:
# {"id":"sourceFile","fileName":"EmbeddingsProcessor.kt"}
    com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap embeddingsMap -> a
    float dropout -> b
    java.util.List usedEmbeddings -> c
    java.util.List embeddingGradients -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    int numMultiHotEmbeddings -> e
    kotlin.Lazy errorsAccumulator$delegate -> f
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):23:23 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,float):23 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,float):24:24 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,float,int,kotlin.jvm.internal.DefaultConstructorMarker):25:25 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,float):25 -> <init>
    4:6:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,float):46:48 -> <init>
    7:7:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getErrorsAccumulator():54:54 -> <init>
    7:7:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,float):54 -> <init>
    8:8:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,float):60:60 -> <init>
    9:9:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):23:23 -> <init>
    9:9:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,float,int,kotlin.jvm.internal.DefaultConstructorMarker):23 -> <init>
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):23:23 -> backward
    1:1:void backward(java.lang.Object):23 -> backward
    2:79:void backward(java.util.List):118:195 -> backward
    80:160:void backward(java.util.List):120:200 -> backward
    161:239:void backward(java.util.List):122:200 -> backward
    240:240:void backward(java.util.List):124:124 -> backward
    241:241:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getErrorsAccumulator():54:54 -> backward
    241:241:void backward(java.util.List):129 -> backward
    242:315:void backward(java.util.List):129:202 -> backward
    316:316:void backward(java.util.List):131:131 -> backward
    317:317:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getErrorsAccumulator():54:54 -> backward
    317:317:void backward(java.util.List):132 -> backward
    318:318:void backward(java.util.List):132:132 -> backward
    319:319:void backward(java.util.List):126:126 -> backward
    320:320:void backward(java.util.List):125:125 -> backward
    321:321:void backward(java.util.List):124:124 -> backward
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):23:23 -> forward
    1:1:java.lang.Object forward(java.lang.Object):23 -> forward
    2:3:java.util.List forward(java.util.List):152:153 -> forward
    4:87:java.util.List forward(java.util.List):71:154 -> forward
    88:175:java.util.List forward(java.util.List):71:158 -> forward
    176:262:java.util.List forward(java.util.List):72:158 -> forward
    263:265:java.util.List forward(java.util.List,java.util.Map,java.util.Map):160:162 -> forward
    266:351:java.util.List forward(java.util.List,java.util.Map,java.util.Map):77:162 -> forward
    352:438:java.util.List forward(java.util.List,java.util.Map,java.util.Map):78:164 -> forward
    439:526:java.util.List forward(java.util.List,java.util.Map,java.util.Map):79:166 -> forward
    527:614:java.util.List forward(java.util.List,java.util.Map,java.util.Map):85:172 -> forward
    615:616:java.util.List forward(java.util.List,java.util.Map,java.util.Map):87:87 -> forward
    617:707:java.util.List forward(java.util.List,java.util.Map,java.util.Map):88:178 -> forward
    708:800:java.util.List forward(java.util.List,java.util.Map,java.util.Map):91:183 -> forward
    801:801:java.util.List forward(java.util.List,java.util.Map,java.util.Map):183:183 -> forward
    802:895:java.util.List forward(java.util.List,java.util.Map,java.util.Map):94:187 -> forward
    896:987:java.util.List forward(java.util.List,java.util.Map,java.util.Map):96:187 -> forward
    988:1081:java.util.List forward(java.util.List,java.util.Map,java.util.Map):96:189 -> forward
    1082:1175:java.util.List forward(java.util.List,java.util.Map,java.util.Map):98:191 -> forward
    1176:1270:java.util.List forward(java.util.List,java.util.Map,java.util.Map):99:193 -> forward
    1271:1340:java.util.List forward(java.util.List,java.util.Map,java.util.Map):100:169 -> forward
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):23:23 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):23 -> getInputErrors
    2:2:com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors getInputErrors(boolean):139:139 -> getInputErrors
    1:1:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getErrorsAccumulator():54:54 -> getParamsErrors
    1:1:java.util.List getParamsErrors(boolean):148 -> getParamsErrors
    2:2:java.util.List getParamsErrors(boolean):148:148 -> getParamsErrors
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):23:23 -> propagateErrors
    1:1:com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):23 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):23:23 -> propagateErrors
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor$errorsAccumulator$2 -> b.a:
# {"id":"sourceFile","fileName":"EmbeddingsProcessor.kt"}
    com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor$errorsAccumulator$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor$errorsAccumulator$2.invoke():54:54 -> invoke
    1:1:java.lang.Object invoke():54 -> invoke
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext -> com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext:
# {"id":"sourceFile","fileName":"EmbeddingsProcessorWithContext.kt"}
    com.kotlinnlp.simplednn.core.arrays.ParamsArray contextVector -> g
    com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor concatProcessor -> h
    kotlin.Lazy contextErrorsAccumulator$delegate -> i
    1:1:void backward(java.lang.Object):28:28 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,com.kotlinnlp.simplednn.core.arrays.ParamsArray,float,int,kotlin.jvm.internal.DefaultConstructorMarker):28 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,com.kotlinnlp.simplednn.core.arrays.ParamsArray,float):32:32 -> <init>
    3:16:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,com.kotlinnlp.simplednn.core.arrays.ParamsArray,float):30:43 -> <init>
    17:17:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,com.kotlinnlp.simplednn.core.arrays.ParamsArray,float):41:41 -> <init>
    18:18:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,com.kotlinnlp.simplednn.core.arrays.ParamsArray,float):40:40 -> <init>
    19:19:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getContextErrorsAccumulator():50:50 -> <init>
    19:19:void <init>(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,com.kotlinnlp.simplednn.core.arrays.ParamsArray,float):50 -> <init>
    1:1:void backward(java.lang.Object):28:28 -> backward
    2:42:void backward(java.util.List):73:113 -> backward
    43:78:void backward(java.util.List):78:113 -> backward
    79:118:void backward(java.util.List):78:117 -> backward
    119:156:void backward(java.util.List):80:117 -> backward
    157:157:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getContextErrorsAccumulator():50:50 -> backward
    157:157:void accumulateContextVectorErrors(java.util.List):100 -> backward
    157:157:void backward(java.util.List):80 -> backward
    158:158:void accumulateContextVectorErrors(java.util.List):100:100 -> backward
    158:158:void backward(java.util.List):80 -> backward
    159:159:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getContextErrorsAccumulator():50:50 -> backward
    159:159:void accumulateContextVectorErrors(java.util.List):101 -> backward
    159:159:void backward(java.util.List):80 -> backward
    160:160:void accumulateContextVectorErrors(java.util.List):101:101 -> backward
    160:160:void backward(java.util.List):80 -> backward
    1:1:void backward(java.lang.Object):28:28 -> forward
    1:1:java.lang.Object forward(java.lang.Object):28 -> forward
    2:48:java.util.List forward(java.util.List):61:107 -> forward
    49:96:java.util.List forward(java.util.List):63:110 -> forward
    97:97:java.util.List forward(java.util.List):63:63 -> forward
    1:1:java.util.List getParamsErrors(boolean):91:91 -> getParamsErrors
    2:2:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getContextErrorsAccumulator():50:50 -> getParamsErrors
    2:2:java.util.List getParamsErrors(boolean):91 -> getParamsErrors
    3:3:java.util.List getParamsErrors(boolean):91:91 -> getParamsErrors
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext$contextErrorsAccumulator$2 -> b.b:
# {"id":"sourceFile","fileName":"EmbeddingsProcessorWithContext.kt"}
    com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext$contextErrorsAccumulator$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext$contextErrorsAccumulator$2.invoke():50:50 -> invoke
    1:1:java.lang.Object invoke():50 -> invoke
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor -> com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor:
# {"id":"sourceFile","fileName":"LernaEmbeddingsProcessor.kt"}
    com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap embeddingsMap -> a
    float dropout -> b
    java.util.List usedEmbeddings -> c
    java.util.List embeddingGradients -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List lenMultiHotEmbeddings -> e
    kotlin.Lazy errorsAccumulator$delegate -> f
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):24:24 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,float):24 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,float):25:25 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,float,int,kotlin.jvm.internal.DefaultConstructorMarker):26:26 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,float):26 -> <init>
    4:8:void <init>(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,float):47:51 -> <init>
    9:9:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getErrorsAccumulator():55:55 -> <init>
    9:9:void <init>(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,float):55 -> <init>
    10:10:void <init>(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,float):61:61 -> <init>
    11:11:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):24:24 -> <init>
    11:11:void <init>(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,float,int,kotlin.jvm.internal.DefaultConstructorMarker):24 -> <init>
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):24:24 -> backward
    1:1:void backward(java.lang.Object):24 -> backward
    2:145:void backward(java.util.List):206:349 -> backward
    146:276:void backward(java.util.List):220:350 -> backward
    277:412:void backward(java.util.List):221:356 -> backward
    413:546:void backward(java.util.List):223:356 -> backward
    547:547:void backward(java.util.List):225:225 -> backward
    548:548:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getErrorsAccumulator():55:55 -> backward
    548:548:void backward(java.util.List):230 -> backward
    549:677:void backward(java.util.List):230:358 -> backward
    678:678:void backward(java.util.List):232:232 -> backward
    679:679:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getErrorsAccumulator():55:55 -> backward
    679:679:void backward(java.util.List):233 -> backward
    680:680:void backward(java.util.List):233:233 -> backward
    681:681:void backward(java.util.List):227:227 -> backward
    682:682:void backward(java.util.List):226:226 -> backward
    683:683:void backward(java.util.List):225:225 -> backward
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):24:24 -> forward
    1:1:java.lang.Object forward(java.lang.Object):24 -> forward
    2:3:java.util.List forward(java.util.List):253:254 -> forward
    4:187:java.util.List forward(java.util.List):72:255 -> forward
    188:375:java.util.List forward(java.util.List):72:259 -> forward
    376:562:java.util.List forward(java.util.List):73:259 -> forward
    563:565:java.util.List forward(java.util.List,java.util.Map,java.util.List):261:263 -> forward
    566:712:java.util.List forward(java.util.List,java.util.Map,java.util.List):117:263 -> forward
    713:862:java.util.List forward(java.util.List,java.util.Map,java.util.List):117:266 -> forward
    863:1011:java.util.List forward(java.util.List,java.util.Map,java.util.List):119:267 -> forward
    1012:1169:java.util.List forward(java.util.List,java.util.Map,java.util.List):123:280 -> forward
    1170:1323:java.util.List forward(java.util.List,java.util.Map,java.util.List):128:281 -> forward
    1324:1324:java.util.List forward(java.util.List,java.util.Map,java.util.List):271:271 -> forward
    1325:1480:java.util.List forward(java.util.List,java.util.Map,java.util.List):131:286 -> forward
    1481:1630:java.util.List forward(java.util.List,java.util.Map,java.util.List):137:286 -> forward
    1631:1788:java.util.List forward(java.util.List,java.util.Map,java.util.List):137:294 -> forward
    1789:1949:java.util.List forward(java.util.List,java.util.Map,java.util.List):140:300 -> forward
    1950:2111:java.util.List forward(java.util.List,java.util.Map,java.util.List):141:302 -> forward
    2112:2112:java.util.List forward(java.util.List,java.util.Map,java.util.List):142:142 -> forward
    2113:2278:java.util.List forward(java.util.List,java.util.Map,java.util.List):141:306 -> forward
    2279:2445:java.util.List forward(java.util.List,java.util.Map,java.util.List):145:311 -> forward
    2446:2447:java.util.List forward(java.util.List,java.util.Map,java.util.List):146:147 -> forward
    2448:2613:java.util.List forward(java.util.List,java.util.Map,java.util.List):146:311 -> forward
    2614:2788:java.util.List forward(java.util.List,java.util.Map,java.util.List):145:319 -> forward
    2789:2953:java.util.List forward(java.util.List,java.util.Map,java.util.List):151:315 -> forward
    2954:3133:java.util.List forward(java.util.List,java.util.Map,java.util.List):151:330 -> forward
    3134:3313:java.util.List forward(java.util.List,java.util.Map,java.util.List):155:334 -> forward
    3314:3314:java.util.List forward(java.util.List,java.util.Map,java.util.List):156:156 -> forward
    3315:3499:java.util.List forward(java.util.List,java.util.Map,java.util.List):155:339 -> forward
    3500:3679:java.util.List forward(java.util.List,java.util.Map,java.util.List):162:341 -> forward
    3680:3862:java.util.List forward(java.util.List,java.util.Map,java.util.List):163:345 -> forward
    3863:3865:java.util.List forward(java.util.List,java.util.Map,java.util.List):165:167 -> forward
    3866:4044:java.util.List forward(java.util.List,java.util.Map,java.util.List):159:337 -> forward
    1:1:java.util.List forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor,java.util.List,java.util.Map,java.util.List,int,java.lang.Object):110:110 -> forward$default
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):24:24 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):24 -> getInputErrors
    2:2:com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors getInputErrors(boolean):240:240 -> getInputErrors
    1:1:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getErrorsAccumulator():55:55 -> getParamsErrors
    1:1:java.util.List getParamsErrors(boolean):249 -> getParamsErrors
    2:2:java.util.List getParamsErrors(boolean):249:249 -> getParamsErrors
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):24:24 -> propagateErrors
    1:1:com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):24 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):24:24 -> propagateErrors
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor$errorsAccumulator$2 -> b.c:
# {"id":"sourceFile","fileName":"LernaEmbeddingsProcessor.kt"}
    com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor$errorsAccumulator$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor$errorsAccumulator$2.invoke():55:55 -> invoke
    1:1:java.lang.Object invoke():55 -> invoke
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor -> com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor:
# {"id":"sourceFile","fileName":"FeedforwardNeuralProcessor.kt"}
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters model -> a
    boolean propagateToInput -> b
    int id -> c
    com.kotlinnlp.simplednn.core.layers.StackedLayers layers -> d
    kotlin.Lazy contributions$delegate -> e
    java.util.List paramsErrors -> f
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):29 -> <init>
    2:2:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel():30:30 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):30 -> <init>
    3:3:boolean getPropagateToInput():32:32 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):32 -> <init>
    4:4:int getId():34:34 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):34 -> <init>
    5:6:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):68:69 -> <init>
    7:7:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):68:68 -> <init>
    8:8:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getContributions():76:76 -> <init>
    8:8:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):76 -> <init>
    9:9:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):86:86 -> <init>
    10:10:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker):33:33 -> <init>
    11:11:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> <init>
    11:11:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker):29 -> <init>
    12:12:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker):55:55 -> <init>
    13:13:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker):51:51 -> <init>
    14:14:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):59:59 -> <init>
    15:15:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):57:57 -> <init>
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> backward
    1:1:void backward(java.lang.Object):29 -> backward
    2:4:void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):240:242 -> backward
    5:5:void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):240:240 -> backward
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance(com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):226:226 -> calculateInputRelevance
    2:2:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getContributions():76:76 -> calculateInputRelevance
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance(com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):227 -> calculateInputRelevance
    3:7:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance(com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):226:230 -> calculateInputRelevance
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance$default(com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean,int,java.lang.Object):224:224 -> calculateInputRelevance$default
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> forward
    1:1:java.lang.Object forward(java.lang.Object):29 -> forward
    2:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):156:158 -> forward
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean):173:173 -> forward
    6:6:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getContributions():76:76 -> forward
    6:6:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean):173 -> forward
    7:11:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean):173:177 -> forward
    12:14:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List):189:191 -> forward
    15:15:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean):206:206 -> forward
    16:16:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getContributions():76:76 -> forward
    16:16:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean):206 -> forward
    17:21:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean):206:210 -> forward
    1:1:int getId():34:34 -> getId
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):29 -> getInputErrors
    2:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(boolean):120:123 -> getInputErrors
    6:6:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(boolean):121:121 -> getInputErrors
    7:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(boolean):120:120 -> getInputErrors
    1:118:java.util.List getInputsErrors(boolean):136:253 -> getInputsErrors
    119:231:java.util.List getInputsErrors(boolean):141:253 -> getInputsErrors
    232:346:java.util.List getInputsErrors(boolean):143:257 -> getInputsErrors
    347:461:java.util.List getInputsErrors(boolean):143:257 -> getInputsErrors
    462:462:java.util.List getInputsErrors(boolean):137:137 -> getInputsErrors
    463:463:java.util.List getInputsErrors(boolean):136:136 -> getInputsErrors
    1:1:java.util.List getInputsErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor,boolean,int,java.lang.Object):134:134 -> getInputsErrors$default
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel():30:30 -> getModel
    1:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getOutput(boolean):95:97 -> getOutput
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getOutput$default(com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor,boolean,int,java.lang.Object):93:93 -> getOutput$default
    1:144:java.util.List getParamsErrors(boolean):106:249 -> getParamsErrors
    145:288:java.util.List getParamsErrors(boolean):106:249 -> getParamsErrors
    289:289:java.util.List getParamsErrors(boolean):108:108 -> getParamsErrors
    1:1:boolean getPropagateToInput():32:32 -> getPropagateToInput
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> propagateErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray propagateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):29:29 -> propagateErrors
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor$contributions$2 -> c.a:
# {"id":"sourceFile","fileName":"FeedforwardNeuralProcessor.kt"}
    com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor this$0 -> a
    void <init>(com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor) -> <init>
    1:2:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor$contributions$2.invoke():77:78 -> invoke
    1:2:java.lang.Object invoke():76 -> invoke
    3:3:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor$contributions$2.invoke():77:77 -> invoke
    3:3:java.lang.Object invoke():76 -> invoke
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessorsPool -> com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessorsPool:
# {"id":"sourceFile","fileName":"FeedforwardNeuralProcessorsPool.kt"}
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters model -> c
    java.util.List dropouts -> d
    boolean propagateToInput -> e
    com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector paramsErrorsCollector -> f
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker):29:29 -> <init>
    2:2:com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int):25:25 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker):25 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):30:30 -> <init>
    4:6:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):26:28 -> <init>
    7:7:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker):29:29 -> <init>
    7:7:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):29 -> <init>
    8:8:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker):46:46 -> <init>
    9:9:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker):42:42 -> <init>
    10:10:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):49:49 -> <init>
    11:11:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):47:47 -> <init>
    1:1:com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int):25:25 -> itemFactory
    2:6:com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor itemFactory(int):61:65 -> itemFactory
    7:7:com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor itemFactory(int):61:61 -> itemFactory
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence -> com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence:
# {"id":"sourceFile","fileName":"NNSequence.kt"}
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters model -> a
    java.util.List states -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    1:17:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters):17:33 -> <init>
    1:6:void add(com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers,boolean):68:73 -> add
    7:7:void add(com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers,boolean):72:72 -> add
    8:8:void add(com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers,boolean):69:69 -> add
    9:9:void add(com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers,boolean):68:68 -> add
    1:1:int getLastIndex():43:43 -> getLastIndex
    1:1:int getLength():38:38 -> getLength
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel():17:17 -> getModel
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getStateContributions(int):58:58 -> getStateContributions
    2:2:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence$NNState.getContributions():27:27 -> getStateContributions
    2:2:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getStateContributions(int):58 -> getStateContributions
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:3:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getStateContributions(int):58:58 -> getStateContributions
    1:1:com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers getStateStructure(int):51:51 -> getStateStructure
    2:2:com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence$NNState.getLayers():26:26 -> getStateStructure
    2:2:com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers getStateStructure(int):51 -> getStateStructure
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:1:void reset():86:86 -> reset
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence$NNState -> d.a:
# {"id":"sourceFile","fileName":"NNSequence.kt"}
    com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers layers -> a
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters contributions -> b
    1:3:void <init>(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence,com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters):25:27 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/kotlinnlp/simplednn/core/layers/RecurrentStackedLayers;Lcom/kotlinnlp/simplednn/core/layers/StackedLayersParameters;)V"}
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RANImportanceHelper -> com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RANImportanceHelper:
# {"id":"sourceFile","fileName":"RANImportanceHelper.kt"}
    java.util.List prevStates -> a
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray incrementalForgetProd -> b
    int ranLayerIndex -> c
    1:16:void <init>():20:35 -> <init>
    1:23:void initVars(java.util.List):70:92 -> getImportanceScores
    1:23:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getImportanceScores(java.util.List):49 -> getImportanceScores
    24:27:void initVars(java.util.List):73:76 -> getImportanceScores
    24:27:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getImportanceScores(java.util.List):49 -> getImportanceScores
    28:65:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getImportanceScores(java.util.List):51:88 -> getImportanceScores
    66:66:com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer getRANLayer(int):85:85 -> getImportanceScores
    66:66:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getImportanceScores(java.util.List):55 -> getImportanceScores
    67:69:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getImportanceScores(java.util.List):57:59 -> getImportanceScores
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor -> com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor:
# {"id":"sourceFile","fileName":"RecurrentNeuralProcessor.kt"}
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters model -> a
    java.util.List dropouts -> b
    boolean propagateToInput -> c
    com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector paramsErrorsCollector -> d
    int id -> e
    com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence sequence -> f
    int curStateIndex -> g
    int lastStateIndex -> h
    kotlin.Lazy ranImportanceHelper$delegate -> i
    kotlin.Lazy paramsErrorsAccumulator$delegate -> j
    kotlin.Lazy zeroErrors$delegate -> k
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker):43:43 -> <init>
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):39:39 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker):39 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):45:45 -> <init>
    4:4:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel():40:40 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):40 -> <init>
    5:5:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):41:41 -> <init>
    6:6:boolean getPropagateToInput():42:42 -> <init>
    6:6:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):42 -> <init>
    7:7:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker):43:43 -> <init>
    7:7:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):43 -> <init>
    8:8:int getId():44:44 -> <init>
    8:8:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):44 -> <init>
    9:19:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):79:89 -> <init>
    20:20:com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RANImportanceHelper getRanImportanceHelper():100:100 -> <init>
    20:20:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):100 -> <init>
    21:21:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getParamsErrorsAccumulator():105:105 -> <init>
    21:21:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):105 -> <init>
    22:22:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getZeroErrors():110:110 -> <init>
    22:22:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):110 -> <init>
    23:23:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker):66:66 -> <init>
    24:24:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker):62:62 -> <init>
    25:25:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):70:70 -> <init>
    26:26:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int):68:68 -> <init>
    1:7:void backwardStep(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):491:497 -> a
    8:8:void backwardStep(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):495:495 -> a
    9:9:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getParamsErrorsAccumulator():105:105 -> a
    9:9:void backwardStep(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):499 -> a
    10:13:void backwardStep(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):499:502 -> a
    14:14:void backwardStep(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):492:492 -> a
    15:15:void backwardStep(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):491:491 -> a
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):39:39 -> backward
    1:1:void backward(java.lang.Object):39 -> backward
    2:2:int getNumOfStates():94:94 -> backward
    2:2:void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):464 -> backward
    3:3:void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):464:464 -> backward
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getZeroErrors():110:110 -> backward
    4:4:void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):464 -> backward
    5:5:void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):464:464 -> backward
    6:6:void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):463:463 -> backward
    7:7:void backward(java.util.List):474:474 -> backward
    8:8:int getNumOfStates():94:94 -> backward
    8:8:void backward(java.util.List):474 -> backward
    9:9:void backward(java.util.List):479:479 -> backward
    10:10:void backward(java.util.List):475:475 -> backward
    11:11:int getNumOfStates():94:94 -> backward
    11:11:void backward(java.util.List):475 -> backward
    12:12:void backward(java.util.List):475:475 -> backward
    13:13:void backward(java.util.List):474:474 -> backward
    1:8:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateRelevance(int,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):420:427 -> calculateRelevance
    9:17:void propagateRelevanceOnCurrentState(boolean,boolean):577:585 -> calculateRelevance
    9:17:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateRelevance(int,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):428 -> calculateRelevance
    18:35:void propagateLayerRelevance(com.kotlinnlp.simplednn.core.layers.Layer,int,boolean,boolean,boolean):616:633 -> calculateRelevance
    18:35:void propagateRelevanceOnCurrentState(boolean,boolean):590 -> calculateRelevance
    18:35:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateRelevance(int,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):428 -> calculateRelevance
    36:36:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getInputRelevance(int,boolean):646:646 -> calculateRelevance
    36:36:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateRelevance(int,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):431 -> calculateRelevance
    37:37:int getNumOfStates():94:94 -> calculateRelevance
    37:37:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateRelevance(int,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):421 -> calculateRelevance
    38:38:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateRelevance(int,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):421:421 -> calculateRelevance
    39:39:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateRelevance(int,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):420:420 -> calculateRelevance
    40:40:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateRelevance(int,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):419:419 -> calculateRelevance
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateRelevance$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,int,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean,int,java.lang.Object):414:414 -> calculateRelevance$default
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):39:39 -> forward
    1:1:java.lang.Object forward(java.lang.Object):39 -> forward
    2:6:java.util.List forward(java.util.List):264:268 -> forward
    7:7:java.util.List forward(java.util.List):264:264 -> forward
    8:387:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,java.util.List,boolean):288:667 -> forward
    388:395:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,java.util.List,boolean):291:298 -> forward
    396:396:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,java.util.List,boolean):288:288 -> forward
    397:714:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.ArrayList,java.util.List,boolean):353:670 -> forward
    715:722:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.ArrayList,java.util.List,boolean):356:363 -> forward
    723:723:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.ArrayList,java.util.List,boolean):353:353 -> forward
    724:724:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean,java.util.List,boolean):387:387 -> forward
    725:725:void reset():652:652 -> forward
    725:725:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean,java.util.List,boolean):389 -> forward
    726:726:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getParamsErrorsAccumulator():105:105 -> forward
    726:726:void reset():653 -> forward
    726:726:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean,java.util.List,boolean):389 -> forward
    727:727:void reset():653:653 -> forward
    727:727:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean,java.util.List,boolean):389 -> forward
    728:737:void addNewState(boolean):513:522 -> forward
    728:737:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean,java.util.List,boolean):391 -> forward
    738:738:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean,java.util.List,boolean):393:393 -> forward
    739:746:void forwardCurrentState(java.util.List,java.util.List,boolean):559:566 -> forward
    739:746:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean,java.util.List,boolean):395 -> forward
    747:747:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean,java.util.List,boolean):400:400 -> forward
    748:748:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean,java.util.List,boolean):387:387 -> forward
    749:749:void reset():652:652 -> forward
    749:749:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean,java.util.List,boolean):321 -> forward
    750:750:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getParamsErrorsAccumulator():105:105 -> forward
    750:750:void reset():653 -> forward
    750:750:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean,java.util.List,boolean):321 -> forward
    751:751:void reset():653:653 -> forward
    751:751:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean,java.util.List,boolean):321 -> forward
    752:761:void addNewState(boolean):513:522 -> forward
    752:761:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean,java.util.List,boolean):323 -> forward
    762:762:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean,java.util.List,boolean):325:325 -> forward
    763:770:void forwardCurrentState(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,java.util.List,boolean):537:544 -> forward
    763:770:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean,java.util.List,boolean):327 -> forward
    771:771:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean,java.util.List,boolean):332:332 -> forward
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,java.util.List,java.util.List,boolean,int,java.lang.Object):284:284 -> forward$default
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean,java.util.List,boolean,int,java.lang.Object):316:316 -> forward$default
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,java.util.ArrayList,java.util.List,boolean,int,java.lang.Object):349:349 -> forward$default
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,java.util.List,boolean,java.util.List,boolean,int,java.lang.Object):382:382 -> forward$default
    1:541:java.util.List getCurState(boolean):120:660 -> getCurState
    542:1080:java.util.List getCurState(boolean):122:660 -> getCurState
    1:1:java.util.List getCurState$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,boolean,int,java.lang.Object):119:119 -> getCurState$default
    1:1:int getId():44:44 -> getId
    1:1:java.util.List getInitHiddenErrors():244:244 -> getInitHiddenErrors
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):39:39 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):39 -> getInputErrors
    2:2:int getNumOfStates():94:94 -> getInputErrors
    2:2:java.util.List getInputErrors(boolean):173 -> getInputErrors
    3:5:java.util.List getInputErrors(boolean):172:174 -> getInputErrors
    6:6:java.util.List getInputErrors(boolean):172:172 -> getInputErrors
    7:15:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(int,boolean):202:210 -> getInputErrors
    16:16:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(int,boolean):208:208 -> getInputErrors
    17:17:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(int,boolean):203:203 -> getInputErrors
    18:18:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(int,boolean):202:202 -> getInputErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,int,boolean,int,java.lang.Object):200:200 -> getInputErrors$default
    1:441:java.util.List getInputsErrors(int,boolean):224:664 -> getInputsErrors
    442:872:java.util.List getInputsErrors(int,boolean):234:664 -> getInputsErrors
    873:873:java.util.List getInputsErrors(int,boolean):231:231 -> getInputsErrors
    874:874:java.util.List getInputsErrors(int,boolean):226:226 -> getInputsErrors
    875:875:java.util.List getInputsErrors(int,boolean):224:224 -> getInputsErrors
    1:1:java.util.List getInputsErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,int,boolean,int,java.lang.Object):222:222 -> getInputsErrors$default
    1:1:int getNumOfStates():94:94 -> getInputsSequenceErrors
    1:1:java.util.List getInputsSequenceErrors(boolean):187 -> getInputsSequenceErrors
    2:2:java.util.List getInputsSequenceErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,boolean,int,java.lang.Object):186:186 -> getInputsSequenceErrors
    2:2:java.util.List getInputsSequenceErrors(boolean):186 -> getInputsSequenceErrors
    3:3:java.util.List getInputsSequenceErrors(boolean):188:188 -> getInputsSequenceErrors
    4:4:java.util.List getInputsSequenceErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,boolean,int,java.lang.Object):186:186 -> getInputsSequenceErrors
    4:4:java.util.List getInputsSequenceErrors(boolean):186 -> getInputsSequenceErrors
    1:1:java.util.List getInputsSequenceErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,boolean,int,java.lang.Object):186:186 -> getInputsSequenceErrors$default
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel():40:40 -> getModel
    1:2:com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers getNextState$advancedml_release():140:141 -> getNextState$advancedml_release
    1:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getOutput(boolean):152:154 -> getOutput
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getOutput$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,boolean,int,java.lang.Object):150:150 -> getOutput$default
    1:1:int getNumOfStates():94:94 -> getOutputSequence
    1:1:java.util.List getOutputSequence(boolean):251 -> getOutputSequence
    2:2:java.util.List getOutputSequence$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,boolean,int,java.lang.Object):251:251 -> getOutputSequence
    2:2:java.util.List getOutputSequence(boolean):251 -> getOutputSequence
    3:3:java.util.List getOutputSequence(boolean):252:252 -> getOutputSequence
    4:4:java.util.List getOutputSequence$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,boolean,int,java.lang.Object):251:251 -> getOutputSequence
    4:4:java.util.List getOutputSequence(boolean):251 -> getOutputSequence
    1:1:java.util.List getOutputSequence$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,boolean,int,java.lang.Object):251:251 -> getOutputSequence$default
    1:1:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator getParamsErrorsAccumulator():105:105 -> getParamsErrors
    1:1:java.util.List getParamsErrors(boolean):162 -> getParamsErrors
    2:2:java.util.List getParamsErrors(boolean):162:162 -> getParamsErrors
    1:2:com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers getPrevState$advancedml_release():131:132 -> getPrevState$advancedml_release
    1:1:boolean getPropagateToInput():42:42 -> getPropagateToInput
    1:227:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRANImportanceScores(int):448:674 -> getRANImportanceScores
    228:454:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRANImportanceScores(int):448:674 -> getRANImportanceScores
    455:455:com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RANImportanceHelper getRanImportanceHelper():100:100 -> getRANImportanceScores
    455:455:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRANImportanceScores(int):452 -> getRANImportanceScores
    456:680:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRANImportanceScores(int):453:677 -> getRANImportanceScores
    681:906:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRANImportanceScores(int):453:678 -> getRANImportanceScores
    907:907:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRANImportanceScores(int):452:452 -> getRANImportanceScores
    908:908:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRANImportanceScores(int):448:448 -> getRANImportanceScores
    909:909:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRANImportanceScores(int):447:447 -> getRANImportanceScores
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):39:39 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):39:39 -> propagateErrors
    2:2:java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):39 -> propagateErrors
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor$paramsErrorsAccumulator$2 -> d.b:
# {"id":"sourceFile","fileName":"RecurrentNeuralProcessor.kt"}
    com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor$paramsErrorsAccumulator$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor$paramsErrorsAccumulator$2.invoke():105:105 -> invoke
    1:1:java.lang.Object invoke():105 -> invoke
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor$ranImportanceHelper$2 -> d.c:
# {"id":"sourceFile","fileName":"RecurrentNeuralProcessor.kt"}
    com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor$ranImportanceHelper$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RANImportanceHelper com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor$ranImportanceHelper$2.invoke():100:100 -> invoke
    1:1:java.lang.Object invoke():100 -> invoke
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor$zeroErrors$2 -> d.d:
# {"id":"sourceFile","fileName":"RecurrentNeuralProcessor.kt"}
    com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor this$0 -> a
    void <init>(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor) -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor$zeroErrors$2.invoke():111:111 -> invoke
    1:1:java.lang.Object invoke():110 -> invoke
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessorsPool -> com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessorsPool:
# {"id":"sourceFile","fileName":"RecurrentNeuralProcessorsPool.kt"}
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters model -> c
    java.util.List dropouts -> d
    boolean propagateToInput -> e
    com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector paramsErrorsCollector -> f
    1:1:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker):29:29 -> <init>
    2:2:com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int):25:25 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker):25 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):30:30 -> <init>
    4:4:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel():26:26 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):26 -> <init>
    5:6:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):27:28 -> <init>
    7:7:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker):29:29 -> <init>
    7:7:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):29 -> <init>
    8:8:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker):44:44 -> <init>
    9:9:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker):40:40 -> <init>
    10:10:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):47:47 -> <init>
    11:11:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector):45:45 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel():26:26 -> getModel
    1:1:com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int):25:25 -> itemFactory
    2:6:com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor itemFactory(int):59:63 -> itemFactory
    7:7:com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor itemFactory(int):59:59 -> itemFactory
com.kotlinnlp.simplednn.core.optimizer.AliasKt -> com.kotlinnlp.simplednn.core.optimizer.AliasKt:
# {"id":"sourceFile","fileName":"Alias.kt"}
com.kotlinnlp.simplednn.core.optimizer.ExtensionsKt -> com.kotlinnlp.simplednn.core.optimizer.ExtensionsKt:
# {"id":"sourceFile","fileName":"Extensions.kt"}
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors getErrorsOf(java.util.List,com.kotlinnlp.simplednn.core.arrays.ParamsArray):17:17 -> getErrorsOf
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator -> com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator:
# {"id":"sourceFile","fileName":"ParamsErrorsAccumulator.kt"}
    java.util.Map paramsErrorsMap -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/LinkedHashMap;"}
    1:61:void <init>():18:78 -> <init>
    1:6:void accumulate(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors,boolean):89:94 -> accumulate
    7:7:void accumulate(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):116:116 -> accumulate
    8:8:void accumulate(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):124:124 -> accumulate
    9:11:void accumulate(java.util.List,boolean):154:156 -> accumulate
    12:61:void accumulate(java.util.List,boolean):107:156 -> accumulate
    62:62:void accumulate(com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.List):158:158 -> accumulate
    63:65:void accumulate(com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.List):134:136 -> accumulate
    1:1:void accumulate$default(com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator,com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors,boolean,int,java.lang.Object):87:87 -> accumulate$default
    2:2:void accumulate$default(com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator,java.util.List,boolean,int,java.lang.Object):105:105 -> accumulate$default
    1:1:void clear():151:151 -> clear
    1:17:java.util.List getParamsErrors(boolean):146:162 -> getParamsErrors
    18:34:java.util.List getParamsErrors(boolean):146:162 -> getParamsErrors
    1:1:java.util.List getParamsErrors$default(com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator,boolean,int,java.lang.Object):145:145 -> getParamsErrors$default
    1:1:boolean isEmpty():68:68 -> isEmpty
    1:1:boolean isNotEmpty():73:73 -> isNotEmpty
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors -> com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors:
# {"id":"sourceFile","fileName":"ParamsErrorsAccumulator.kt"}
    com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors paramsErrors -> a
    boolean byReference -> b
    1:1:void <init>(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors,boolean,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors,boolean):26:26 -> <init>
    3:3:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors getParamsErrors():27:27 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors,boolean):27 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors,boolean):28:28 -> <init>
    1:3:void accumulate(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors):59:61 -> accumulate
    4:4:void accumulate(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors):59:59 -> accumulate
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors getParamsErrors():27:27 -> getParamsErrors
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors$Companion -> com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors$Companion:
# {"id":"sourceFile","fileName":"ParamsErrorsAccumulator.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():31:31 -> <init>
    1:1:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors byCopy(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors):39:39 -> byCopy
    1:1:com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors byReference(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors):47:47 -> byReference
com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer -> com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer:
# {"id":"sourceFile","fileName":"ParamsOptimizer.kt"}
    com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod updateMethod -> b
    com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping gradientClipping -> c
    1:1:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping,int,kotlin.jvm.internal.DefaultConstructorMarker):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping):25:25 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping):23:23 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping,int,kotlin.jvm.internal.DefaultConstructorMarker):24:24 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping):24 -> <init>
    1:2:void newBatch():57:58 -> newBatch
    1:2:void newEpoch():46:47 -> newEpoch
    1:2:void newExample():68:69 -> newExample
    1:1:void update():32:32 -> update
    2:2:void clipGradients():89:89 -> update
    2:2:void update():34 -> update
    3:18:void updateParams():78:93 -> update
    3:18:void update():35 -> update
    19:19:void updateParams():80:80 -> update
    19:19:void update():35 -> update
    20:20:void update():36:36 -> update
com.kotlinnlp.simplednn.core.optimizer.ScheduledUpdater -> com.kotlinnlp.simplednn.core.optimizer.ScheduledUpdater:
# {"id":"sourceFile","fileName":"ScheduledUpdater.kt"}
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork -> com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork:
# {"id":"sourceFile","fileName":"AttentionNetwork.kt"}
    com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters model -> a
    com.kotlinnlp.simplednn.core.layers.LayerType$Input inputType -> b
    boolean propagateToInput -> c
    int id -> d
    com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator transformParamsErrorsAccumulator -> e
    com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor transformProcessor -> f
    com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer attentionLayer -> g
    boolean internalAttentionArraysUsed -> h
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):30:30 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean,int):30 -> <init>
    2:2:com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters getModel():31:31 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean,int):31 -> <init>
    3:3:com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType():32:32 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean,int):32 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean,int):34:34 -> <init>
    5:5:int getId():35:35 -> <init>
    5:5:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean,int):35 -> <init>
    6:12:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean,int):41:47 -> <init>
    13:13:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):30:30 -> <init>
    1:3:java.util.List backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):109:111 -> backward
    4:5:java.util.List backwardAttentionLayer(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,boolean):182:183 -> backward
    4:5:java.util.List backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):111 -> backward
    6:8:java.util.List backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):111:113 -> backward
    9:15:java.util.List backwardTransformLayers():191:197 -> backward
    9:15:java.util.List backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):116 -> backward
    16:18:java.util.List backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):116:118 -> backward
    19:51:void addTransformErrorsToInput():206:238 -> backward
    19:51:java.util.List backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):119 -> backward
    52:53:void addTransformErrorsToInput():208:209 -> backward
    52:53:java.util.List backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):119 -> backward
    54:54:java.util.List backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):122:122 -> backward
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List):69:69 -> forward
    2:70:void setInputSequence(java.util.List):164:232 -> forward
    2:70:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List):71 -> forward
    71:136:void setInputSequence(java.util.List):167:232 -> forward
    71:136:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List):71 -> forward
    137:205:void setInputSequence(java.util.List):168:236 -> forward
    137:205:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List):71 -> forward
    206:273:void setInputSequence(java.util.List):169:236 -> forward
    206:273:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List):71 -> forward
    274:274:void setInputSequence(java.util.List):170:170 -> forward
    274:274:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List):71 -> forward
    275:275:void setInputSequence(java.util.List):166:166 -> forward
    275:275:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List):71 -> forward
    276:278:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List):72:74 -> forward
    279:408:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,java.util.List):87:216 -> forward
    409:535:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,java.util.List):90:216 -> forward
    536:665:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,java.util.List):91:220 -> forward
    666:794:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,java.util.List):92:220 -> forward
    795:795:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,java.util.List):93:93 -> forward
    796:804:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,java.util.List):89:97 -> forward
    1:85:java.util.List getAttentionErrors():144:228 -> getAttentionErrors
    86:170:java.util.List getAttentionErrors():144:228 -> getAttentionErrors
    1:1:int getId():35:35 -> getId
    1:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getImportanceScore(boolean):153:155 -> getImportanceScore
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getImportanceScore$default(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork,boolean,int,java.lang.Object):151:151 -> getImportanceScore$default
    1:86:java.util.List getInputErrors():139:224 -> getInputErrors
    87:172:java.util.List getInputErrors():139:224 -> getInputErrors
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType():32:32 -> getInputType
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters getModel():31:31 -> getModel
    1:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getOutput(boolean):132:134 -> getOutput
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getOutput$default(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork,boolean,int,java.lang.Object):130:130 -> getOutput$default
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters -> com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters:
# {"id":"sourceFile","fileName":"AttentionNetworkParameters.kt"}
    int inputSize -> a
    int attentionSize -> b
    int outputSize -> c
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters transform -> d
    com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters attention -> e
    1:29:void <init>(int,int,boolean,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):28:56 -> <init>
    30:36:void <init>(int,int,boolean,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):54:60 -> <init>
    37:37:void <init>(int,int,boolean,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):57:57 -> <init>
    38:52:void <init>(int,int,boolean,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):53:67 -> <init>
    53:54:void <init>(int,int,boolean,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):32:33 -> <init>
    55:55:void <init>(int,int,boolean,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):28:28 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters getAttention():67:67 -> getAttention
    1:1:int getAttentionSize():30:30 -> getAttentionSize
    1:1:int getInputSize():29:29 -> getInputSize
    1:1:int getOutputSize():48:48 -> getOutputSize
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getTransform():53:53 -> getTransform
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters$Companion -> com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters$Companion:
# {"id":"sourceFile","fileName":"AttentionNetworkParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():36:36 -> <init>
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworksPool -> com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworksPool:
# {"id":"sourceFile","fileName":"AttentionNetworksPool.kt"}
    com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters model -> c
    com.kotlinnlp.simplednn.core.layers.LayerType$Input inputType -> d
    float dropout -> e
    boolean propagateToInput -> f
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):23:23 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean):28:28 -> <init>
    3:6:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean):24:27 -> <init>
    1:1:com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int):23:23 -> itemFactory
    2:6:com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork itemFactory(int):37:41 -> itemFactory
    7:7:com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork itemFactory(int):37:37 -> itemFactory
com.kotlinnlp.simplednn.deeplearning.attention.han.ArrayListExtensionKt -> com.kotlinnlp.simplednn.deeplearning.attention.han.ArrayListExtensionKt:
# {"id":"sourceFile","fileName":"ArrayListExtension.kt"}
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence toHierarchySequence(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray[]):10:10 -> toHierarchySequence
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN -> com.kotlinnlp.simplednn.deeplearning.attention.han.HAN:
# {"id":"sourceFile","fileName":"HAN.kt"}
    int hierarchySize -> a
    int inputSize -> b
    com.kotlinnlp.simplednn.core.layers.LayerType$Input inputType -> c
    com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction biRNNsActivation -> d
    com.kotlinnlp.simplednn.core.layers.LayerType$Connection biRNNsConnectionType -> e
    int attentionSize -> f
    int outputSize -> g
    com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction outputActivation -> h
    java.util.List gainFactors -> i
    java.util.List biRNNs -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List attentionNetworksParams -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters outputNetwork -> l
    com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters params -> m
    1:1:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):39:39 -> <init>
    1:1:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):39 -> <init>
    2:2:int getHierarchySize():40:40 -> <init>
    2:2:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):40 -> <init>
    3:3:int getInputSize():41:41 -> <init>
    3:3:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41 -> <init>
    4:4:com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType():42:42 -> <init>
    4:4:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):42 -> <init>
    5:5:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getBiRNNsActivation():43:43 -> <init>
    5:5:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):43 -> <init>
    6:6:com.kotlinnlp.simplednn.core.layers.LayerType$Connection getBiRNNsConnectionType():44:44 -> <init>
    6:6:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):44 -> <init>
    7:7:int getAttentionSize():45:45 -> <init>
    7:7:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):45 -> <init>
    8:8:int getOutputSize():46:46 -> <init>
    8:8:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):46 -> <init>
    9:9:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getOutputActivation():47:47 -> <init>
    9:9:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):47 -> <init>
    10:10:java.util.List getGainFactors():48:48 -> <init>
    10:10:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):48 -> <init>
    11:11:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):76:76 -> <init>
    12:12:java.util.List getBiRNNs():85:85 -> <init>
    12:12:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):85 -> <init>
    13:19:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):88:94 -> <init>
    20:20:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):89:89 -> <init>
    21:21:java.util.List getBiRNNs():85:85 -> <init>
    21:21:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):85 -> <init>
    22:22:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):104:104 -> <init>
    23:23:java.util.List getAttentionNetworksParams():103:103 -> <init>
    23:23:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):103 -> <init>
    24:26:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):106:108 -> <init>
    27:27:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):106:106 -> <init>
    28:28:java.util.List getAttentionNetworksParams():103:103 -> <init>
    28:28:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):103 -> <init>
    29:29:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputNetwork():120:120 -> <init>
    29:29:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):120 -> <init>
    30:32:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):121:123 -> <init>
    33:40:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):121:128 -> <init>
    41:41:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):125:125 -> <init>
    42:42:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputNetwork():120:120 -> <init>
    42:42:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):120 -> <init>
    43:102:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):138:197 -> <init>
    103:162:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):138:197 -> <init>
    163:164:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):139:140 -> <init>
    165:165:com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters getParams():137:137 -> <init>
    165:165:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):137 -> <init>
    166:166:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):78:78 -> <init>
    167:167:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):76:76 -> <init>
    168:168:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):75:75 -> <init>
    169:169:com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType():42:42 -> <init>
    169:169:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):42 -> <init>
    170:170:java.util.List getGainFactors():48:48 -> <init>
    170:170:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):48 -> <init>
    171:172:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):49:50 -> <init>
    173:173:void <init>(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):39:39 -> <init>
    1:36:int getLevelInputSize(int):164:199 -> a
    37:37:int getLevelInputSize(int):167:167 -> a
    38:41:int getBiRNNOutputSize(int,int):187:190 -> a
    1:1:java.util.List getAttentionNetworksParams():103:103 -> getAttentionNetworksParams
    1:1:int getAttentionSize():45:45 -> getAttentionSize
    1:1:java.util.List getBiRNNs():85:85 -> getBiRNNs
    1:1:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getBiRNNsActivation():43:43 -> getBiRNNsActivation
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Connection getBiRNNsConnectionType():44:44 -> getBiRNNsConnectionType
    1:1:java.util.List getGainFactors():48:48 -> getGainFactors
    1:1:int getHierarchySize():40:40 -> getHierarchySize
    1:1:int getInputSize():41:41 -> getInputSize
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType():42:42 -> getInputType
    1:1:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getOutputActivation():47:47 -> getOutputActivation
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputNetwork():120:120 -> getOutputNetwork
    1:1:int getOutputSize():46:46 -> getOutputSize
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters getParams():137:137 -> getParams
    1:1:boolean isInputLevel(int):155:155 -> isInputLevel
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN$Companion -> com.kotlinnlp.simplednn.deeplearning.attention.han.HAN$Companion:
# {"id":"sourceFile","fileName":"HAN.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():53:53 -> <init>
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder -> com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder:
# {"id":"sourceFile","fileName":"HANEncoder.kt"}
    com.kotlinnlp.simplednn.deeplearning.attention.han.HAN model -> a
    boolean propagateToInput -> b
    int id -> c
    java.util.List encodersPools -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List attentionNetworksPools -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List usedEncodersPerLevel -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List usedAttentionNetworksPerLevel -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List encodersParamsErrorsAccumulators -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List attentionNetworksParamsErrorsAccumulators -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor outputProcessor -> j
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):38:38 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):38 -> <init>
    2:2:com.kotlinnlp.simplednn.deeplearning.attention.han.HAN getModel():39:39 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):39 -> <init>
    3:3:boolean getPropagateToInput():40:40 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):40 -> <init>
    4:4:int getId():45:45 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):45 -> <init>
    5:5:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):57:57 -> <init>
    6:14:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):56:64 -> <init>
    15:22:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):60:67 -> <init>
    23:23:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):66:66 -> <init>
    24:46:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):56:78 -> <init>
    47:53:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):77:83 -> <init>
    54:54:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):80:80 -> <init>
    55:70:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):77:92 -> <init>
    71:73:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):91:93 -> <init>
    74:83:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):91:100 -> <init>
    84:86:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):99:101 -> <init>
    87:108:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int):99:120 -> <init>
    109:109:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):38:38 -> <init>
    109:109:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int,int,kotlin.jvm.internal.DefaultConstructorMarker):38 -> <init>
    1:20:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forwardItem(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem,int):217:236 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILcom/kotlinnlp/simplednn/deeplearning/attention/han/HierarchyItem;)Lcom/kotlinnlp/simplednn/simplemath/ndarray/dense/DenseNDArray;"}
    21:21:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forwardItem(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem,int):219:219 -> a
    22:22:void backwardHierarchicalGroup(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,int):261:261 -> a
    23:26:void backwardAttentionNetwork(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,int):292:295 -> a
    23:26:void backwardHierarchicalGroup(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,int):263 -> a
    27:32:void backwardEncoder(int,int):306:311 -> a
    27:32:void backwardHierarchicalGroup(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,int):268 -> a
    33:175:void backwardHierarchicalGroup(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,int):273:415 -> a
    176:176:void backwardHierarchicalGroup(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,int):274:274 -> a
    177:260:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem buildInputErrorsHierarchyItem(int,int,boolean):347:430 -> a
    261:264:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem buildInputErrorsHierarchyItem(int,int,boolean):349:352 -> a
    265:268:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem buildInputErrorsHierarchyItem(int,int,boolean):351:354 -> a
    269:277:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem buildInputErrorsHierarchyItem(int,int,boolean):350:358 -> a
    278:288:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem buildInputErrorsHierarchyItem(int,int,boolean):357:367 -> a
    289:294:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem buildImportanceScoreHierarchyItem(int,int,float):385:390 -> a
    295:302:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem buildImportanceScoreHierarchyItem(int,int,float):388:395 -> a
    303:309:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem buildImportanceScoreHierarchyItem(int,int,float):394:400 -> a
    310:317:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem buildImportanceScoreHierarchyItem(int,int,float):397:404 -> a
    318:320:java.util.List buildInputSequence(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup,int):410:412 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/kotlinnlp/simplednn/deeplearning/attention/han/HierarchyGroup;I)Ljava/util/ArrayList;"}
    321:485:java.util.List buildInputSequence(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup,int):248:412 -> a
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):38:38 -> backward
    1:1:void backward(java.lang.Object):38 -> backward
    2:100:void resetAccumulators():319:417 -> backward
    2:100:void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):148 -> backward
    101:201:void resetAccumulators():319:419 -> backward
    101:201:void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):148 -> backward
    202:202:void resetAccumulators():320:320 -> backward
    202:202:void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):148 -> backward
    203:206:void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):150:153 -> backward
    207:207:void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):152:152 -> backward
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):38:38 -> forward
    1:1:java.lang.Object forward(java.lang.Object):38 -> forward
    2:95:void resetUsedNetworks():328:421 -> forward
    2:95:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):134 -> forward
    96:191:void resetUsedNetworks():328:423 -> forward
    96:191:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):134 -> forward
    192:288:void resetUsedNetworks():329:425 -> forward
    192:288:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):134 -> forward
    289:385:void resetUsedNetworks():331:427 -> forward
    289:385:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):134 -> forward
    386:386:void resetUsedNetworks():332:332 -> forward
    386:386:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):134 -> forward
    387:389:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):136:138 -> forward
    1:1:int getId():45:45 -> getId
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):38:38 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):38 -> getInputErrors
    2:2:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem getInputErrors(boolean):164:164 -> getInputErrors
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem getInputImportanceScores():175:175 -> getInputImportanceScores
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.han.HAN getModel():39:39 -> getModel
    1:4:java.util.List getParamsErrors(boolean):185:188 -> getParamsErrors
    5:8:java.util.List getParamsErrors(boolean):187:190 -> getParamsErrors
    9:13:java.util.List getParamsErrors(boolean):187:191 -> getParamsErrors
    14:22:java.util.List getParamsErrors(boolean):187:195 -> getParamsErrors
    23:26:java.util.List getParamsErrors(boolean):194:197 -> getParamsErrors
    27:31:java.util.List getParamsErrors(boolean):194:198 -> getParamsErrors
    32:40:java.util.List getParamsErrors(boolean):194:202 -> getParamsErrors
    1:1:boolean getPropagateToInput():40:40 -> getPropagateToInput
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):38:38 -> propagateErrors
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem propagateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):38 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):38:38 -> propagateErrors
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncodersPool -> com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncodersPool:
# {"id":"sourceFile","fileName":"HANEncodersPool.kt"}
    com.kotlinnlp.simplednn.deeplearning.attention.han.HAN model -> c
    float biRNNDropout -> d
    float attentionDropout -> e
    float outputDropout -> f
    boolean propagateToInput -> g
    java.lang.Float mePropK -> h
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,float,float,float,boolean,java.lang.Float,int,kotlin.jvm.internal.DefaultConstructorMarker):25:25 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,float,float,float,boolean,java.lang.Float):32:32 -> <init>
    3:8:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,float,float,float,boolean,java.lang.Float):26:31 -> <init>
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.han.HAN getModel():26:26 -> getModel
    1:1:com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int):25:25 -> itemFactory
    2:7:com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder itemFactory(int):42:47 -> itemFactory
    8:8:com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder itemFactory(int):41:41 -> itemFactory
com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters -> com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters:
# {"id":"sourceFile","fileName":"HANParameters.kt"}
    java.util.List biRNNs -> a
    java.util.List attentionNetworks -> b
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters outputStackedLayers -> c
    1:4:void <init>(java.util.List,java.util.List,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters):22:25 -> <init>
    1:1:java.util.List getAttentionNetworks():24:24 -> getAttentionNetworks
    1:1:java.util.List getBiRNNs():23:23 -> getBiRNNs
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputStackedLayers():25:25 -> getOutputStackedLayers
com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters$Companion -> com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters$Companion:
# {"id":"sourceFile","fileName":"HANParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():28:28 -> <init>
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup -> com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup:
# {"id":"sourceFile","fileName":"HierarchyGroup.kt"}
    java.util.ArrayList $$delegate_0 -> a
    1:1:java.lang.Object set(int,java.lang.Object):15:15 -> <init>
    1:1:void <init>(java.util.ArrayList,com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem[]):15 -> <init>
    2:2:void <init>(java.util.ArrayList,com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem[]):24:24 -> <init>
    3:3:void <init>(java.util.ArrayList,com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem[]):19:19 -> <init>
    1:1:void add(int,com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):0:0 -> add
    2:2:boolean add(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):0:0 -> add
    3:3:java.lang.Object set(int,java.lang.Object):15:15 -> add
    3:3:void add(int,java.lang.Object):15 -> add
    4:4:java.lang.Object set(int,java.lang.Object):15:15 -> add
    4:4:boolean add(java.lang.Object):15 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:boolean contains(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):0:0 -> contains
    2:2:java.lang.Object set(int,java.lang.Object):15:15 -> contains
    2:2:boolean contains(java.lang.Object):15 -> contains
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem get(int):0:0 -> get
    2:2:java.lang.Object set(int,java.lang.Object):15:15 -> get
    2:2:java.lang.Object get(int):15 -> get
    1:1:int indexOf(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):0:0 -> indexOf
    2:2:java.lang.Object set(int,java.lang.Object):15:15 -> indexOf
    2:2:int indexOf(java.lang.Object):15 -> indexOf
    1:1:int lastIndexOf(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):0:0 -> lastIndexOf
    2:2:java.lang.Object set(int,java.lang.Object):15:15 -> lastIndexOf
    2:2:int lastIndexOf(java.lang.Object):15 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:boolean remove(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):0:0 -> remove
    2:2:java.lang.Object set(int,java.lang.Object):15:15 -> remove
    2:2:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem remove(int):15 -> remove
    3:3:java.lang.Object set(int,java.lang.Object):15:15 -> remove
    3:3:java.lang.Object remove(int):15 -> remove
    4:4:java.lang.Object set(int,java.lang.Object):15:15 -> remove
    4:4:boolean remove(java.lang.Object):15 -> remove
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem set(int,com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem):0:0 -> set
    2:2:java.lang.Object set(int,java.lang.Object):15:15 -> set
    1:1:java.lang.Object set(int,java.lang.Object):15:15 -> size
    1:1:int size():15 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem -> com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem:
# {"id":"sourceFile","fileName":"HierarchyItem.kt"}
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence -> com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence:
# {"id":"sourceFile","fileName":"HierarchySequence.kt"}
    java.util.ArrayList $$delegate_0 -> a
    1:1:java.lang.Object set(int,java.lang.Object):18:18 -> <init>
    1:1:void <init>(java.util.ArrayList,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray[]):18 -> <init>
    2:11:void <init>(java.util.ArrayList,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray[]):19:28 -> <init>
    12:12:void <init>(java.util.ArrayList,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray[]):23:23 -> <init>
    1:1:void add(int,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):0:0 -> add
    2:2:boolean add(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):0:0 -> add
    3:3:java.lang.Object set(int,java.lang.Object):18:18 -> add
    3:3:void add(int,java.lang.Object):18 -> add
    4:4:java.lang.Object set(int,java.lang.Object):18:18 -> add
    4:4:boolean add(java.lang.Object):18 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:boolean contains(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):0:0 -> contains
    2:2:java.lang.Object set(int,java.lang.Object):18:18 -> contains
    2:2:boolean contains(java.lang.Object):18 -> contains
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray get(int):0:0 -> get
    2:2:java.lang.Object set(int,java.lang.Object):18:18 -> get
    2:2:java.lang.Object get(int):18 -> get
    1:1:int indexOf(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):0:0 -> indexOf
    2:2:java.lang.Object set(int,java.lang.Object):18:18 -> indexOf
    2:2:int indexOf(java.lang.Object):18 -> indexOf
    1:1:int lastIndexOf(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):0:0 -> lastIndexOf
    2:2:java.lang.Object set(int,java.lang.Object):18:18 -> lastIndexOf
    2:2:int lastIndexOf(java.lang.Object):18 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:boolean remove(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):0:0 -> remove
    2:2:java.lang.Object set(int,java.lang.Object):18:18 -> remove
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray remove(int):18 -> remove
    3:3:java.lang.Object set(int,java.lang.Object):18:18 -> remove
    3:3:java.lang.Object remove(int):18 -> remove
    4:4:java.lang.Object set(int,java.lang.Object):18:18 -> remove
    4:4:boolean remove(java.lang.Object):18 -> remove
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray set(int,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):0:0 -> set
    2:2:java.lang.Object set(int,java.lang.Object):18:18 -> set
    1:1:java.lang.Object set(int,java.lang.Object):18:18 -> size
    1:1:int size():18 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention -> com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention:
# {"id":"sourceFile","fileName":"MutiHeadAttention.kt"}
    int inputSize -> a
    int attentionSize -> b
    int attentionOutputSize -> c
    int numOfHeads -> d
    int outputSize -> e
    java.util.List attention -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters merge -> g
    1:1:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):27:27 -> <init>
    1:1:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):27 -> <init>
    2:2:int getInputSize():28:28 -> <init>
    2:2:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):28 -> <init>
    3:3:int getAttentionSize():29:29 -> <init>
    3:3:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):29 -> <init>
    4:4:int getAttentionOutputSize():30:30 -> <init>
    4:4:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):30 -> <init>
    5:5:int getNumOfHeads():31:31 -> <init>
    5:5:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):31 -> <init>
    6:6:int getOutputSize():48:48 -> <init>
    6:6:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):48 -> <init>
    7:7:java.util.List getAttention():53:53 -> <init>
    7:7:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):53 -> <init>
    8:11:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):54:57 -> <init>
    12:12:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):54:54 -> <init>
    13:13:java.util.List getAttention():53:53 -> <init>
    13:13:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):53 -> <init>
    14:15:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):66:67 -> <init>
    16:16:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMerge():65:65 -> <init>
    16:16:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):65 -> <init>
    17:18:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):32:33 -> <init>
    19:19:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):27:27 -> <init>
    1:1:java.util.List getAttention():53:53 -> getAttention
    1:1:int getAttentionOutputSize():30:30 -> getAttentionOutputSize
    1:1:int getAttentionSize():29:29 -> getAttentionSize
    1:1:int getInputSize():28:28 -> getInputSize
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMerge():65:65 -> getMerge
    1:1:int getNumOfHeads():31:31 -> getNumOfHeads
    1:1:int getOutputSize():48:48 -> getOutputSize
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention$Companion -> com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention$Companion:
# {"id":"sourceFile","fileName":"MutiHeadAttention.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():36:36 -> <init>
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork -> com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork:
# {"id":"sourceFile","fileName":"MultiHeadAttentionNetwork.kt"}
    com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters model -> a
    boolean propagateToInput -> b
    int id -> c
    com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator errorsAccumulator -> d
    java.util.List attentionLayers -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor mergeProcessor -> f
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):26:26 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters,boolean,int):26 -> <init>
    2:2:com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters getModel():27:27 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters,boolean,int):27 -> <init>
    3:3:boolean getPropagateToInput():28:28 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters,boolean,int):28 -> <init>
    4:4:int getId():29:29 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters,boolean,int):29 -> <init>
    5:16:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters,boolean,int):40:51 -> <init>
    17:17:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):26:26 -> <init>
    17:17:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):26 -> <init>
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):26:26 -> backward
    1:1:void backward(java.lang.Object):26 -> backward
    2:63:void backward(java.util.List):81:142 -> backward
    64:119:void backward(java.util.List):88:143 -> backward
    120:121:void backward(java.util.List):89:90 -> backward
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):26:26 -> forward
    1:1:java.lang.Object forward(java.lang.Object):26 -> forward
    2:69:java.util.List forward(java.util.List):62:129 -> forward
    70:136:java.util.List forward(java.util.List):63:129 -> forward
    137:200:java.util.List forward(java.util.List):63:126 -> forward
    201:273:java.util.List forward(java.util.List):62:134 -> forward
    274:344:java.util.List forward(java.util.List):67:137 -> forward
    345:414:java.util.List forward(java.util.List):68:137 -> forward
    415:415:java.util.List forward(java.util.List):134:134 -> forward
    416:486:java.util.List forward(java.util.List):71:141 -> forward
    487:487:java.util.List forward(java.util.List):71:71 -> forward
    1:1:int getId():29:29 -> getId
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):26:26 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):26 -> getInputErrors
    2:36:java.util.List getInputErrors(boolean):114:148 -> getInputErrors
    37:71:java.util.List getInputErrors(boolean):114:148 -> getInputErrors
    72:106:java.util.List getInputErrors(boolean):116:150 -> getInputErrors
    107:141:java.util.List getInputErrors(boolean):117:151 -> getInputErrors
    142:142:java.util.List getInputErrors(boolean):117:117 -> getInputErrors
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters getModel():27:27 -> getModel
    1:1:java.util.List getParamsErrors(boolean):102:102 -> getParamsErrors
    1:1:boolean getPropagateToInput():28:28 -> getPropagateToInput
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):26:26 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):26:26 -> propagateErrors
    2:2:java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):26 -> propagateErrors
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters -> com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters:
# {"id":"sourceFile","fileName":"MultiHeadAttentionParameters.kt"}
    int inputSize -> a
    int attentionSize -> b
    int attentionOutputSize -> c
    int numOfHeads -> d
    int outputSize -> e
    java.util.List attention -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters merge -> g
    1:1:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):29:29 -> <init>
    1:1:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):29 -> <init>
    2:2:int getInputSize():30:30 -> <init>
    2:2:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):30 -> <init>
    3:3:int getAttentionSize():31:31 -> <init>
    3:3:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):31 -> <init>
    4:4:int getAttentionOutputSize():32:32 -> <init>
    4:4:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):32 -> <init>
    5:5:int getNumOfHeads():33:33 -> <init>
    5:5:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):33 -> <init>
    6:6:int getOutputSize():50:50 -> <init>
    6:6:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):50 -> <init>
    7:7:java.util.List getAttention():55:55 -> <init>
    7:7:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):55 -> <init>
    8:11:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):56:59 -> <init>
    12:12:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):56:56 -> <init>
    13:13:java.util.List getAttention():55:55 -> <init>
    13:13:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):55 -> <init>
    14:15:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):68:69 -> <init>
    16:16:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMerge():67:67 -> <init>
    16:16:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):67 -> <init>
    17:18:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):34:35 -> <init>
    19:19:void <init>(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):29:29 -> <init>
    1:1:java.util.List getAttention():55:55 -> getAttention
    1:1:int getAttentionOutputSize():32:32 -> getAttentionOutputSize
    1:1:int getAttentionSize():31:31 -> getAttentionSize
    1:1:int getInputSize():30:30 -> getInputSize
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMerge():67:67 -> getMerge
    1:1:int getNumOfHeads():33:33 -> getNumOfHeads
    1:1:int getOutputSize():50:50 -> getOutputSize
    1:21:java.util.List getParams():75:95 -> getParams
    22:41:java.util.List getParams():76:95 -> getParams
    42:61:java.util.List getParams():76:95 -> getParams
    62:84:java.util.List getParams():77:99 -> getParams
    85:107:java.util.List getParams():77:99 -> getParams
    108:127:java.util.List getParams():76:95 -> getParams
    128:130:java.util.List getParams():76:78 -> getParams
    1:19:void setParams(java.util.List):84:102 -> setParams
    20:23:void setParams(java.util.List):85:88 -> setParams
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters$Companion -> com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters$Companion:
# {"id":"sourceFile","fileName":"MultiHeadAttentionParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():38:38 -> <init>
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper -> com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper:
# {"id":"sourceFile","fileName":"BackwardHelper.kt"}
    com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor networkProcessor -> a
    java.util.List inputSequenceErrors -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List vectorsErrors -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    int stateIndex -> d
    com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector attentionParamsErrorsCollector -> e
    com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator attentionErrorsAccumulator -> f
    1:28:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor):22:49 -> <init>
    1:1:void initInputSequenceErrors():147:147 -> backward
    1:1:void initBackward():135 -> backward
    1:1:void backward(java.util.List):58 -> backward
    2:4:void initInputSequenceErrors():146:148 -> backward
    2:4:void initBackward():135 -> backward
    2:4:void backward(java.util.List):58 -> backward
    5:5:void initInputSequenceErrors():146:146 -> backward
    5:5:void initBackward():135 -> backward
    5:5:void backward(java.util.List):58 -> backward
    6:6:void initVectorsErrors():157:157 -> backward
    6:6:void initBackward():136 -> backward
    6:6:void backward(java.util.List):58 -> backward
    7:9:void initVectorsErrors():156:158 -> backward
    7:9:void initBackward():136 -> backward
    7:9:void backward(java.util.List):58 -> backward
    10:10:void initVectorsErrors():156:156 -> backward
    10:10:void initBackward():136 -> backward
    10:10:void backward(java.util.List):58 -> backward
    11:11:void initBackward():138:138 -> backward
    11:11:void backward(java.util.List):58 -> backward
    12:114:void backward(java.util.List):60:162 -> backward
    115:117:void backward(java.util.List):62:64 -> backward
    118:187:java.util.List backwardAttentionScores(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):97:166 -> backward
    118:187:void backwardStep(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):84 -> backward
    118:187:void backward(java.util.List):64 -> backward
    188:250:java.util.List backwardAttentionScores(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):104:166 -> backward
    188:250:void backwardStep(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):84 -> backward
    188:250:void backward(java.util.List):64 -> backward
    251:306:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray backwardAttentionArrays(java.util.List):114:169 -> backward
    251:306:void backwardStep(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):85 -> backward
    251:306:void backward(java.util.List):64 -> backward
    307:311:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray backwardAttentionArrays(java.util.List):120:124 -> backward
    307:311:void backwardStep(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):85 -> backward
    307:311:void backward(java.util.List):64 -> backward
    312:312:void backwardStep(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):87:87 -> backward
    312:312:void backward(java.util.List):64 -> backward
    1:1:java.util.List getInputSequenceErrors$advancedml_release():27:27 -> getInputSequenceErrors$advancedml_release
    1:2:java.util.List getParamsErrors(boolean):74:75 -> getParamsErrors
    3:3:java.util.List getParamsErrors(boolean):74:74 -> getParamsErrors
    1:1:java.util.List getParamsErrors$default(com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper,boolean,int,java.lang.Object):73:73 -> getParamsErrors$default
    1:1:java.util.List getVectorsErrors$advancedml_release():33:33 -> getVectorsErrors$advancedml_release
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.ForwardHelper -> com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.ForwardHelper:
# {"id":"sourceFile","fileName":"ForwardHelper.kt"}
    com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor networkProcessor -> a
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor):20:20 -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):29:29 -> forward
    2:2:void initForward():64:64 -> forward
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):29 -> forward
    3:27:java.util.List buildAttentionSequence(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):57:81 -> forward
    3:27:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):31 -> forward
    28:54:java.util.List buildAttentionSequence(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):58:84 -> forward
    28:54:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):31 -> forward
    55:55:java.util.List buildAttentionSequence(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):57:57 -> forward
    55:55:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):31 -> forward
    56:90:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer buildAttentionMechanism(java.util.List):43:77 -> forward
    56:90:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):31 -> forward
    91:123:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer buildAttentionMechanism(java.util.List):45:77 -> forward
    91:123:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):31 -> forward
    124:126:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer buildAttentionMechanism(java.util.List):46:48 -> forward
    124:126:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):31 -> forward
    127:127:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer buildAttentionMechanism(java.util.List):44:44 -> forward
    127:127:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):31 -> forward
    128:128:java.lang.Object addAndReturn(java.util.List,java.lang.Object):72:72 -> forward
    128:128:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer buildAttentionMechanism(java.util.List):43 -> forward
    128:128:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):31 -> forward
    129:130:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):32:33 -> forward
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel -> com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel:
# {"id":"sourceFile","fileName":"PointerNetworkModel.kt"}
    int inputSize -> a
    int vectorSize -> b
    com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction activation -> c
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters mergeNetwork -> d
    com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters attentionParams -> e
    com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters params -> f
    1:39:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):30:68 -> <init>
    40:45:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):67:72 -> <init>
    46:46:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):69:69 -> <init>
    47:61:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):66:80 -> <init>
    62:69:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):79:86 -> <init>
    70:73:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):57:60 -> <init>
    74:76:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):33:35 -> <init>
    77:77:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):30:30 -> <init>
    1:1:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getActivation$advancedml_release():33:33 -> getActivation$advancedml_release
    1:1:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters getAttentionParams():79:79 -> getAttentionParams
    1:1:int getInputSize():31:31 -> getInputSize
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMergeNetwork():66:66 -> getMergeNetwork
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters getParams():86:86 -> getParams
    1:1:int getVectorSize():32:32 -> getVectorSize
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel$Companion -> com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel$Companion:
# {"id":"sourceFile","fileName":"PointerNetworkModel.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():39:39 -> <init>
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters -> com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters:
# {"id":"sourceFile","fileName":"PointerNetworkParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters mergeParams -> a
    com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters attentionParams -> b
    1:3:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters):20:22 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters getAttentionParams():22:22 -> getAttentionParams
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMergeParams():21:21 -> getMergeParams
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters$Companion -> com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters$Companion:
# {"id":"sourceFile","fileName":"PointerNetworkParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():25:25 -> <init>
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor -> com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor:
# {"id":"sourceFile","fileName":"PointerNetworkProcessor.kt"}
    com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel model -> a
    int id -> b
    boolean propagateToInput -> c
    int forwardCount -> d
    com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor mergeProcessor -> e
    java.util.List usedAttentionMechanisms -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.ForwardHelper forwardHelper -> g
    kotlin.Lazy backwardHelper$delegate -> h
    1:56:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel,int):22:77 -> <init>
    57:57:void <init>(com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel,int,int,kotlin.jvm.internal.DefaultConstructorMarker):22:22 -> <init>
    1:1:void backward(java.lang.Object):22:22 -> backward
    2:2:void backward(java.util.List):119:119 -> backward
    3:3:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper getBackwardHelper():77:77 -> backward
    3:3:void backward(java.util.List):121 -> backward
    4:4:void backward(java.util.List):121:121 -> backward
    5:5:void backward(java.util.List):119:119 -> backward
    1:1:java.lang.Object forward(java.lang.Object):22:22 -> forward
    2:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):99:101 -> forward
    1:1:boolean getFirstState$advancedml_release():56:56 -> getFirstState$advancedml_release
    1:1:int getForwardCount$advancedml_release():51:51 -> getForwardCount$advancedml_release
    1:1:int getId():24:24 -> getId
    1:1:java.lang.Object getInputErrors(boolean):22:22 -> getInputErrors
    2:2:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors getInputErrors(boolean):137:137 -> getInputErrors
    3:3:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper getBackwardHelper():77:77 -> getInputErrors
    3:3:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors getInputErrors(boolean):138 -> getInputErrors
    4:4:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors getInputErrors(boolean):138:138 -> getInputErrors
    5:5:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper getBackwardHelper():77:77 -> getInputErrors
    5:5:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors getInputErrors(boolean):139 -> getInputErrors
    6:6:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors getInputErrors(boolean):139:139 -> getInputErrors
    7:7:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors getInputErrors(boolean):137:137 -> getInputErrors
    1:1:java.util.List getInputSequence$advancedml_release():46:46 -> getInputSequence$advancedml_release
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getLastNotActivatedImportanceScores():110:110 -> getLastNotActivatedImportanceScores
    1:1:com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor getMergeProcessor$advancedml_release():61:61 -> getMergeProcessor$advancedml_release
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel getModel():23:23 -> getModel
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper getBackwardHelper():77:77 -> getParamsErrors
    1:1:java.util.List getParamsErrors(boolean):130 -> getParamsErrors
    2:2:java.util.List getParamsErrors(boolean):130:130 -> getParamsErrors
    1:1:boolean getPropagateToInput():35:35 -> getPropagateToInput
    1:1:java.util.List getUsedAttentionMechanisms$advancedml_release():67:67 -> getUsedAttentionMechanisms$advancedml_release
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):22:22 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):22:22 -> propagateErrors
    1:1:void setForwardCount$advancedml_release(int):51:51 -> setForwardCount$advancedml_release
    1:2:void setInputSequence(java.util.List):86:87 -> setInputSequence
    1:1:void setInputSequence$advancedml_release(java.util.List):46:46 -> setInputSequence$advancedml_release
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors -> com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors:
# {"id":"sourceFile","fileName":"PointerNetworkProcessor.kt"}
    java.util.List inputSequenceErrors -> a
    java.util.List inputVectorsErrors -> b
    1:1:void <init>(java.util.List,java.util.List):41:41 -> <init>
    1:1:java.util.List getInputSequenceErrors():41:41 -> getInputSequenceErrors
    1:1:java.util.List getInputVectorsErrors():41:41 -> getInputVectorsErrors
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$backwardHelper$2 -> e.a:
# {"id":"sourceFile","fileName":"PointerNetworkProcessor.kt"}
    com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor this$0 -> a
    void <init>(com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor) -> <init>
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$backwardHelper$2.invoke():77:77 -> invoke
    1:1:java.lang.Object invoke():77 -> invoke
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN -> com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN:
# {"id":"sourceFile","fileName":"BiRNN.kt"}
    com.kotlinnlp.simplednn.core.layers.LayerType$Input inputType -> a
    int inputSize -> b
    int hiddenSize -> c
    com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction hiddenActivation -> d
    com.kotlinnlp.simplednn.core.layers.LayerType$Connection recurrentConnectionType -> e
    int outputSize -> f
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters leftToRightNetwork -> g
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters rightToLeftNetwork -> h
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters outputMergeNetwork -> i
    com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters model -> j
    1:41:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):39:79 -> <init>
    42:60:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):72:90 -> <init>
    61:80:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):86:105 -> <init>
    81:105:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):101:125 -> <init>
    106:106:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):122:122 -> <init>
    107:117:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):119:129 -> <init>
    118:118:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):127:127 -> <init>
    119:152:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):117:150 -> <init>
    153:153:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):145:145 -> <init>
    154:154:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):80:80 -> <init>
    155:157:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):45:47 -> <init>
    158:158:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):39:39 -> <init>
    1:1:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getHiddenActivation():43:43 -> getHiddenActivation
    1:1:int getHiddenSize():42:42 -> getHiddenSize
    1:1:int getInputSize():41:41 -> getInputSize
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType():40:40 -> getInputType
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getLeftToRightNetwork():86:86 -> getLeftToRightNetwork
    1:1:com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters getModel():136:136 -> getModel
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputMergeNetwork():117:117 -> getOutputMergeNetwork
    1:1:int getOutputSize():72:72 -> getOutputSize
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Connection getRecurrentConnectionType():44:44 -> getRecurrentConnectionType
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getRightToLeftNetwork():101:101 -> getRightToLeftNetwork
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN$Companion -> com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN$Companion:
# {"id":"sourceFile","fileName":"BiRNN.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():50:50 -> <init>
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig -> com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig:
# {"id":"sourceFile","fileName":"BiRNNConfig.kt"}
    com.kotlinnlp.simplednn.core.layers.LayerType$Connection connectionType -> a
    com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction hiddenActivation -> b
    int numberOfLayers -> c
    kotlinx.serialization.KSerializer[] $childSerializers -> d
    1:1:void <clinit>():28:28 -> <clinit>
    1:2:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlinx.serialization.internal.SerializationConstructorMarker):21:21 -> <init>
    3:7:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int):21:25 -> <init>
    8:8:void <init>(com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,kotlin.jvm.internal.DefaultConstructorMarker):22:22 -> <init>
    1:1:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():21:21 -> access$get$childSerializers$cp
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Connection getConnectionType():23:23 -> getConnectionType
    1:1:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getHiddenActivation():24:24 -> getHiddenActivation
    1:1:int getNumberOfLayers():25:25 -> getNumberOfLayers
    1:4:java.lang.String toString():40:43 -> toString
    5:5:java.lang.String toString():40:40 -> toString
    1:2:void write$Self(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):21:21 -> write$Self
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$$serializer -> com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$$serializer:
# {"id":"sourceFile","fileName":"BiRNNConfig.kt"}
    kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor -> a
    1:1:void <clinit>():21:21 -> <clinit>
    1:1:void <init>():21:21 -> <init>
    1:1:kotlinx.serialization.KSerializer[] childSerializers():21:21 -> childSerializers
    1:1:com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig deserialize(kotlinx.serialization.encoding.Decoder):21:21 -> deserialize
    2:2:java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder):21:21 -> deserialize
    1:1:kotlinx.serialization.descriptors.SerialDescriptor getDescriptor():21:21 -> getDescriptor
    1:1:void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig):21:21 -> serialize
    2:2:void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object):21:21 -> serialize
    1:1:kotlinx.serialization.KSerializer[] typeParametersSerializers():21:21 -> typeParametersSerializers
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$Companion -> com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$Companion:
# {"id":"sourceFile","fileName":"BiRNNConfig.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():28:28 -> <init>
    1:1:kotlinx.serialization.KSerializer serializer():28:28 -> serializer
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder -> com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder:
# {"id":"sourceFile","fileName":"BiRNNEncoder.kt"}
    com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN network -> a
    boolean propagateToInput -> b
    int id -> c
    com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor leftToRightProcessor -> d
    com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor rightToLeftProcessor -> e
    com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor outputMergeProcessor -> f
    java.util.List sequence -> g
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):32:32 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int):32 -> <init>
    2:2:com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN getNetwork():33:33 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int):33 -> <init>
    3:3:boolean getPropagateToInput():36:36 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int):36 -> <init>
    4:4:int getId():37:37 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int):37 -> <init>
    5:7:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int):77:79 -> <init>
    8:19:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int):76:87 -> <init>
    20:30:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int):84:94 -> <init>
    31:31:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int):92:92 -> <init>
    32:32:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean) -> <init>
    32:32:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):32 -> <init>
    33:33:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,boolean,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker):60:60 -> <init>
    34:34:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,boolean,float,int):65:65 -> <init>
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):32:32 -> backward
    1:1:void backward(java.lang.Object):32 -> backward
    2:23:java.util.List outputMergeBackward(java.util.List):243:264 -> backward
    2:23:void backward(java.util.List):176 -> backward
    24:43:java.util.List outputMergeBackward(java.util.List):245:264 -> backward
    24:43:void backward(java.util.List):176 -> backward
    44:47:void backward(java.util.List):176:179 -> backward
    1:2:void backwardLastOutput(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):165:166 -> backwardLastOutput
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):32:32 -> forward
    1:1:java.lang.Object forward(java.lang.Object):32 -> forward
    2:4:java.util.List forward(java.util.List):111:113 -> forward
    5:51:java.util.List biEncoding():214:260 -> forward
    5:51:java.util.List forward(java.util.List):113 -> forward
    52:56:java.util.List biEncoding():217:221 -> forward
    52:56:java.util.List forward(java.util.List):113 -> forward
    57:57:java.util.List biEncoding():220:220 -> forward
    57:57:java.util.List forward(java.util.List):113 -> forward
    58:67:java.util.List biEncoding():219:228 -> forward
    58:67:java.util.List forward(java.util.List):113 -> forward
    68:68:java.util.List biEncoding():227:227 -> forward
    68:68:java.util.List forward(java.util.List):113 -> forward
    69:79:java.util.List biEncoding():225:235 -> forward
    69:79:java.util.List forward(java.util.List):113 -> forward
    80:82:java.util.List forward(java.util.List):250:252 -> forward
    83:225:java.util.List forward(java.util.List):113:255 -> forward
    226:226:java.util.List forward(java.util.List):113:113 -> forward
    1:1:int getId():37:37 -> getId
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):32:32 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):32 -> getInputErrors
    2:4:java.util.List getInputErrors(boolean):188:190 -> getInputErrors
    5:5:java.util.List getInputErrors(boolean):188:188 -> getInputErrors
    1:3:kotlin.Pair getLastOutput(boolean):152:154 -> getLastOutput
    4:4:kotlin.Pair getLastOutput(boolean):152:152 -> getLastOutput
    1:1:com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN getNetwork():33:33 -> getNetwork
    1:2:java.util.List getParamsErrors(boolean):199:200 -> getParamsErrors
    3:5:java.util.List getParamsErrors(boolean):199:201 -> getParamsErrors
    6:6:java.util.List getParamsErrors(boolean):199:199 -> getParamsErrors
    1:1:boolean getPropagateToInput():36:36 -> getPropagateToInput
    1:124:java.util.List getRANImportanceScores():134:257 -> getRANImportanceScores
    125:127:java.util.List getRANImportanceScores():140:142 -> getRANImportanceScores
    128:246:java.util.List getRANImportanceScores():140:258 -> getRANImportanceScores
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):32:32 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):32:32 -> propagateErrors
    2:2:java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):32 -> propagateErrors
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncodersPool -> com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncodersPool:
# {"id":"sourceFile","fileName":"BiRNNEncodersPool.kt"}
    com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN network -> c
    float rnnDropout -> d
    float mergeDropout -> e
    boolean propagateToInput -> f
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):22:22 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean):27:27 -> <init>
    3:6:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean):23:26 -> <init>
    1:1:com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int):22:22 -> itemFactory
    2:6:com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder itemFactory(int):36:40 -> itemFactory
    7:7:com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder itemFactory(int):36:36 -> itemFactory
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters -> com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters:
# {"id":"sourceFile","fileName":"BiRNNParameters.kt"}
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters leftToRight -> a
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters rightToLeft -> b
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters merge -> c
    1:4:void <init>(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters):20:23 -> <init>
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getLeftToRight():21:21 -> getLeftToRight
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMerge():23:23 -> getMerge
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getRightToLeft():22:22 -> getRightToLeft
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters$Companion -> com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters$Companion:
# {"id":"sourceFile","fileName":"BiRNNParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():26:26 -> <init>
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNUtils -> com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNUtils:
# {"id":"sourceFile","fileName":"BiRNNUtils.kt"}
    1:1:void <init>():16:16 -> <init>
    1:3:kotlin.Pair splitErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):25:27 -> splitErrors
    4:4:kotlin.Pair splitErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):25:25 -> splitErrors
    1:4:java.util.List sumBidirectionalErrors(java.util.List,java.util.List):40:43 -> sumBidirectionalErrors
    5:8:java.util.List sumBidirectionalErrors(java.util.List,java.util.List):42:45 -> sumBidirectionalErrors
    9:9:java.util.List sumBidirectionalErrors(java.util.List,java.util.List):42:42 -> sumBidirectionalErrors
    10:10:java.util.List sumBidirectionalErrors(java.util.List,java.util.List):40:40 -> sumBidirectionalErrors
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN -> com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN:
# {"id":"sourceFile","fileName":"DeepBiRNN.kt"}
    java.util.List levels -> a
    com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters model -> b
    int inputSize -> c
    int outputSize -> d
    1:1:java.util.List getLevels():31:31 -> <init>
    1:1:void <init>(java.util.List):31 -> <init>
    2:4:void <init>(java.util.List):187:189 -> <init>
    5:5:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters getModel():142:142 -> <init>
    5:5:void <init>(java.util.List):142 -> <init>
    6:6:void <init>(java.util.List):189:189 -> <init>
    7:7:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters getModel():142:142 -> <init>
    7:7:void <init>(java.util.List):142 -> <init>
    8:8:int getInputSize():147:147 -> <init>
    8:8:void <init>(java.util.List):147 -> <init>
    9:9:int getOutputSize():152:152 -> <init>
    9:9:void <init>(java.util.List):152 -> <init>
    10:11:void <init>(java.util.List):158:159 -> <init>
    12:12:void <init>(java.util.List):159:159 -> <init>
    13:13:void <init>(java.util.List):158:158 -> <init>
    14:14:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN[]):36:36 -> <init>
    1:20:boolean areLevelsCompatible():174:193 -> a
    21:23:boolean areLevelsCompatible():178:180 -> a
    1:1:int getInputSize():147:147 -> getInputSize
    1:1:java.util.List getLevels():31:31 -> getLevels
    1:1:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters getModel():142:142 -> getModel
    1:1:int getOutputSize():152:152 -> getOutputSize
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN$Companion -> com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN$Companion:
# {"id":"sourceFile","fileName":"DeepBiRNN.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():38:38 -> <init>
    1:16:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):86:101 -> byReduceConcat
    17:19:int getBiRNNOutputSize(int,float):133:135 -> byReduceConcat
    17:19:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):101 -> byReduceConcat
    20:24:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):105:109 -> byReduceConcat
    25:25:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):103:103 -> byReduceConcat
    26:26:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):97:97 -> byReduceConcat
    27:27:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):92:92 -> byReduceConcat
    28:28:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):90:90 -> byReduceConcat
    29:29:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):86:86 -> byReduceConcat
    30:30:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):84:84 -> byReduceConcat
    1:3:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat$default(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN$Companion,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):78:80 -> byReduceConcat$default
    4:7:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat$default(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN$Companion,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):78:81 -> byReduceConcat$default
    8:8:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat$default(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN$Companion,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object):73:73 -> byReduceConcat$default
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder -> com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder:
# {"id":"sourceFile","fileName":"DeepBiRNNEncoder.kt"}
    com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN network -> a
    boolean propagateToInput -> b
    int id -> c
    java.util.List encoders -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,float,float,boolean,int):28 -> <init>
    2:2:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN getNetwork():29:29 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,float,float,boolean,int):29 -> <init>
    3:3:boolean getPropagateToInput():32:32 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,float,float,boolean,int):32 -> <init>
    4:4:int getId():33:33 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,float,float,boolean,int):33 -> <init>
    5:95:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,float,float,boolean,int):68:158 -> <init>
    96:100:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,float,float,boolean,int):70:74 -> <init>
    101:107:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,float,float,boolean,int):70:76 -> <init>
    108:190:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,float,float,boolean,int):76:158 -> <init>
    191:191:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,float,float,boolean,int):68:68 -> <init>
    192:192:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> <init>
    192:192:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,float,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):28 -> <init>
    193:193:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,boolean,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker):52:52 -> <init>
    194:194:void <init>(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,boolean,float,int):57:57 -> <init>
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> backward
    1:1:void backward(java.lang.Object):28 -> backward
    2:47:void backward(java.util.List):115:160 -> backward
    48:49:void backward(java.util.List):116:117 -> backward
    1:1:void backwardLastOutput(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):150:150 -> backwardLastOutput
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> forward
    1:1:java.lang.Object forward(java.lang.Object):28 -> forward
    2:6:java.util.List forward(java.util.List):95:99 -> forward
    1:1:int getId():33:33 -> getId
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):28 -> getInputErrors
    2:2:java.util.List getInputErrors(boolean):127:127 -> getInputErrors
    1:1:kotlin.Pair getLastOutput(boolean):141:141 -> getLastOutput
    1:1:com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN getNetwork():29:29 -> getNetwork
    1:31:java.util.List getParamsErrors(boolean):134:164 -> getParamsErrors
    32:63:java.util.List getParamsErrors(boolean):134:165 -> getParamsErrors
    1:1:boolean getPropagateToInput():32:32 -> getPropagateToInput
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> propagateErrors
    2:2:java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28 -> propagateErrors
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters -> com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters:
# {"id":"sourceFile","fileName":"DeepBiRNNParameters.kt"}
    java.util.List paramsPerBiRNN -> a
    1:1:void <init>(java.util.List):18:18 -> <init>
    1:1:java.util.List getParamsPerBiRNN():18:18 -> getParamsPerBiRNN
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters$Companion -> com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters$Companion:
# {"id":"sourceFile","fileName":"DeepBiRNNParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():20:20 -> <init>
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork -> com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork:
# {"id":"sourceFile","fileName":"MultiTaskNetwork.kt"}
    com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel model -> a
    boolean propagateToInput -> b
    int id -> c
    com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor inputProcessor -> d
    java.util.List outputProcessors -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,float,float,boolean,int):28 -> <init>
    2:2:com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel getModel():29:29 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,float,float,boolean,int):29 -> <init>
    3:3:boolean getPropagateToInput():32:32 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,float,float,boolean,int):32 -> <init>
    4:4:int getId():33:33 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,float,float,boolean,int):33 -> <init>
    5:8:void <init>(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,float,float,boolean,int):45:48 -> <init>
    9:145:void <init>(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,float,float,boolean,int):45:181 -> <init>
    146:147:void <init>(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,float,float,boolean,int):55:55 -> <init>
    273:273:void <init>(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,float,float,boolean,int):181:181 -> <init>
    274:274:void <init>(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,float,float,boolean,int):54:54 -> <init>
    275:275:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> <init>
    275:275:void <init>(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,float,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):28 -> <init>
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> backward
    1:1:void backward(java.lang.Object):28 -> backward
    2:40:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray backwardOutputProcessors(java.util.List):159:197 -> backward
    2:40:void backward(java.util.List):146 -> backward
    41:51:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray backwardOutputProcessors(java.util.List):165:175 -> backward
    41:51:void backward(java.util.List):146 -> backward
    52:52:void backward(java.util.List):147:147 -> backward
    53:53:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray backwardOutputProcessors(java.util.List):159:159 -> backward
    53:53:void backward(java.util.List):146 -> backward
    1:5:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance(int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):126:130 -> calculateInputRelevance
    6:11:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance(int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):130:135 -> calculateInputRelevance
    12:12:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance(int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):134:134 -> calculateInputRelevance
    13:13:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance(int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):127:127 -> calculateInputRelevance
    14:14:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance(int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean):126:126 -> calculateInputRelevance
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance$default(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean,int,java.lang.Object):123:123 -> calculateInputRelevance$default
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> forward
    1:1:java.lang.Object forward(java.lang.Object):28 -> forward
    2:108:java.util.List forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):85:191 -> forward
    109:213:java.util.List forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):87:191 -> forward
    214:307:java.util.List forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean):102:195 -> forward
    308:396:java.util.List forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean):107:195 -> forward
    1:1:int getId():33:33 -> getId
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):28 -> getInputErrors
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(boolean):74:74 -> getInputErrors
    1:1:com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel getModel():29:29 -> getModel
    1:119:java.util.List getParamsErrors(boolean):67:185 -> getParamsErrors
    120:239:java.util.List getParamsErrors(boolean):67:186 -> getParamsErrors
    240:240:java.util.List getParamsErrors(boolean):67:67 -> getParamsErrors
    1:1:boolean getPropagateToInput():32:32 -> getPropagateToInput
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> propagateErrors
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):28:28 -> propagateErrors
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig -> com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig:
# {"id":"sourceFile","fileName":"MultiTaskNetworkConfig.kt"}
    int outputSize -> a
    com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction outputActivation -> b
    kotlinx.serialization.KSerializer[] $childSerializers -> c
    1:1:void <clinit>():24:24 -> <clinit>
    1:1:void <init>(int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,kotlinx.serialization.internal.SerializationConstructorMarker):18:18 -> <init>
    2:5:void <init>(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction):18:21 -> <init>
    1:1:kotlinx.serialization.KSerializer[] access$get$childSerializers$cp():18:18 -> access$get$childSerializers$cp
    1:1:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getOutputActivation():21:21 -> getOutputActivation
    1:1:int getOutputSize():20:20 -> getOutputSize
    1:1:void write$Self(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):18:18 -> write$Self
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$$serializer -> com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$$serializer:
# {"id":"sourceFile","fileName":"MultiTaskNetworkConfig.kt"}
    kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor -> a
    1:1:void <clinit>():18:18 -> <clinit>
    1:1:void <init>():18:18 -> <init>
    1:1:kotlinx.serialization.KSerializer[] childSerializers():18:18 -> childSerializers
    1:1:com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig deserialize(kotlinx.serialization.encoding.Decoder):18:18 -> deserialize
    2:2:java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder):18:18 -> deserialize
    1:1:kotlinx.serialization.descriptors.SerialDescriptor getDescriptor():18:18 -> getDescriptor
    1:1:void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig):18:18 -> serialize
    2:2:void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object):18:18 -> serialize
    1:1:kotlinx.serialization.KSerializer[] typeParametersSerializers():18:18 -> typeParametersSerializers
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$Companion -> com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$Companion:
# {"id":"sourceFile","fileName":"MultiTaskNetworkConfig.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():24:24 -> <init>
    1:1:kotlinx.serialization.KSerializer serializer():24:24 -> serializer
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel -> com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel:
# {"id":"sourceFile","fileName":"MultiTaskNetworkModel.kt"}
    int inputSize -> a
    com.kotlinnlp.simplednn.core.layers.LayerType$Input inputType -> b
    int hiddenSize -> c
    com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction hiddenActivation -> d
    java.util.List outputConfigurations -> e
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters inputNetwork -> f
    java.util.List outputNetworks -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    1:1:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):30:30 -> <init>
    1:1:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):30 -> <init>
    2:2:int getInputSize():31:31 -> <init>
    2:2:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):31 -> <init>
    3:3:com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType():32:32 -> <init>
    3:3:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):32 -> <init>
    4:4:int getHiddenSize():33:33 -> <init>
    4:4:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):33 -> <init>
    5:5:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getHiddenActivation():34:34 -> <init>
    5:5:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):34 -> <init>
    6:6:java.util.List getOutputConfigurations():35:35 -> <init>
    6:6:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):35 -> <init>
    7:7:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getInputNetwork():61:61 -> <init>
    7:7:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):61 -> <init>
    8:13:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):62:67 -> <init>
    14:14:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):65:65 -> <init>
    15:15:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getInputNetwork():61:61 -> <init>
    15:15:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):61 -> <init>
    16:18:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):96:98 -> <init>
    19:22:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):76:79 -> <init>
    23:29:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):77:83 -> <init>
    30:30:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):80:80 -> <init>
    31:53:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):76:98 -> <init>
    54:54:java.util.List getOutputNetworks():75:75 -> <init>
    54:54:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):75 -> <init>
    55:55:com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType():32:32 -> <init>
    55:55:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):32 -> <init>
    56:57:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):36:37 -> <init>
    58:58:void <init>(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):30:30 -> <init>
    1:1:com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getHiddenActivation():34:34 -> getHiddenActivation
    1:1:int getHiddenSize():33:33 -> getHiddenSize
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getInputNetwork():61:61 -> getInputNetwork
    1:1:int getInputSize():31:31 -> getInputSize
    1:1:com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType():32:32 -> getInputType
    1:1:java.util.List getOutputConfigurations():35:35 -> getOutputConfigurations
    1:1:java.util.List getOutputNetworks():75:75 -> getOutputNetworks
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel$Companion -> com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel$Companion:
# {"id":"sourceFile","fileName":"MultiTaskNetworkModel.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():40:40 -> <init>
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultitaskNetworksPool -> com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultitaskNetworksPool:
# {"id":"sourceFile","fileName":"MultitaskNetworksPool.kt"}
    com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel model -> c
    boolean propagateToInput -> d
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,boolean):23:23 -> <init>
    2:3:void <init>(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,boolean):21:22 -> <init>
    1:1:com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel getModel():21:21 -> getModel
    1:1:com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int):20:20 -> itemFactory
    2:4:com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork itemFactory(int):32:34 -> itemFactory
    5:5:com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork itemFactory(int):32:32 -> itemFactory
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE -> com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE:
# {"id":"sourceFile","fileName":"FOFE.kt"}
    float alpha -> a
    int id -> b
    boolean propagateToInput -> c
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray matrix -> d
    java.util.List inputErrors -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):22:22 -> <init>
    1:1:void <init>(float,int):22 -> <init>
    2:2:float getAlpha():23:23 -> <init>
    2:2:void <init>(float,int):23 -> <init>
    3:3:int getId():24:24 -> <init>
    3:3:void <init>(float,int):24 -> <init>
    4:4:boolean getPropagateToInput():59:59 -> <init>
    4:4:void <init>(float,int):59 -> <init>
    5:5:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):22:22 -> <init>
    5:5:void <init>(float,int,int,kotlin.jvm.internal.DefaultConstructorMarker):22 -> <init>
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):22:22 -> backward
    1:1:void backward(java.lang.Object):22 -> backward
    2:31:void backward(java.util.List):94:123 -> backward
    32:59:void backward(java.util.List):96:123 -> backward
    60:60:void backward(java.util.List):96:96 -> backward
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):22:22 -> forward
    1:1:java.lang.Object forward(java.lang.Object):22 -> forward
    2:41:java.util.List forward(java.util.List):80:119 -> forward
    42:77:java.util.List forward(java.util.List):84:119 -> forward
    1:1:float getAlpha():23:23 -> getAlpha
    1:1:int getId():24:24 -> getId
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):22:22 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):22 -> getInputErrors
    2:22:java.util.List getInputErrors(boolean):107:127 -> getInputErrors
    23:43:java.util.List getInputErrors(boolean):107:127 -> getInputErrors
    1:1:java.util.List getParamsErrors(boolean):114:114 -> getParamsErrors
    1:1:boolean getPropagateToInput():59:59 -> getPropagateToInput
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):22:22 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):22:22 -> propagateErrors
    2:2:java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):22 -> propagateErrors
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE$Companion -> com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE$Companion:
# {"id":"sourceFile","fileName":"FOFE.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():32:32 -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildMatrix(com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE$Companion,float,int):32:32 -> access$buildMatrix
    2:9:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray buildMatrix(float,int):40:47 -> access$buildMatrix
    2:9:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildMatrix(com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE$Companion,float,int):32 -> access$buildMatrix
com.kotlinnlp.simplednn.deeplearning.transformers.BERT -> com.kotlinnlp.simplednn.deeplearning.transformers.BERT:
# {"id":"sourceFile","fileName":"BERT.kt"}
    com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel model -> a
    boolean masksEnabled -> b
    boolean autoPadding -> c
    boolean propagateToInput -> d
    int id -> e
    com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator errorsAccumulator -> f
    java.util.List layers -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List trainableLayers -> h
    com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor embNorm -> i
    java.util.List inputSequence -> j
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zeroErrors -> k
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int):35:35 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int):35 -> <init>
    2:2:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel getModel():36:36 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int):36 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):38:38 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int):38 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):39:39 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int):39 -> <init>
    5:5:boolean getPropagateToInput():40:40 -> <init>
    5:5:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int):40 -> <init>
    6:6:int getId():41:41 -> <init>
    6:6:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int):41 -> <init>
    7:190:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int):52:235 -> <init>
    191:368:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int):58:235 -> <init>
    369:393:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int):57:81 -> <init>
    394:394:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int):35:35 -> <init>
    394:394:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):35 -> <init>
    1:4:kotlin.Pair encodeSequence$encodeToken(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,java.lang.String,int,boolean):152:155 -> a
    5:9:kotlin.Pair encodeSequence$encodeToken(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,java.lang.String,int,boolean):153:157 -> a
    10:10:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getPositionalEncoding(int):179:179 -> a
    10:10:kotlin.Pair encodeSequence$encodeToken(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,java.lang.String,int,boolean):158 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:13:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getPositionalEncoding(int):179:181 -> a
    11:13:kotlin.Pair encodeSequence$encodeToken(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,java.lang.String,int,boolean):158 -> a
    14:17:kotlin.Pair encodeSequence$encodeToken(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,java.lang.String,int,boolean):158:161 -> a
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray buildPositionalEncoding(int):188:188 -> access$buildPositionalEncoding
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int):35 -> access$buildPositionalEncoding
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray buildPositionalEncoding(int):190:190 -> access$buildPositionalEncoding
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int):35 -> access$buildPositionalEncoding
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray buildPositionalEncoding(int):190:190 -> access$buildPositionalEncoding
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int):35 -> access$buildPositionalEncoding
    5:11:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray buildPositionalEncoding(int):189:195 -> access$buildPositionalEncoding
    5:11:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int):35 -> access$buildPositionalEncoding
    12:12:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray buildPositionalEncoding(int):188:188 -> access$buildPositionalEncoding
    12:12:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int):35 -> access$buildPositionalEncoding
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int):35:35 -> backward
    1:1:void backward(java.lang.Object):35 -> backward
    2:135:void backward(java.util.List):106:239 -> backward
    136:140:void backward(java.util.List):115:119 -> backward
    141:181:void backwardInput(java.util.List):207:247 -> backward
    141:181:void backward(java.util.List):122 -> backward
    182:196:void backwardInput(java.util.List):213:227 -> backward
    182:196:void backward(java.util.List):122 -> backward
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int):35:35 -> forward
    1:1:java.lang.Object forward(java.lang.Object):35 -> forward
    2:2:java.util.List forward(java.util.List):90:90 -> forward
    3:81:java.util.List encodeSequence(java.util.List):166:244 -> forward
    3:81:java.util.List forward(java.util.List):90 -> forward
    82:82:kotlin.Pair encodeSequence$encodeToken$default(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,java.lang.String,int,boolean,int,java.lang.Object):150:150 -> forward
    82:82:java.util.List encodeSequence(java.util.List):167 -> forward
    82:82:java.util.List forward(java.util.List):90 -> forward
    83:83:java.util.List encodeSequence(java.util.List):244:244 -> forward
    83:83:java.util.List forward(java.util.List):90 -> forward
    84:86:java.util.List encodeSequence(java.util.List):166:168 -> forward
    84:86:java.util.List forward(java.util.List):90 -> forward
    87:91:java.util.List encodeSequence(java.util.List):166:170 -> forward
    87:91:java.util.List forward(java.util.List):90 -> forward
    92:239:java.util.List forward(java.util.List):90:237 -> forward
    240:243:java.util.List forward(java.util.List):93:96 -> forward
    1:1:int getId():41:41 -> getId
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int):35:35 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):35 -> getInputErrors
    2:2:com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors getInputErrors(boolean):138:138 -> getInputErrors
    1:1:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel getModel():36:36 -> getModel
    1:1:java.util.List getParamsErrors(boolean):133:133 -> getParamsErrors
    1:1:boolean getPropagateToInput():40:40 -> getPropagateToInput
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int):35:35 -> propagateErrors
    1:1:com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):35 -> propagateErrors
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int):35:35 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):35 -> propagateErrors
com.kotlinnlp.simplednn.deeplearning.transformers.BERT$getPositionalEncoding$1 -> com.kotlinnlp.simplednn.deeplearning.transformers.a:
# {"id":"sourceFile","fileName":"BERT.kt"}
    com.kotlinnlp.simplednn.deeplearning.transformers.BERT this$0 -> a
    int $pos -> b
    1:1:com.kotlinnlp.simplednn.core.arrays.ParamsArray invoke():180:180 -> invoke
    1:1:java.lang.Object invoke():180 -> invoke
com.kotlinnlp.simplednn.deeplearning.transformers.BERTBaseImportHelper -> com.kotlinnlp.simplednn.deeplearning.transformers.BERTBaseImportHelper:
# {"id":"sourceFile","fileName":"BERTBaseImportHelper.kt"}
    kotlin.text.Regex LAYER_INDEX_REGEX -> a
    1:1:void <clinit>():29:29 -> <clinit>
    1:1:kotlin.text.Regex access$getLAYER_INDEX_REGEX$p():24:24 -> <init>
    1:1:void <init>():24 -> <init>
    1:1:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):175:175 -> a
    2:4:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    2:4:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):175 -> a
    5:6:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):175:176 -> a
    7:9:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    7:9:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):176 -> a
    10:12:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):176:178 -> a
    13:15:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    13:15:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):178 -> a
    16:16:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):178:178 -> a
    17:20:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):177:180 -> a
    21:23:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    21:23:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):180 -> a
    24:24:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):180:180 -> a
    25:27:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):179:181 -> a
    28:30:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    28:30:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):181 -> a
    31:32:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):181:182 -> a
    33:35:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    33:35:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):182 -> a
    36:37:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):182:183 -> a
    38:40:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    38:40:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):183 -> a
    41:42:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):183:184 -> a
    43:45:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    43:45:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):184 -> a
    46:46:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):184:184 -> a
    47:166:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):174:293 -> a
    167:167:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):188:188 -> a
    168:168:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    168:168:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):184 -> a
    169:169:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    169:169:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):184 -> a
    171:171:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    171:171:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):183 -> a
    172:172:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    172:172:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):183 -> a
    174:174:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    174:174:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):182 -> a
    175:175:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    175:175:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):182 -> a
    177:177:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    177:177:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):181 -> a
    178:178:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    178:178:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):181 -> a
    180:180:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    180:180:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):180 -> a
    181:181:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    181:181:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):180 -> a
    183:183:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    183:183:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):178 -> a
    184:184:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    184:184:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):178 -> a
    186:186:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    186:186:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):176 -> a
    187:187:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    187:187:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):176 -> a
    189:189:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    189:189:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):175 -> a
    190:190:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    190:190:java.util.Map getAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel):175 -> a
    191:283:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):203:295 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lcom/kotlinnlp/simplednn/deeplearning/transformers/BERTParameters;II)Ljava/util/LinkedHashMap;"}
    284:289:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):207:212 -> a
    290:302:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):206:218 -> a
    303:305:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    303:305:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):218 -> a
    306:306:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):218:218 -> a
    307:310:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):217:220 -> a
    311:313:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    311:313:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):220 -> a
    314:314:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):220:220 -> a
    315:318:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):219:222 -> a
    319:321:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    319:321:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):222 -> a
    322:322:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):222:222 -> a
    323:326:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):221:224 -> a
    327:329:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    327:329:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):224 -> a
    330:330:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):224:224 -> a
    331:334:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):223:226 -> a
    335:337:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    335:337:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):226 -> a
    338:338:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):226:226 -> a
    339:342:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):225:228 -> a
    343:345:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    343:345:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):228 -> a
    346:346:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):228:228 -> a
    347:350:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):227:230 -> a
    351:353:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    351:353:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):230 -> a
    354:354:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):230:230 -> a
    355:358:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):229:232 -> a
    359:361:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    359:361:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):232 -> a
    362:362:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):232:232 -> a
    363:365:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):231:233 -> a
    366:368:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    366:368:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):233 -> a
    369:370:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):233:234 -> a
    371:373:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:128 -> a
    371:373:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):234 -> a
    374:374:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):234:234 -> a
    375:375:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):216:216 -> a
    376:376:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    376:376:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):234 -> a
    377:377:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    377:377:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):234 -> a
    379:379:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    379:379:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):233 -> a
    380:380:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    380:380:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):233 -> a
    382:382:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    382:382:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):232 -> a
    383:383:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    383:383:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):232 -> a
    385:385:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    385:385:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):230 -> a
    386:386:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    386:386:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):230 -> a
    388:388:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    388:388:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):228 -> a
    389:389:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    389:389:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):228 -> a
    391:391:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    391:391:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):226 -> a
    392:392:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    392:392:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):226 -> a
    394:394:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    394:394:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):224 -> a
    395:395:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    395:395:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):224 -> a
    397:397:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    397:397:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):222 -> a
    398:398:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    398:398:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):222 -> a
    400:400:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    400:400:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):220 -> a
    401:401:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    401:401:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):220 -> a
    403:403:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):128:128 -> a
    403:403:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):218 -> a
    404:404:com.kotlinnlp.simplednn.core.layers.LayerParameters com.kotlinnlp.simplednn.core.layers.StackedLayersParameters.getLayerParams(int):126:126 -> a
    404:404:java.util.Map getLayerAssignMap(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,int,int):218 -> a
    1:1:kotlin.text.Regex access$getLAYER_INDEX_REGEX$p():24:24 -> access$getLAYER_INDEX_REGEX$p
    1:213:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel buildModel(java.util.Map,com.kotlinnlp.utils.DictionarySet,int):42:254 -> buildModel
    214:222:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel buildModel(java.util.Map,com.kotlinnlp.utils.DictionarySet,int):52:60 -> buildModel
    223:227:int countLayers(java.util.Map):246:250 -> buildModel
    223:227:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel buildModel(java.util.Map,com.kotlinnlp.utils.DictionarySet,int):62 -> buildModel
    228:229:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel buildModel(java.util.Map,com.kotlinnlp.utils.DictionarySet,int):56:56 -> buildModel
    242:430:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel buildModel(java.util.Map,com.kotlinnlp.utils.DictionarySet,int):69:257 -> buildModel
    431:621:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel buildModel(java.util.Map,com.kotlinnlp.utils.DictionarySet,int):70:260 -> buildModel
    622:810:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel buildModel(java.util.Map,com.kotlinnlp.utils.DictionarySet,int):74:262 -> buildModel
    811:812:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel buildModel(java.util.Map,com.kotlinnlp.utils.DictionarySet,int):77:78 -> buildModel
    813:813:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel buildModel(java.util.Map,com.kotlinnlp.utils.DictionarySet,int):46:46 -> buildModel
    814:814:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel buildModel(java.util.Map,com.kotlinnlp.utils.DictionarySet,int):45:45 -> buildModel
com.kotlinnlp.simplednn.deeplearning.transformers.BERTBaseImportHelper$countLayers$1 -> com.kotlinnlp.simplednn.deeplearning.transformers.b:
# {"id":"sourceFile","fileName":"BERTBaseImportHelper.kt"}
    com.kotlinnlp.simplednn.deeplearning.transformers.BERTBaseImportHelper$countLayers$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/simplednn/deeplearning/transformers/b;"}
    1:1:java.lang.Object invoke(java.lang.Object):248:248 -> invoke
    2:250:kotlin.text.MatchResult invoke(java.lang.String):0:248 -> invoke
    2:250:java.lang.Object invoke(java.lang.Object):248 -> invoke
com.kotlinnlp.simplednn.deeplearning.transformers.BERTBaseImportHelper$countLayers$2 -> com.kotlinnlp.simplednn.deeplearning.transformers.c:
# {"id":"sourceFile","fileName":"BERTBaseImportHelper.kt"}
    com.kotlinnlp.simplednn.deeplearning.transformers.BERTBaseImportHelper$countLayers$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/simplednn/deeplearning/transformers/c;"}
    1:1:java.lang.Object invoke(java.lang.Object):249:249 -> invoke
    2:251:java.lang.Integer invoke(kotlin.text.MatchResult):0:249 -> invoke
    2:251:java.lang.Object invoke(java.lang.Object):249 -> invoke
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer -> com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer:
# {"id":"sourceFile","fileName":"BERTLayer.kt"}
    com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters params -> a
    boolean propagateToInput -> b
    int id -> c
    com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator errorsAccumulator -> d
    java.util.List inputSequence -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork multiHeadAttention -> f
    com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor multiHeadNorm -> g
    com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor outputFF -> h
    com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor outputNorm -> i
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):25:25 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,boolean,int):25 -> <init>
    2:2:com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters getParams():26:26 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,boolean,int):26 -> <init>
    3:3:boolean getPropagateToInput():27:27 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,boolean,int):27 -> <init>
    4:4:int getId():28:28 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,boolean,int):28 -> <init>
    5:34:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,boolean,int):39:68 -> <init>
    35:35:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):25:25 -> <init>
    35:35:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker):25 -> <init>
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):25:25 -> backward
    1:1:void backward(java.lang.Object):25 -> backward
    2:2:void backward(java.util.List):89:89 -> backward
    3:3:java.util.List backwardOutput(java.util.List):155:155 -> backward
    3:3:void backward(java.util.List):91 -> backward
    4:6:java.util.List backwardNorm(java.util.List,com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor):196:198 -> backward
    4:6:java.util.List backwardOutput(java.util.List):155 -> backward
    4:6:void backward(java.util.List):91 -> backward
    7:72:java.util.List backwardOutput(java.util.List):157:222 -> backward
    7:72:void backward(java.util.List):91 -> backward
    73:135:java.util.List backwardOutput(java.util.List):160:222 -> backward
    73:135:void backward(java.util.List):91 -> backward
    136:136:java.util.List backwardAttention(java.util.List):174:174 -> backward
    136:136:void backward(java.util.List):91 -> backward
    137:139:java.util.List backwardNorm(java.util.List,com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor):196:198 -> backward
    137:139:java.util.List backwardAttention(java.util.List):174 -> backward
    137:139:void backward(java.util.List):91 -> backward
    140:190:java.util.List backwardAttention(java.util.List):176:226 -> backward
    140:190:void backward(java.util.List):91 -> backward
    191:237:java.util.List backwardAttention(java.util.List):180:226 -> backward
    191:237:void backward(java.util.List):91 -> backward
    238:238:java.util.List backwardAttention(java.util.List):182:182 -> backward
    238:238:void backward(java.util.List):91 -> backward
    239:352:void backward(java.util.List):93:206 -> backward
    353:353:void backward(java.util.List):94:94 -> backward
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):25:25 -> forward
    1:1:java.lang.Object forward(java.lang.Object):25 -> forward
    2:4:java.util.List forward(java.util.List):202:204 -> forward
    5:132:java.util.List forward(java.util.List):77:204 -> forward
    133:133:java.util.List forward(java.util.List):77:77 -> forward
    134:221:java.util.List forwardAttention(java.util.List):127:214 -> forward
    134:221:java.util.List forward(java.util.List):79 -> forward
    222:307:java.util.List forwardAttention(java.util.List):129:214 -> forward
    222:307:java.util.List forward(java.util.List):79 -> forward
    308:308:java.util.List forwardAttention(java.util.List):129:129 -> forward
    308:308:java.util.List forward(java.util.List):79 -> forward
    309:386:java.util.List forwardOutput(java.util.List):141:218 -> forward
    309:386:java.util.List forward(java.util.List):79 -> forward
    387:462:java.util.List forwardOutput(java.util.List):143:218 -> forward
    387:462:java.util.List forward(java.util.List):79 -> forward
    463:463:java.util.List forwardOutput(java.util.List):143:143 -> forward
    463:463:java.util.List forward(java.util.List):79 -> forward
    1:1:int getId():28:28 -> getId
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):25:25 -> getInputErrors
    1:1:java.lang.Object getInputErrors(boolean):25 -> getInputErrors
    2:96:java.util.List getInputErrors(boolean):116:210 -> getInputErrors
    97:191:java.util.List getInputErrors(boolean):116:210 -> getInputErrors
    1:1:com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters getParams():26:26 -> getParams
    1:1:java.util.List getParamsErrors(boolean):105:105 -> getParamsErrors
    1:1:boolean getPropagateToInput():27:27 -> getPropagateToInput
    1:1:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):25:25 -> propagateErrors
    2:2:java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):25:25 -> propagateErrors
    2:2:java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean):25 -> propagateErrors
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel -> com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel:
# {"id":"sourceFile","fileName":"BERTModel.kt"}
    int inputSize -> a
    int attentionSize -> b
    int attentionOutputSize -> c
    int outputHiddenSize -> d
    int numOfHeads -> e
    com.kotlinnlp.utils.DictionarySet vocabulary -> f
    int outputSize -> g
    java.util.List initLayers -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    java.util.List layers -> i
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters embNorm -> j
    com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap wordEmb -> k
    com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap funcEmb -> l
    com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap positionalEmb -> m
    com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap tokenTypeEmb -> n
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters classifier -> o
    1:1:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):37:37 -> <init>
    1:1:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):37 -> <init>
    2:2:int getInputSize():38:38 -> <init>
    2:2:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):38 -> <init>
    3:3:int getAttentionSize():39:39 -> <init>
    3:3:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):39 -> <init>
    4:4:int getAttentionOutputSize():40:40 -> <init>
    4:4:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):40 -> <init>
    5:5:int getOutputHiddenSize():41:41 -> <init>
    5:5:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):41 -> <init>
    6:6:int getNumOfHeads():42:42 -> <init>
    6:6:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):42 -> <init>
    7:7:com.kotlinnlp.utils.DictionarySet getVocabulary():43:43 -> <init>
    7:7:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):43 -> <init>
    8:8:int getOutputSize():97:97 -> <init>
    8:8:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):97 -> <init>
    9:17:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):103:111 -> <init>
    18:18:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):106:106 -> <init>
    19:19:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):103:103 -> <init>
    20:20:java.util.List getLayers():120:120 -> <init>
    20:20:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):120 -> <init>
    21:21:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getEmbNorm():126:126 -> <init>
    21:21:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):126 -> <init>
    22:23:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):127:128 -> <init>
    24:24:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getEmbNorm():126:126 -> <init>
    24:24:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):126 -> <init>
    25:25:void setWordEmb(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap):137:137 -> <init>
    25:25:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):137 -> <init>
    26:86:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):138:198 -> <init>
    87:87:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):138:138 -> <init>
    88:88:void setWordEmb(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap):137:137 -> <init>
    88:88:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):137 -> <init>
    89:89:void setFuncEmb(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap):144:144 -> <init>
    89:89:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):144 -> <init>
    90:145:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):145:200 -> <init>
    146:146:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer) -> <init>
    147:147:void setFuncEmb(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap):144:144 -> <init>
    147:147:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):144 -> <init>
    148:148:com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap getPositionalEmb():153:153 -> <init>
    148:148:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):153 -> <init>
    149:149:com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap getTokenTypeEmb():158:158 -> <init>
    149:149:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):158 -> <init>
    150:151:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):159:160 -> <init>
    152:152:com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap getTokenTypeEmb():158:158 -> <init>
    152:152:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):158 -> <init>
    153:153:void setClassifier(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters):166:166 -> <init>
    153:153:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):166 -> <init>
    154:158:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):167:171 -> <init>
    159:159:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):171:171 -> <init>
    160:160:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):170:170 -> <init>
    161:161:void setClassifier(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters):166:166 -> <init>
    161:161:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):166 -> <init>
    162:163:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):46:47 -> <init>
    164:164:void <init>(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):37:37 -> <init>
    1:1:int getAttentionOutputSize():40:40 -> getAttentionOutputSize
    1:1:int getAttentionSize():39:39 -> getAttentionSize
    1:1:void setClassifier(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters):166:166 -> getClassifier
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getClassifier():166 -> getClassifier
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getEmbNorm():126:126 -> getEmbNorm
    1:1:void setFuncEmb(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap):144:144 -> getFuncEmb
    1:1:com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap getFuncEmb():144 -> getFuncEmb
    1:1:int getInputSize():38:38 -> getInputSize
    1:1:java.util.List getLayers():120:120 -> getLayers
    1:1:int getNumOfHeads():42:42 -> getNumOfHeads
    1:1:int getOutputHiddenSize():41:41 -> getOutputHiddenSize
    1:1:int getOutputSize():97:97 -> getOutputSize
    1:1:com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap getPositionalEmb():153:153 -> getPositionalEmb
    1:1:com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap getTokenTypeEmb():158:158 -> getTokenTypeEmb
    1:1:com.kotlinnlp.utils.DictionarySet getVocabulary():43:43 -> getVocabulary
    1:1:void setWordEmb(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap):137:137 -> getWordEmb
    1:1:com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap getWordEmb():137 -> getWordEmb
    1:7:void reduceLayersTo(int):188:194 -> reduceLayersTo
    8:8:void reduceLayersTo(int):189:189 -> reduceLayersTo
    9:9:void reduceLayersTo(int):188:188 -> reduceLayersTo
    1:1:void setClassifier(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters):166:166 -> setClassifier
    1:1:void setFuncEmb(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap):144:144 -> setFuncEmb
    1:1:void setWordEmb(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap):137:137 -> setWordEmb
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$Companion -> com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$Companion:
# {"id":"sourceFile","fileName":"BERTModel.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():76:76 -> <init>
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken -> com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken:
# {"id":"sourceFile","fileName":"BERTModel.kt"}
    java.lang.String form -> a
    java.util.Map tokensByForm -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/LinkedHashMap;"}
    com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken[] $VALUES -> c
    kotlin.enums.EnumEntries $ENTRIES -> d
    1:5:void <clinit>():54:58 -> <clinit>
    6:6:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken[] $values():0:0 -> <clinit>
    6:6:void <clinit>():58 -> <clinit>
    7:149:void <clinit>():58:200 -> <clinit>
    150:286:void <clinit>():65:201 -> <clinit>
    287:287:void <clinit>():65:65 -> <clinit>
    1:1:java.util.Map access$getTokensByForm$cp():53:53 -> <init>
    1:1:void <init>(java.lang.String,int,java.lang.String):53 -> <init>
    1:1:java.util.Map access$getTokensByForm$cp():53:53 -> access$getTokensByForm$cp
    1:1:java.util.Map access$getTokensByForm$cp():53:53 -> getForm
    1:1:java.lang.String getForm():53 -> getForm
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken$Companion -> com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken$Companion:
# {"id":"sourceFile","fileName":"BERTModel.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():60:60 -> <init>
    1:1:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken byForm(java.lang.String):72:72 -> byForm
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters -> com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters:
# {"id":"sourceFile","fileName":"BERTParameters.kt"}
    int inputSize -> a
    int attentionSize -> b
    int attentionOutputSize -> c
    int outputHiddenSize -> d
    int numOfHeads -> e
    com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters attention -> f
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters outputFF -> g
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters multiHeadNorm -> h
    com.kotlinnlp.simplednn.core.layers.StackedLayersParameters outputNorm -> i
    1:1:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):30:30 -> <init>
    1:1:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):30 -> <init>
    2:2:int getInputSize():31:31 -> <init>
    2:2:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):31 -> <init>
    3:3:int getAttentionSize():32:32 -> <init>
    3:3:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):32 -> <init>
    4:4:int getAttentionOutputSize():33:33 -> <init>
    4:4:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):33 -> <init>
    5:5:int getOutputHiddenSize():34:34 -> <init>
    5:5:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):34 -> <init>
    6:6:int getNumOfHeads():35:35 -> <init>
    6:6:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):35 -> <init>
    7:7:com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters getAttention():52:52 -> <init>
    7:7:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):52 -> <init>
    8:8:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputFF():63:63 -> <init>
    8:8:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):63 -> <init>
    9:9:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):66:66 -> <init>
    10:10:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputFF():63:63 -> <init>
    10:10:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):63 -> <init>
    11:11:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMultiHeadNorm():75:75 -> <init>
    11:11:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):75 -> <init>
    12:13:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):76:77 -> <init>
    14:14:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMultiHeadNorm():75:75 -> <init>
    14:14:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):75 -> <init>
    15:15:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputNorm():84:84 -> <init>
    15:15:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):84 -> <init>
    16:17:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):85:86 -> <init>
    18:18:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputNorm():84:84 -> <init>
    18:18:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):84 -> <init>
    19:19:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer):94:94 -> <init>
    20:21:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):36:37 -> <init>
    22:22:void <init>(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker):30:30 -> <init>
    1:1:com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters getAttention():52:52 -> getAttention
    1:1:int getAttentionOutputSize():33:33 -> getAttentionOutputSize
    1:1:int getAttentionSize():32:32 -> getAttentionSize
    1:1:int getInputSize():31:31 -> getInputSize
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMultiHeadNorm():75:75 -> getMultiHeadNorm
    1:1:int getNumOfHeads():35:35 -> getNumOfHeads
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputFF():63:63 -> getOutputFF
    1:1:int getOutputHiddenSize():34:34 -> getOutputHiddenSize
    1:1:com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputNorm():84:84 -> getOutputNorm
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters$Companion -> com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters$Companion:
# {"id":"sourceFile","fileName":"BERTParameters.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():40:40 -> <init>
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer -> com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer:
# {"id":"sourceFile","fileName":"BERTTrainer.kt"}
    com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel model -> k
    float termsDropout -> l
    com.kotlinnlp.utils.WordPieceTokenizer tokenizer -> m
    com.kotlinnlp.simplednn.deeplearning.transformers.BERT bert -> n
    com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor classifier -> o
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zeroErrors -> p
    com.kotlinnlp.simplednn.helpers.Statistics$Simple stats -> q
    java.util.List lastLosses -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    int examplesCount -> s
    com.kotlinnlp.utils.Timer timer -> t
    kotlin.random.Random maskRandom -> u
    kotlin.random.Random replaceRandom -> v
    kotlin.random.Random formRandom -> w
    java.util.Set SPECIAL_TOKENS -> x
    1:245:void <clinit>():65:309 -> <clinit>
    246:475:void <clinit>():80:309 -> <clinit>
    476:476:void <clinit>():80:80 -> <clinit>
    1:1:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,java.lang.String,float,boolean,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,java.lang.Iterable,int,com.kotlinnlp.utils.Shuffler,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):47:47 -> <init>
    2:2:kotlin.random.Random access$getFormRandom$cp():39:39 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,java.lang.String,float,boolean,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,java.lang.Iterable,int,com.kotlinnlp.utils.Shuffler,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):39 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,java.lang.String,float,boolean,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,java.lang.Iterable,int,com.kotlinnlp.utils.Shuffler,boolean):51:51 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,java.lang.String,float,boolean,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,java.lang.Iterable,int,com.kotlinnlp.utils.Shuffler,boolean):49:49 -> <init>
    5:5:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,java.lang.String,float,boolean,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,java.lang.Iterable,int,com.kotlinnlp.utils.Shuffler,boolean):40:40 -> <init>
    6:6:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,java.lang.String,float,boolean,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,java.lang.Iterable,int,com.kotlinnlp.utils.Shuffler,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):42:42 -> <init>
    6:6:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,java.lang.String,float,boolean,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,java.lang.Iterable,int,com.kotlinnlp.utils.Shuffler,boolean):42 -> <init>
    7:51:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,java.lang.String,float,boolean,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,java.lang.Iterable,int,com.kotlinnlp.utils.Shuffler,boolean):138:182 -> <init>
    1:1:kotlin.random.Random access$getFormRandom$cp():39:39 -> access$getFormRandom$cp
    1:1:kotlin.random.Random access$getFormRandom$cp():39:39 -> access$getMaskRandom$cp
    1:1:kotlin.random.Random access$getMaskRandom$cp():39 -> access$getMaskRandom$cp
    1:1:kotlin.random.Random access$getFormRandom$cp():39:39 -> access$getModel$p
    1:1:com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel access$getModel$p(com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer):39 -> access$getModel$p
    1:1:kotlin.random.Random access$getFormRandom$cp():39:39 -> access$getReplaceRandom$cp
    1:1:kotlin.random.Random access$getReplaceRandom$cp():39 -> access$getReplaceRandom$cp
    1:1:kotlin.random.Random access$getFormRandom$cp():39:39 -> access$getTermsDropout$p
    1:1:float access$getTermsDropout$p(com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer):39 -> access$getTermsDropout$p
    1:1:void accumulateErrors():215:215 -> accumulateErrors
    1:13:void printProgressAndStats():275:287 -> b
    1:1:kotlin.random.Random access$getFormRandom$cp():39:39 -> learnFromExample
    1:1:void learnFromExample(java.lang.Object):39 -> learnFromExample
    2:105:void learnFromExample(java.lang.String):192:295 -> learnFromExample
    106:208:void learnFromExample(java.lang.String):193:295 -> learnFromExample
    209:313:void learnFromExample(java.lang.String):195:299 -> learnFromExample
    314:314:java.lang.String com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$EncodedTerm.getMaskedForm():110:110 -> learnFromExample
    314:314:void learnFromExample(java.lang.String):195 -> learnFromExample
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    316:319:java.lang.String com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$EncodedTerm.getMaskedForm():112:115 -> learnFromExample
    316:319:void learnFromExample(java.lang.String):195 -> learnFromExample
    320:322:java.lang.String com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$EncodedTerm.getRandomForm():129:131 -> learnFromExample
    320:322:java.lang.String com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$EncodedTerm.getMaskedForm():116 -> learnFromExample
    320:322:void learnFromExample(java.lang.String):195 -> learnFromExample
    323:327:java.lang.String com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$EncodedTerm.getMaskedForm():117:121 -> learnFromExample
    323:327:void learnFromExample(java.lang.String):195 -> learnFromExample
    328:328:void learnFromExample(java.lang.String):299:299 -> learnFromExample
    329:435:void learnFromExample(java.lang.String):195:301 -> learnFromExample
    436:436:void learnFromExample(java.lang.String):197:197 -> learnFromExample
    437:530:void com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$EncodedTerm.setEncoding(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):0:93 -> learnFromExample
    437:530:void learnFromExample(java.lang.String):197 -> learnFromExample
    531:533:void learnFromExample(java.lang.String):303:305 -> learnFromExample
    534:534:boolean com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$EncodedTerm.isMasked():104:104 -> learnFromExample
    534:534:void learnFromExample(java.lang.String):200 -> learnFromExample
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    535:535:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$EncodedTerm.getEncoding():93:93 -> learnFromExample
    535:535:void learnFromExample(java.lang.String):201 -> learnFromExample
    536:536:int com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$EncodedTerm.getIndex():99:99 -> learnFromExample
    536:536:void learnFromExample(java.lang.String):201 -> learnFromExample
    537:541:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray classifyVector(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int):235:239 -> learnFromExample
    537:541:void learnFromExample(java.lang.String):201 -> learnFromExample
    542:546:void updateStats(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):258:262 -> learnFromExample
    542:546:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray classifyVector(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int):241 -> learnFromExample
    542:546:void learnFromExample(java.lang.String):201 -> learnFromExample
    547:553:void updateStats(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):261:267 -> learnFromExample
    547:553:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray classifyVector(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int):241 -> learnFromExample
    547:553:void learnFromExample(java.lang.String):201 -> learnFromExample
    554:555:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray classifyVector(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int):243:244 -> learnFromExample
    554:555:void learnFromExample(java.lang.String):201 -> learnFromExample
    556:560:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray classifyVector(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int):243:247 -> learnFromExample
    556:560:void learnFromExample(java.lang.String):201 -> learnFromExample
    561:663:void learnFromExample(java.lang.String):203:305 -> learnFromExample
    664:666:void learnFromExample(java.lang.String):206:208 -> learnFromExample
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$Companion -> com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$Companion:
# {"id":"sourceFile","fileName":"BERTTrainer.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():60:60 -> <init>
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$EncodedTerm -> com.kotlinnlp.simplednn.deeplearning.transformers.d:
# {"id":"sourceFile","fileName":"BERTTrainer.kt"}
    java.lang.String form -> a
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray encoding -> b
    int index -> c
    boolean isMasked -> d
    com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer this$0 -> e
    1:18:void <init>(com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer,java.lang.String):88:105 -> <init>
com.kotlinnlp.simplednn.helpers.Counter -> com.kotlinnlp.simplednn.helpers.Counter:
# {"id":"sourceFile","fileName":"Counter.kt"}
    int epoch -> a
    int batch -> b
    int exampleCount -> c
    float bestAccuracy -> d
    1:1:void <init>():0:0 -> <init>
    2:6:void <init>(int,int,int,float):13:17 -> <init>
    7:7:void <init>(int,int,int,float,int,kotlin.jvm.internal.DefaultConstructorMarker):13:13 -> <init>
    1:1:int getBatch():15:15 -> getBatch
    1:1:float getBestAccuracy():17:17 -> getBestAccuracy
    1:1:int getEpoch():14:14 -> getEpoch
    1:1:int getExampleCount():16:16 -> getExampleCount
    1:2:void newBatch():45:46 -> newBatch
    1:3:void newEpoch():35:37 -> newEpoch
    1:1:void newExample():54:54 -> newExample
    1:4:void reset():24:27 -> reset
    1:1:void setBatch(int):15:15 -> setBatch
    1:1:void setBestAccuracy(float):17:17 -> setBestAccuracy
    1:1:void setEpoch(int):14:14 -> setEpoch
    1:1:void setExampleCount(int):16:16 -> setExampleCount
com.kotlinnlp.simplednn.helpers.Evaluator -> com.kotlinnlp.simplednn.helpers.Evaluator:
# {"id":"sourceFile","fileName":"Evaluator.kt"}
    java.lang.Iterable examples -> a
    1:1:void <init>(java.lang.Iterable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):18:18 -> <init>
    1:1:void <init>(java.lang.Iterable,boolean):18 -> <init>
    2:2:java.lang.Iterable getExamples$advancedml_release():19:19 -> <init>
    2:2:void <init>(java.lang.Iterable,boolean):19 -> <init>
    3:3:void <init>(java.lang.Iterable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):18:18 -> <init>
    1:21:com.kotlinnlp.simplednn.helpers.Statistics evaluate():38:58 -> evaluate
    22:27:com.kotlinnlp.simplednn.helpers.Statistics evaluate():42:47 -> evaluate
    1:1:java.lang.Iterable getExamples$advancedml_release():19:19 -> getExamples$advancedml_release
com.kotlinnlp.simplednn.helpers.Statistics -> com.kotlinnlp.simplednn.helpers.Statistics:
# {"id":"sourceFile","fileName":"Statistics.kt"}
    kotlin.properties.ReadWriteProperty accuracy$delegate -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/simplednn/helpers/Statistics$special$$inlined$observable$1;"}
    kotlin.reflect.KProperty[] $$delegatedProperties -> b
    1:1:void <clinit>():45:45 -> <clinit>
    1:1:void <init>():17:17 -> <init>
    2:2:void <clinit>():45:45 -> <init>
    2:2:void <init>():45 -> <init>
    3:3:void <init>():53:53 -> <init>
    4:4:void <clinit>():45:45 -> <init>
    4:4:void <init>():45 -> <init>
    1:1:void <clinit>():45:45 -> getAccuracy
    1:1:float getAccuracy():45 -> getAccuracy
    1:1:void <clinit>():45:45 -> setAccuracy
    1:1:void setAccuracy(float):45 -> setAccuracy
com.kotlinnlp.simplednn.helpers.Statistics$Simple -> com.kotlinnlp.simplednn.helpers.Statistics$Simple:
# {"id":"sourceFile","fileName":"Statistics.kt"}
    com.kotlinnlp.utils.stats.MetricCounter metric -> c
    1:6:void <init>():22:27 -> <init>
    1:1:com.kotlinnlp.utils.stats.MetricCounter getMetric():27:27 -> getMetric
    1:3:void reset():34:36 -> reset
    1:1:java.lang.String toString():39:39 -> toString
com.kotlinnlp.simplednn.helpers.Statistics$special$$inlined$observable$1 -> com.kotlinnlp.simplednn.helpers.Statistics$special$$inlined$observable$1:
# {"id":"sourceFile","fileName":"Delegates.kt"}
    1:1:void <init>(java.lang.Object):33:33 -> <init>
    1:1:void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object):34:34 -> afterChange
    2:2:void com.kotlinnlp.simplednn.helpers.Statistics.<clinit>():45:45 -> afterChange
    2:2:void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object):74 -> afterChange
com.kotlinnlp.simplednn.helpers.Trainer -> com.kotlinnlp.simplednn.helpers.Trainer:
# {"id":"sourceFile","fileName":"Trainer.kt"}
    java.lang.String modelFilename -> a
    java.util.List optimizers -> b
    java.lang.Iterable examples -> c
    int epochs -> d
    int batchSize -> e
    com.kotlinnlp.simplednn.helpers.Evaluator evaluator -> f
    com.kotlinnlp.utils.Shuffler shuffler -> g
    boolean verbose -> h
    com.kotlinnlp.simplednn.helpers.Counter counter -> i
    com.kotlinnlp.utils.Timer timer -> j
    1:1:com.kotlinnlp.utils.Shuffler access$getShuffler$p(com.kotlinnlp.simplednn.helpers.Trainer):26:26 -> <init>
    1:1:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean):26 -> <init>
    2:2:java.lang.String getModelFilename():27:27 -> <init>
    2:2:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean):27 -> <init>
    3:3:java.util.List getOptimizers():28:28 -> <init>
    3:3:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean):28 -> <init>
    4:5:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean):29:30 -> <init>
    6:6:int getBatchSize():31:31 -> <init>
    6:6:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean):31 -> <init>
    7:7:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):32:32 -> <init>
    7:7:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean):32 -> <init>
    8:8:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):33:33 -> <init>
    8:8:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean):33 -> <init>
    9:9:boolean getVerbose():34:34 -> <init>
    9:9:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean):34 -> <init>
    10:27:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean):57:74 -> <init>
    28:28:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean):73:73 -> <init>
    29:29:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):33:33 -> <init>
    30:30:com.kotlinnlp.utils.Shuffler access$getShuffler$p(com.kotlinnlp.simplednn.helpers.Trainer):26:26 -> <init>
    30:30:void <init>(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):26 -> <init>
    1:6:void logTrainingStart(int):225:230 -> a
    7:16:void logValidationStart():249:258 -> a
    1:1:com.kotlinnlp.utils.Shuffler access$getShuffler$p(com.kotlinnlp.simplednn.helpers.Trainer):26:26 -> access$getShuffler$p
    1:4:java.util.Iterator buildExamplesIterator():141:144 -> buildExamplesIterator
    1:1:int getBatchSize():31:31 -> getBatchSize
    1:1:float getBestAccuracy():67:67 -> getBestAccuracy
    1:1:java.lang.String getModelFilename():27:27 -> getModelFilename
    1:1:java.util.List getOptimizers():28:28 -> getOptimizers
    1:1:boolean getVerbose():34:34 -> getVerbose
    1:82:void newBatch():207:288 -> newBatch
    83:83:void newBatch():208:208 -> newBatch
    1:89:void newEpoch():198:286 -> newEpoch
    90:90:void newEpoch():199:199 -> newEpoch
    1:75:void newExample():216:290 -> newExample
    76:76:void newExample():217:217 -> newExample
    1:200:void train():83:282 -> train
    201:208:void train():87:94 -> train
    1:14:void trainEpoch():120:133 -> trainEpoch
    15:146:void trainExample(java.lang.Object):153:284 -> trainEpoch
    15:146:void trainEpoch():133 -> trainEpoch
    147:147:void trainExample(java.lang.Object):158:158 -> trainEpoch
    147:147:void trainEpoch():133 -> trainEpoch
    1:5:void validateAndSaveModel():170:174 -> validateAndSaveModel
    6:14:void logValidationEnd(com.kotlinnlp.simplednn.helpers.Statistics):269:277 -> validateAndSaveModel
    6:14:void validateAndSaveModel():176 -> validateAndSaveModel
    15:23:void validateAndSaveModel():178:186 -> validateAndSaveModel
com.kotlinnlp.simplednn.helpers.Trainer$ShuffledExamplesIterator -> com.kotlinnlp.simplednn.helpers.a:
# {"id":"sourceFile","fileName":"Trainer.kt"}
    java.util.List examples -> a
    java.util.Iterator indicesIterator -> b
    1:6:void <init>(com.kotlinnlp.simplednn.helpers.Trainer,java.util.List):42:47 -> <init>
    1:1:boolean hasNext():51:51 -> hasNext
    1:1:java.lang.Object next():49:49 -> next
com.kotlinnlp.simplednn.simplemath.SimpleMathKt -> com.kotlinnlp.simplednn.simplemath.SimpleMathKt:
# {"id":"sourceFile","fileName":"SimpleMath.kt"}
    1:120:void assignSum(java.util.List,java.util.List):85:204 -> assignSum
    121:122:void assignSum(java.util.List,java.util.List):88:89 -> assignSum
    123:123:void assignSum(java.util.List,java.util.List):85:85 -> assignSum
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatVectorsV(java.util.List):195:195 -> concatVectorsV
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatVectorsV(java.util.List):56:56 -> concatVectorsV
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatVectorsV(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray[]):196:196 -> concatVectorsV
    4:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatVectorsV(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray[]):67:67 -> concatVectorsV
    7:137:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatVectorsV(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray[]):69:199 -> concatVectorsV
    138:264:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatVectorsV(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray[]):74:200 -> concatVectorsV
    265:265:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatVectorsV(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray[]):74:74 -> concatVectorsV
    1:3:java.util.List copy(java.util.List):206:208 -> copy
    4:116:java.util.List copy(java.util.List):96:208 -> copy
    1:5:float cosineSimilarity(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):110:114 -> cosineSimilarity
    6:6:float cosineSimilarity(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):110:110 -> cosineSimilarity
    1:1:boolean equals(float,float,float):0:0 -> equals
    2:147:boolean equals(float[],float[],float):47:192 -> equals
    148:148:boolean equals(float[],float[],float):47:47 -> equals
    1:1:boolean equals$default(float,float,float,int,java.lang.Object):28:28 -> equals$default
    2:2:boolean equals$default(float[],float[],float,int,java.lang.Object):46:46 -> equals$default
    1:61:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray exp(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):150:210 -> exp
    62:62:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray exp(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):152:152 -> exp
    1:1:float safeLog$default(float,float,int,java.lang.Object):165:165 -> safeLog
    1:1:float safeLog(float,float):165 -> safeLog
    1:1:float safeLog$default(float,float,int,java.lang.Object):165:165 -> safeLog$default
    1:3:float sedSimilarity(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):134:136 -> sedSimilarity
    4:5:float negShannonEntropy(float):189:189 -> sedSimilarity
    4:5:float complexityExp(float,float):177 -> sedSimilarity
    4:5:float sedSimilarity(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):136 -> sedSimilarity
    6:6:float sedSimilarity(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):138:138 -> sedSimilarity
    7:7:float sedSimilarity(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):134:134 -> sedSimilarity
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray -> com.kotlinnlp.simplednn.simplemath.ndarray.NDArray:
# {"id":"sourceFile","fileName":"NDArray.kt"}
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls -> com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls:
# {"id":"sourceFile","fileName":"NDArray.kt"}
    1:1:int argMaxIndex$default(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,int,int,java.lang.Object):464:464 -> argMaxIndex$default
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):243:243 -> assignDot
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignRoundInt$default(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float,int,java.lang.Object):491:491 -> assignRoundInt$default
    1:1:boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,java.lang.Object,float):530:530 -> equals
    1:1:boolean equals$default(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float,int,java.lang.Object):523:523 -> equals$default
    2:2:boolean equals$default(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,java.lang.Object,float,int,java.lang.Object):528:528 -> equals$default
    1:438:java.util.List getColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):117:554 -> getColumns
    439:877:java.util.List getColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):117:555 -> getColumns
    1:448:java.util.List getRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):103:550 -> getRows
    449:897:java.util.List getRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):103:551 -> getRows
    1:1:boolean isMatrix(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):33:33 -> isMatrix
    1:4:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):431:434 -> normalize
    1:4:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):451:454 -> normalize2
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray roundInt$default(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float,int,java.lang.Object):482:482 -> roundInt$default
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory -> com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory:
# {"id":"sourceFile","fileName":"NDArrayFactory.kt"}
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory$DefaultImpls -> com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory$DefaultImpls:
# {"id":"sourceFile","fileName":"NDArrayFactory.kt"}
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory,com.kotlinnlp.simplednn.simplemath.ndarray.Shape):40:40 -> ones
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random$default(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory,com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float,int,java.lang.Object):80:80 -> random$default
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask -> com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask:
# {"id":"sourceFile","fileName":"NDArrayMask.kt"}
    int[] dim1 -> a
    int[] dim2 -> b
    int size -> c
    1:10:void <init>(int[],int[]):16:25 -> <init>
    11:11:void <init>(int[],int[]):19:19 -> <init>
    1:1:int[] getDim1():16:16 -> getDim1
    1:1:int[] getDim2():16:16 -> getDim2
    1:1:int getSize():25:25 -> getSize
    1:1:java.util.Iterator iterator():58:58 -> iterator
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask$NDArrayMaskIterator -> f.a:
# {"id":"sourceFile","fileName":"NDArrayMask.kt"}
    int curIndex -> a
    com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask this$0 -> b
    1:1:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):30:30 -> <init>
    1:1:boolean hasNext():40:40 -> hasNext
    1:3:kotlin.Pair com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask$NDArrayMaskIterator.next():47:49 -> next
    1:3:java.lang.Object next():30 -> next
    void remove() -> remove
com.kotlinnlp.simplednn.simplemath.ndarray.Shape -> com.kotlinnlp.simplednn.simplemath.ndarray.Shape:
# {"id":"sourceFile","fileName":"Shape.kt"}
    int dim1 -> a
    int dim2 -> b
    1:2:void <init>(int,int):14:15 -> <init>
    3:4:void <init>(int,int,int,kotlinx.serialization.internal.SerializationConstructorMarker):14:14 -> <init>
    5:5:void <init>(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker):15:15 -> <init>
    1:1:boolean equals(java.lang.Object):37:37 -> equals
    1:1:int getDim1():15:15 -> getDim1
    1:1:int getDim2():15:15 -> getDim2
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.Shape getInverse():29:29 -> getInverse
    1:2:int hashCode():46:47 -> hashCode
    1:2:void write$Self(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor):14:14 -> write$Self
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$$serializer -> com.kotlinnlp.simplednn.simplemath.ndarray.Shape$$serializer:
# {"id":"sourceFile","fileName":"Shape.kt"}
    kotlinx.serialization.internal.PluginGeneratedSerialDescriptor descriptor -> a
    1:1:void <clinit>():14:14 -> <clinit>
    1:1:void <init>():14:14 -> <init>
    1:1:kotlinx.serialization.KSerializer[] childSerializers():14:14 -> childSerializers
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.Shape deserialize(kotlinx.serialization.encoding.Decoder):14:14 -> deserialize
    2:2:java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder):14:14 -> deserialize
    1:1:kotlinx.serialization.descriptors.SerialDescriptor getDescriptor():14:14 -> getDescriptor
    1:1:void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.simplemath.ndarray.Shape):14:14 -> serialize
    2:2:void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object):14:14 -> serialize
    1:1:kotlinx.serialization.KSerializer[] typeParametersSerializers():14:14 -> typeParametersSerializers
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$Companion -> com.kotlinnlp.simplednn.simplemath.ndarray.Shape$Companion:
# {"id":"sourceFile","fileName":"Shape.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():17:17 -> <init>
    1:1:kotlinx.serialization.KSerializer serializer():17:17 -> serializer
com.kotlinnlp.simplednn.simplemath.ndarray.TypeAliasesKt -> com.kotlinnlp.simplednn.simplemath.ndarray.TypeAliasesKt:
# {"id":"sourceFile","fileName":"TypeAliases.kt"}
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray -> com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray:
# {"id":"sourceFile","fileName":"DenseNDArray.kt"}
    org.jetbrains.kotlinx.multik.ndarray.data.NDArray storage -> a
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory factory -> b
    int lastIndex -> c
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> <init>
    1:1:void <init>(org.jetbrains.kotlinx.multik.ndarray.data.NDArray):46 -> <init>
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory getFactory():60:60 -> <init>
    2:2:void <init>(org.jetbrains.kotlinx.multik.ndarray.data.NDArray):60 -> <init>
    3:3:int getLastIndex():112:112 -> <init>
    3:3:void <init>(org.jetbrains.kotlinx.multik.ndarray.data.NDArray):112 -> <init>
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> abs
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray abs():46 -> abs
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray abs():1016:1016 -> abs
    1:497:int argMaxIndex(int):1228:1724 -> argMaxIndex
    498:501:int argMaxIndex(int):1232:1235 -> argMaxIndex
    502:972:int argMaxIndex(java.util.Set):1256:1726 -> argMaxIndex
    973:978:int argMaxIndex(java.util.Set):1258:1263 -> argMaxIndex
    1:8:int[] argSorted(boolean):1494:1501 -> argSorted
    9:9:int com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray$IndexedFloatValue.getIndex():1507:1507 -> argSorted
    9:9:int[] argSorted(boolean):1501 -> argSorted
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:10:int[] argSorted(boolean):1501:1501 -> argSorted
    11:11:int[] argSorted(boolean):1494:1494 -> argSorted
    1:1:int[] argSorted$default(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,boolean,int,java.lang.Object):1492:1492 -> argSorted$default
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignDiv
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(float):46 -> assignDiv
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignDiv
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> assignDiv
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDiv(float):985:985 -> assignDiv
    4:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):993:994 -> assignDiv
    6:6:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):993:993 -> assignDiv
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignDot
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> assignDot
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignDot
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> assignDot
    3:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):691:692 -> assignDot
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):691:691 -> assignDot
    6:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):702:704 -> assignDot
    9:27:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):714:732 -> assignDot
    9:27:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):704 -> assignDot
    28:28:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):714:714 -> assignDot
    28:28:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):704 -> assignDot
    29:29:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):703:703 -> assignDot
    1:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDotLeftMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):749:755 -> assignDotLeftMasked
    8:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDotLeftMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):749:749 -> assignDotLeftMasked
    1:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDotRightMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):773:779 -> assignDotRightMasked
    8:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDotRightMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):773:773 -> assignDotRightMasked
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignExp
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignExp():46 -> assignExp
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignExp():1119:1119 -> assignExp
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignLn
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLn():46 -> assignLn
    2:556:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignLn():1168:1722 -> assignLn
    557:558:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignLn():1168:1168 -> assignLn
    560:560:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignLn():1170:1170 -> assignLn
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignLog10
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLog10():46 -> assignLog10
    2:576:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignLog10():1142:1716 -> assignLog10
    577:578:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignLog10():1142:1142 -> assignLog10
    580:580:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignLog10():1144:1144 -> assignLog10
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignPow
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignPow(float):46 -> assignPow
    2:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignPow(float):1100:1102 -> assignPow
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignProd
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float):46 -> assignProd
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignProd
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):46 -> assignProd
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignProd
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> assignProd
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignProd
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float):46 -> assignProd
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignProd
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> assignProd
    6:6:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(float):848:848 -> assignProd
    7:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):857:858 -> assignProd
    9:9:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,float):868:868 -> assignProd
    10:10:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):876:876 -> assignProd
    11:11:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):884:884 -> assignProd
    12:14:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):894:896 -> assignProd
    12:14:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):884 -> assignProd
    15:819:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):894:1698 -> assignProd
    15:819:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):884 -> assignProd
    820:827:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):906:913 -> assignProd
    820:827:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):884 -> assignProd
    828:828:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):885:885 -> assignProd
    829:831:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):1700:1702 -> assignProd
    829:831:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):885 -> assignProd
    832:1607:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):927:1702 -> assignProd
    832:1607:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):885 -> assignProd
    1608:2381:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):931:1704 -> assignProd
    1608:2381:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):885 -> assignProd
    2382:2382:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):933:933 -> assignProd
    2382:2382:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):885 -> assignProd
    2383:2383:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):886:886 -> assignProd
    2384:2386:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):1706:1708 -> assignProd
    2384:2386:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):886 -> assignProd
    2387:3152:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):943:1708 -> assignProd
    2387:3152:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):886 -> assignProd
    3153:3918:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):945:1710 -> assignProd
    3153:3918:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):886 -> assignProd
    3919:3919:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):947:947 -> assignProd
    3919:3919:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):886 -> assignProd
    3920:3920:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):887:887 -> assignProd
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignRoundInt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignRoundInt(float):46 -> assignRoundInt
    2:428:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignRoundInt(float):1304:1730 -> assignRoundInt
    429:432:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignRoundInt(float):1306:1309 -> assignRoundInt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignSqrt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSqrt():46 -> assignSqrt
    2:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSqrt():1058:1060 -> assignSqrt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignSub
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(float):46 -> assignSub
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignSub
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> assignSub
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(float):548:548 -> assignSub
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):554:554 -> assignSub
    5:6:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):563:564 -> assignSub
    7:9:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):576:578 -> assignSub
    7:9:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):564 -> assignSub
    1117:1117:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):1686:1686 -> assignSub
    1117:1117:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):564 -> assignSub
    1118:1118:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):579:579 -> assignSub
    1118:1118:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):564 -> assignSub
    1119:1119:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):576:576 -> assignSub
    1119:1119:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):564 -> assignSub
    1120:1121:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):565:565 -> assignSub
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignSum
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(float):46 -> assignSum
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignSum
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> assignSum
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignSum
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float):46 -> assignSum
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignSum
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> assignSum
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(float):432:432 -> assignSum
    6:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):438:439 -> assignSum
    1204:1204:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1636:1636 -> assignSum
    1205:1211:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):441:447 -> assignSum
    1212:1213:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):456:457 -> assignSum
    1214:1214:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):469:469 -> assignSum
    1214:1214:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):457 -> assignSum
    2383:2383:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):1638:1638 -> assignSum
    2383:2383:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):457 -> assignSum
    2384:2384:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):470:470 -> assignSum
    2384:2384:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):457 -> assignSum
    2385:2386:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):458:458 -> assignSum
    2387:2387:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,float):480:480 -> assignSum
    2388:2388:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):488:488 -> assignSum
    1:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):512:518 -> assignSumByColumns
    1152:1166:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1663:1677 -> assignSumByColumns
    1167:1169:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1677:1679 -> assignSumByColumns
    1170:1170:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):519:519 -> assignSumByColumns
    2333:2333:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1682:1682 -> assignSumByColumns
    2334:2334:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):516:516 -> assignSumByColumns
    3491:3491:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1673:1673 -> assignSumByColumns
    1:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):496:502 -> assignSumByRows
    1145:1159:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1640:1654 -> assignSumByRows
    1160:1162:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1654:1656 -> assignSumByRows
    1163:1163:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):503:503 -> assignSumByRows
    2319:2319:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1659:1659 -> assignSumByRows
    2320:2320:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):500:500 -> assignSumByRows
    3470:3470:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1650:1650 -> assignSumByRows
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignValues
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(float):46 -> assignValues
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignValues
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> assignValues
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> assignValues
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):46 -> assignValues
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(float):240:240 -> assignValues
    1335:1344:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(float):1571:1580 -> assignValues
    1345:1345:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(float):1571:1571 -> assignValues
    1346:1346:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(float):240:240 -> assignValues
    2687:2687:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(float):1581:1581 -> assignValues
    2688:2692:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):253:257 -> assignValues
    2693:2693:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):271:271 -> assignValues
    2693:2693:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):257 -> assignValues
    4005:4005:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1583:1583 -> assignValues
    4005:4005:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):257 -> assignValues
    4006:4010:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):273:277 -> assignValues
    4006:4010:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):257 -> assignValues
    4011:4011:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):258:258 -> assignValues
    4012:4014:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):288:290 -> assignValues
    4012:4014:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):258 -> assignValues
    5309:5309:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):1585:1585 -> assignValues
    5309:5309:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):258 -> assignValues
    5310:5310:void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):291:291 -> assignValues
    5310:5310:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):258 -> assignValues
    5311:5312:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):259:259 -> assignValues
    5313:5316:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):300:303 -> assignValues
    5317:5320:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):316:319 -> assignValues
    5317:5320:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):303 -> assignValues
    5321:5321:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):304:304 -> assignValues
    5322:5327:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):330:335 -> assignValues
    5322:5327:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):304 -> assignValues
    5328:5328:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):330:330 -> assignValues
    5328:5328:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):304 -> assignValues
    5329:5330:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):305:305 -> assignValues
    5331:5331:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):300:300 -> assignValues
    1:1:float avg():1001:1001 -> avg
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> concatH
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> concatH
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1341:1341 -> concatH
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> concatV
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> concatV
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1346:1346 -> concatV
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> copy
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray copy():46 -> copy
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray copy():234:234 -> copy
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> div
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(float):46 -> div
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> div
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> div
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray div(float):955:955 -> div
    4:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):961:964 -> div
    8:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):962:962 -> div
    9:15:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):971:977 -> div
    16:16:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):973:973 -> div
    17:17:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):971:971 -> div
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):648:648 -> dot
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):657:657 -> dot
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):648 -> dot
    3:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):649:650 -> dot
    5:23:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):663:681 -> dot
    5:23:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):650 -> dot
    24:24:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):663:663 -> dot
    24:24:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):650 -> dot
    25:25:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):651:651 -> dot
    26:26:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):649:649 -> dot
    1:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dotLeftMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):631:635 -> dotLeftMasked
    1062:1063:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dotLeftMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):1692:1693 -> dotLeftMasked
    1064:1065:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dotLeftMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):636:637 -> dotLeftMasked
    1066:1066:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dotLeftMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):631:631 -> dotLeftMasked
    1:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dotRightMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):608:612 -> dotRightMasked
    1081:1082:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dotRightMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):1688:1689 -> dotRightMasked
    1083:1084:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dotRightMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):613:614 -> dotRightMasked
    1085:1085:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dotRightMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):608:608 -> dotRightMasked
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> equals
    1:1:boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float):46 -> equals
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> equals
    2:2:boolean equals(java.lang.Object,float):46 -> equals
    3:284:boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,float):1452:1733 -> equals
    285:285:boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,float):1454:1454 -> equals
    286:286:boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,float):1452:1452 -> equals
    287:287:boolean equals(java.lang.Object):1465:1465 -> equals
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> exp
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray exp():46 -> exp
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray exp():1111:1111 -> exp
    1:1:float expectScalar():1328:1328 -> expectScalar
    1:8:void fromVector(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1433:1440 -> fromVector
    9:9:void fromVector(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1434:1434 -> fromVector
    10:10:void fromVector(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1433:1433 -> fromVector
    1:3:kotlin.Triple fullSVD():1198:1200 -> fullSVD
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> get
    1:1:java.lang.Number get(int):46 -> get
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> get
    2:2:java.lang.Number get(int,int):46 -> get
    3:3:java.lang.Float get(int):127:127 -> get
    4:4:java.lang.Float get(int,int):132:132 -> get
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> getColumn
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getColumn(int):46 -> getColumn
    2:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getColumn(int):168:169 -> getColumn
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> getColumns
    1:1:java.util.List getColumns():46 -> getColumns
    2:2:int getColumns():73:73 -> getColumns
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> getFactory
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory getFactory():46 -> getFactory
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory getFactory():60:60 -> getFactory
    1:1:int getLastIndex():112:112 -> getLastIndex
    1:1:int getLength():107:107 -> getLength
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> getRange
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRange(int,int):46 -> getRange
    2:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRange(int,int):181:183 -> getRange
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRange(int,int):181:181 -> getRange
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> getRow
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRow(int):46 -> getRow
    2:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRow(int):156:157 -> getRow
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> getRows
    1:1:java.util.List getRows():46 -> getRows
    2:2:int getRows():67:67 -> getRows
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.Shape getShape():117:117 -> getShape
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> getStorage
    1:1:org.jetbrains.kotlinx.multik.ndarray.data.NDArray getStorage():46 -> getStorage
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> getT
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getT():46 -> getT
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getT():122:122 -> getT
    1:1:int hashCode():1470:1470 -> hashCode
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> isMatrix
    1:1:boolean isMatrix():46 -> isMatrix
    1:4:boolean isOneHotEncoder():88:91 -> isOneHotEncoder
    1428:1428:boolean isOneHotEncoder():1515:1515 -> isOneHotEncoder
    1429:1429:boolean isOneHotEncoder():93:93 -> isOneHotEncoder
    1:1:boolean isVector():79:79 -> isVector
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> ln
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ln():46 -> ln
    2:565:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ln():1156:1719 -> ln
    566:567:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ln():1156:1156 -> ln
    569:569:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ln():1158:1158 -> ln
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> log10
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray log10():46 -> log10
    2:585:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray log10():1130:1713 -> log10
    586:587:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray log10():1130:1130 -> log10
    589:589:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray log10():1132:1132 -> log10
    1:5:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray maskBy(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):1475:1479 -> maskBy
    6:6:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray maskBy(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):1475:1475 -> maskBy
    1:1:float max():1006:1006 -> max
    1:1:float min():1011:1011 -> min
    1:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray nonZeroSign():1037:1040 -> nonZeroSign
    1:1:float norm():1180:1180 -> norm
    1:1:float norm2():1188:1188 -> norm2
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> normalize
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize():46 -> normalize
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> normalize
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray normalize():46 -> normalize
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> normalize2
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> normalize2
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray normalize2():46 -> normalize2
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ones():217:217 -> ones
    1319:1328:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ones():1535:1544 -> ones
    1329:1329:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ones():1535:1535 -> ones
    1330:1330:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ones():217:217 -> ones
    2658:2658:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ones():1545:1545 -> ones
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray onesLike():229:229 -> onesLike
    1331:1340:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray onesLike():1559:1568 -> onesLike
    1341:1341:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray onesLike():1559:1559 -> onesLike
    1342:1342:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray onesLike():229:229 -> onesLike
    2682:2682:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray onesLike():1569:1569 -> onesLike
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> pow
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray pow(float):46 -> pow
    2:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray pow(float):1086:1089 -> pow
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> prod
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(float):46 -> prod
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> prod
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> prod
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray prod(float):789:789 -> prod
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):795:795 -> prod
    5:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):810:812 -> prod
    5:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):795 -> prod
    8:894:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):810:1696 -> prod
    8:894:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):795 -> prod
    895:899:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):822:826 -> prod
    895:899:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):795 -> prod
    900:902:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):796:798 -> prod
    903:903:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):796:796 -> prod
    904:906:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):839:841 -> prod
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> randomize
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator):46 -> randomize
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator):1334:1334 -> randomize
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> reverseSub
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray reverseSub(float):46 -> reverseSub
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray reverseSub(float):595:595 -> reverseSub
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> roundInt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray roundInt(float):46 -> roundInt
    2:449:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray roundInt(float):1281:1728 -> roundInt
    450:453:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray roundInt(float):1285:1288 -> roundInt
    1:1:void set(int,java.lang.Number):138:138 -> set
    2:2:void set(int,int,java.lang.Number):145:145 -> set
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> setStorage
    1:1:void setStorage(org.jetbrains.kotlinx.multik.ndarray.data.NDArray):46 -> setStorage
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> sign
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sign():46 -> sign
    2:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sign():1024:1027 -> sign
    1:1:kotlin.Triple sparseSVD():1212:1212 -> sparseSVD
    1:2:java.util.List splitV(int[]):1359:1360 -> splitV
    3:8:java.util.List splitVSingleSegment(int):1373:1378 -> splitV
    3:8:java.util.List splitV(int[]):1360 -> splitV
    9:13:java.util.List splitVSingleSegment(int):1377:1381 -> splitV
    9:13:java.util.List splitV(int[]):1360 -> splitV
    14:14:java.util.List splitVSingleSegment(int):1377:1377 -> splitV
    14:14:java.util.List splitV(int[]):1360 -> splitV
    15:15:java.util.List splitVSingleSegment(int):1373:1373 -> splitV
    15:15:java.util.List splitV(int[]):1360 -> splitV
    16:23:java.util.List splitVMultipleSegments(int[]):1395:1402 -> splitV
    16:23:java.util.List splitV(int[]):1362 -> splitV
    24:29:java.util.List splitVMultipleSegments(int[]):1401:1406 -> splitV
    24:29:java.util.List splitV(int[]):1362 -> splitV
    30:30:java.util.List splitVMultipleSegments(int[]):1401:1401 -> splitV
    30:30:java.util.List splitV(int[]):1362 -> splitV
    31:31:java.util.List splitVMultipleSegments(int[]):1395:1395 -> splitV
    31:31:java.util.List splitV(int[]):1362 -> splitV
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> sqrt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sqrt():46 -> sqrt
    2:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sqrt():1047:1050 -> sqrt
    6:8:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sqrt(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):1073:1075 -> sqrt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> sub
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(float):46 -> sub
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> sub
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> sub
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sub(float):527:527 -> sub
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):533:533 -> sub
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):542:542 -> sub
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):533 -> sub
    6:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):534:536 -> sub
    9:9:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):534:534 -> sub
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> sum
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(float):46 -> sum
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> sum
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):46 -> sum
    3:3:float sum():344:344 -> sum
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sum(float):349:349 -> sum
    5:6:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):355:356 -> sum
    7:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):469:469 -> sum
    7:7:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):356 -> sum
    1176:1176:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):1638:1638 -> sum
    1176:1176:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):356 -> sum
    1177:1177:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):470:470 -> sum
    1177:1177:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):356 -> sum
    1178:1179:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):357:358 -> sum
    1180:1181:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):365:366 -> sum
    2403:2403:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1588:1588 -> sum
    2404:2408:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):368:372 -> sum
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):406:406 -> sumByColumns
    2:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):417:423 -> sumByColumns
    2:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):406 -> sumByColumns
    1198:1214:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1613:1629 -> sumByColumns
    1198:1214:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):406 -> sumByColumns
    1215:1215:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):424:424 -> sumByColumns
    1215:1215:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):406 -> sumByColumns
    2423:2423:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1632:1632 -> sumByColumns
    2423:2423:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):406 -> sumByColumns
    2424:2424:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):421:421 -> sumByColumns
    2424:2424:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):406 -> sumByColumns
    3626:3626:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1623:1623 -> sumByColumns
    3626:3626:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):406 -> sumByColumns
    3627:3629:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):407:409 -> sumByColumns
    3630:3630:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):407:407 -> sumByColumns
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):380:380 -> sumByRows
    2:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):391:397 -> sumByRows
    2:8:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):380 -> sumByRows
    1201:1217:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1590:1606 -> sumByRows
    1201:1217:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):380 -> sumByRows
    1218:1218:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):398:398 -> sumByRows
    1218:1218:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):380 -> sumByRows
    2429:2429:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1609:1609 -> sumByRows
    2429:2429:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):380 -> sumByRows
    2430:2430:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):395:395 -> sumByRows
    2430:2430:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):380 -> sumByRows
    3635:3635:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1600:1600 -> sumByRows
    3635:3635:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):380 -> sumByRows
    3636:3638:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):381:383 -> sumByRows
    3639:3639:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):381:381 -> sumByRows
    1:1:float[] toFloatArray():1485:1485 -> toFloatArray
    1:1:java.lang.Float toScalar():1323:1323 -> toScalar
    1:1:java.lang.String toString():1460:1460 -> toString
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray unaryMinus():1318:1318 -> unaryMinus
    1:8:void vectorize(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1416:1423 -> vectorize
    9:9:void vectorize(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1417:1417 -> vectorize
    10:10:void vectorize(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):1416:1416 -> vectorize
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> zeros
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros():46 -> zeros
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zeros():209:209 -> zeros
    1316:1325:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zeros():1523:1532 -> zeros
    1326:1326:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zeros():1523:1523 -> zeros
    1327:1327:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zeros():209:209 -> zeros
    2651:2651:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zeros():1533:1533 -> zeros
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():46:46 -> zerosLike
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zerosLike():46 -> zerosLike
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zerosLike():224:224 -> zerosLike
    1325:1334:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zerosLike():1547:1556 -> zerosLike
    1335:1335:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zerosLike():1547:1547 -> zerosLike
    1336:1336:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zerosLike():224:224 -> zerosLike
    2669:2669:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zerosLike():1557:1557 -> zerosLike
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray$Companion -> com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray$Companion:
# {"id":"sourceFile","fileName":"DenseNDArray.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():48:48 -> <init>
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray$IndexedFloatValue -> g.a:
# {"id":"sourceFile","fileName":"DenseNDArray.kt"}
    int index -> a
    float value -> b
    1:1:void <init>(int,float):1507:1507 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FI)V"}
    1:2:int compareTo(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray$IndexedFloatValue):1509:1510 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)I"}
    1:1:int compareTo(java.lang.Object):1507:1507 -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray$isOneHotEncoder$1 -> g.b:
# {"id":"sourceFile","fileName":"DenseNDArray.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray this$0 -> a
    void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray) -> <init>
    1:1:java.lang.Object invoke(java.lang.Object):91:91 -> invoke
    2:2:java.lang.Boolean com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray$isOneHotEncoder$1.invoke(int):91:91 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):91 -> invoke
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory -> com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory:
# {"id":"sourceFile","fileName":"DenseNDArrayFactory.kt"}
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):28:28 -> <init>
    1:1:void <init>():28 -> <init>
    1:185:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray arrayOf(float[]):143:327 -> arrayOf
    186:186:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray arrayOf(float[]):318:318 -> arrayOf
    187:372:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray arrayOf(float[]):145:330 -> arrayOf
    373:556:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray arrayOf(float[]):145:328 -> arrayOf
    557:741:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray arrayOf(java.util.List):157:341 -> arrayOf
    742:742:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray arrayOf(java.util.List):332:332 -> arrayOf
    743:926:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray arrayOf(java.util.List):161:344 -> arrayOf
    927:1106:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray arrayOf(java.util.List):163:342 -> arrayOf
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):28:28 -> emptyArray
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):28 -> emptyArray
    2:222:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):42:262 -> emptyArray
    223:223:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):253:253 -> emptyArray
    224:445:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):42:263 -> emptyArray
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):28:28 -> eye
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray eye(int):28 -> eye
    2:207:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray eye(int):72:277 -> eye
    208:208:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray eye(int):73:73 -> eye
    209:411:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray eye(int,org.jetbrains.kotlinx.multik.ndarray.data.NDArray):77:279 -> eye
    412:412:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray eye(int,org.jetbrains.kotlinx.multik.ndarray.data.NDArray):78:78 -> eye
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):28:28 -> fill
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float):28 -> fill
    2:204:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float):88:290 -> fill
    205:205:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float):281:281 -> fill
    206:408:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float):89:291 -> fill
    1:173:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromColumns(java.util.List):201:373 -> fromColumns
    174:187:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromColumns(java.util.List):364:377 -> fromColumns
    188:189:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromColumns(java.util.List):205:205 -> fromColumns
    191:363:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromColumns(java.util.List):207:379 -> fromColumns
    364:529:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromColumns(java.util.List):209:374 -> fromColumns
    1:156:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromNDArray(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):226:381 -> fromNDArray
    157:310:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromNDArray(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):230:383 -> fromNDArray
    311:315:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromNDArray(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):236:240 -> fromNDArray
    1:178:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromRows(java.util.List):178:355 -> fromRows
    179:192:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromRows(java.util.List):346:359 -> fromRows
    193:194:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromRows(java.util.List):182:182 -> fromRows
    196:374:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromRows(java.util.List):184:362 -> fromRows
    375:545:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromRows(java.util.List):186:356 -> fromRows
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):28:28 -> oneHotEncoder
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray oneHotEncoder(int,int):28 -> oneHotEncoder
    2:4:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray oneHotEncoder(int,int):104:106 -> oneHotEncoder
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray oneHotEncoder(int,int):102:102 -> oneHotEncoder
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):28:28 -> ones
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):28 -> ones
    2:214:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):62:274 -> ones
    215:215:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):265:265 -> ones
    216:429:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):62:275 -> ones
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):28:28 -> random
    2:187:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):122:307 -> random
    188:196:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):307:315 -> random
    197:197:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):314:314 -> random
    198:198:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):313:313 -> random
    199:199:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):312:312 -> random
    200:200:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):311:311 -> random
    201:208:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):310:317 -> random
    209:386:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):126:303 -> random
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray scalarOf(float):250:250 -> scalarOf
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):28:28 -> zeros
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):28 -> zeros
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):52:52 -> zeros
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$1 -> com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$1:
# {"id":"sourceFile","fileName":"random.kt"}
    1:1:java.lang.Integer invoke():201:201 -> invoke
    2:2:java.lang.Object invoke():201:201 -> invoke
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$1$wm$RandomKt$WhenMappings -> com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$1$wm$RandomKt$WhenMappings:
# {"id":"sourceFile","fileName":"random.kt"}
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$2 -> com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$2:
# {"id":"sourceFile","fileName":"random.kt"}
    1:1:java.lang.Object invoke():202:202 -> invoke
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$3 -> com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$3:
# {"id":"sourceFile","fileName":"random.kt"}
    1:1:java.lang.Object invoke():203:203 -> invoke
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$4 -> com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$4:
# {"id":"sourceFile","fileName":"random.kt"}
    1:1:java.lang.Object invoke():204:204 -> invoke
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$5 -> com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$5:
# {"id":"sourceFile","fileName":"random.kt"}
    kotlin.jvm.functions.Function0 $frand -> a
    1:1:java.lang.Number invoke(int):40:40 -> invoke
    2:2:java.lang.Object invoke(java.lang.Object):40:40 -> invoke
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray -> com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray:
# {"id":"sourceFile","fileName":"SparseNDArray.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.Shape shape -> a
    float[] values -> b
    int[] rowIndices -> c
    int[] colIndices -> d
    com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory factory -> e
    int rows -> f
    int columns -> g
    int length -> h
    int lastIndex -> i
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):21 -> <init>
    2:2:float[] getValues():86:86 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):86 -> <init>
    3:3:int[] getRowIndices():92:92 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):92 -> <init>
    4:4:int[] getColIndices():98:98 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):98 -> <init>
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory getFactory():104:104 -> <init>
    5:5:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):104 -> <init>
    6:6:int getRows():121:121 -> <init>
    6:6:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):121 -> <init>
    7:7:int getColumns():126:126 -> <init>
    7:7:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):126 -> <init>
    8:8:int getLength():131:131 -> <init>
    8:8:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):131 -> <init>
    9:9:int getLastIndex():136:136 -> <init>
    9:9:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):136 -> <init>
    1:4:int compareArrays(int,int):1116:1119 -> a
    1:4:int partition(int,int):1099 -> a
    1:4:void quicksort(int,int):1085 -> a
    5:71:int partition(int,int):1101:1167 -> a
    5:71:void quicksort(int,int):1085 -> a
    72:75:int compareArrays(int,int):1116:1119 -> a
    72:75:int partition(int,int):1102 -> a
    72:75:void quicksort(int,int):1085 -> a
    76:76:void swapArrays(int,int):1127:1127 -> a
    76:76:int partition(int,int):1103 -> a
    76:76:void quicksort(int,int):1085 -> a
    77:79:void swapArray(float[],int,int):1146:1148 -> a
    77:79:void swapArrays(int,int):1127 -> a
    77:79:int partition(int,int):1103 -> a
    77:79:void quicksort(int,int):1085 -> a
    80:80:void swapArrays(int,int):1128:1128 -> a
    80:80:int partition(int,int):1103 -> a
    80:80:void quicksort(int,int):1085 -> a
    81:83:void swapArray(int[],int,int):1137:1139 -> a
    81:83:void swapArrays(int,int):1128 -> a
    81:83:int partition(int,int):1103 -> a
    81:83:void quicksort(int,int):1085 -> a
    84:86:void swapArray(int[],int,int):1137:1139 -> a
    84:86:void swapArrays(int,int):1129 -> a
    84:86:int partition(int,int):1103 -> a
    84:86:void quicksort(int,int):1085 -> a
    87:87:void swapArrays(int,int):1127:1127 -> a
    87:87:int partition(int,int):1107 -> a
    87:87:void quicksort(int,int):1085 -> a
    88:90:void swapArray(float[],int,int):1146:1148 -> a
    88:90:void swapArrays(int,int):1127 -> a
    88:90:int partition(int,int):1107 -> a
    88:90:void quicksort(int,int):1085 -> a
    91:91:void swapArrays(int,int):1128:1128 -> a
    91:91:int partition(int,int):1107 -> a
    91:91:void quicksort(int,int):1085 -> a
    92:94:void swapArray(int[],int,int):1137:1139 -> a
    92:94:void swapArrays(int,int):1128 -> a
    92:94:int partition(int,int):1107 -> a
    92:94:void quicksort(int,int):1085 -> a
    95:95:void swapArrays(int,int):1129:1129 -> a
    95:95:int partition(int,int):1107 -> a
    95:95:void quicksort(int,int):1085 -> a
    96:98:void swapArray(int[],int,int):1137:1139 -> a
    96:98:void swapArrays(int,int):1129 -> a
    96:98:int partition(int,int):1107 -> a
    96:98:void quicksort(int,int):1085 -> a
    99:100:void quicksort(int,int):1086:1087 -> a
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> abs
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray abs():21 -> abs
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray abs():818:818 -> abs
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> access$setColIndices$p
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> access$setRowIndices$p
    1:1:void access$setRowIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21 -> access$setRowIndices$p
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> access$setValues$p
    1:1:void access$setValues$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,float[]):21 -> access$setValues$p
    1:1:int argMaxIndex(int):967:967 -> argMaxIndex
    2:2:int argMaxIndex(java.util.Set):978:978 -> argMaxIndex
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignDiv
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(float):21 -> assignDiv
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignDiv
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> assignDiv
    3:375:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDiv(float):793:1165 -> assignDiv
    376:376:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDiv(float):794:794 -> assignDiv
    377:377:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):804:804 -> assignDiv
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignDot
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> assignDot
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignDot
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> assignDot
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):539:539 -> assignDot
    4:6:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):548:550 -> assignDot
    7:46:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):581:620 -> assignDot
    7:46:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):550 -> assignDot
    47:47:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):583:583 -> assignDot
    47:47:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):550 -> assignDot
    48:48:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):582:582 -> assignDot
    48:48:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):550 -> assignDot
    49:49:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):581:581 -> assignDot
    49:49:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):550 -> assignDot
    50:50:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):549:549 -> assignDot
    51:51:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):548:548 -> assignDot
    52:62:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):561:571 -> assignDot
    63:63:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):562:562 -> assignDot
    64:64:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):561:561 -> assignDot
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignExp
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignExp():21 -> assignExp
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignExp():892:892 -> assignExp
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignLn
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLn():21 -> assignLn
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignLn():928:928 -> assignLn
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignLog10
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLog10():21 -> assignLog10
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignLog10():910:910 -> assignLog10
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignPow
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignPow(float):21 -> assignPow
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignPow(float):874:874 -> assignPow
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignProd
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float):21 -> assignProd
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignProd
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):21 -> assignProd
    3:3:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignProd
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> assignProd
    4:4:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignProd
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float):21 -> assignProd
    5:5:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignProd
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> assignProd
    6:463:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(float):704:1161 -> assignProd
    464:464:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(float):705:705 -> assignProd
    465:465:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):715:715 -> assignProd
    466:466:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,float):722:722 -> assignProd
    467:467:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):729:729 -> assignProd
    468:469:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):736:737 -> assignProd
    470:886:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):747:1163 -> assignProd
    470:886:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):737 -> assignProd
    887:887:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):751:751 -> assignProd
    887:887:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):737 -> assignProd
    888:888:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):748:748 -> assignProd
    888:888:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):737 -> assignProd
    889:889:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):747:747 -> assignProd
    889:889:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):737 -> assignProd
    890:891:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):738:739 -> assignProd
    892:892:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):736:736 -> assignProd
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignRoundInt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignRoundInt(float):21 -> assignRoundInt
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignRoundInt(float):1000:1000 -> assignRoundInt
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignSqrt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSqrt():21 -> assignSqrt
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSqrt():841:841 -> assignSqrt
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignSub
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(float):21 -> assignSub
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignSub
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> assignSub
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSub(float):488:488 -> assignSub
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):495:495 -> assignSub
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignSum
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(float):21 -> assignSum
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignSum
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> assignSum
    3:3:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignSum
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float):21 -> assignSum
    4:4:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignSum
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> assignSum
    5:780:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(float):382:1157 -> assignSum
    781:781:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(float):383:383 -> assignSum
    782:783:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):393:394 -> assignSum
    784:795:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):410:421 -> assignSum
    784:795:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):394 -> assignSum
    796:796:int assignSum$getLinearIndex(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int):413:413 -> assignSum
    796:796:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):428 -> assignSum
    796:796:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):394 -> assignSum
    797:812:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):433:448 -> assignSum
    797:812:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):394 -> assignSum
    813:813:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):410:410 -> assignSum
    813:813:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):394 -> assignSum
    814:815:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):395:396 -> assignSum
    816:816:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):393:393 -> assignSum
    817:817:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,float):457:457 -> assignSum
    818:818:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):464:464 -> assignSum
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignValues
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(float):21 -> assignValues
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignValues
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> assignValues
    3:3:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> assignValues
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):21 -> assignValues
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(float):277:277 -> assignValues
    5:9:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):284:288 -> assignValues
    10:12:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):299:301 -> assignValues
    10:12:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):288 -> assignValues
    13:14:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):289:290 -> assignValues
    15:15:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):287:287 -> assignValues
    16:16:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):284:284 -> assignValues
    17:17:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):324:324 -> assignValues
    18:22:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):335:339 -> assignValues
    18:22:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):324 -> assignValues
    23:23:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):335:335 -> assignValues
    23:23:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):324 -> assignValues
    24:26:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):325:327 -> assignValues
    27:27:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):325:325 -> assignValues
    28:28:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(float[],int[],int[]):1152:1152 -> assignValues
    29:30:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(float[],int[],int[]):310:310 -> assignValues
    875:875:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(float[],int[],int[]):1155:1155 -> assignValues
    876:877:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(float[],int[],int[]):311:311 -> assignValues
    879:881:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(float[],int[],int[]):313:315 -> assignValues
    1:1:float avg():811:811 -> avg
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> concatH
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> concatH
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):1014:1014 -> concatH
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> concatV
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> concatV
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):1021:1021 -> concatV
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> copy
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray copy():21 -> copy
    2:6:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray copy():266:270 -> copy
    7:7:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray copy():266:266 -> copy
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> div
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(float):21 -> div
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> div
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> div
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(float):761:761 -> div
    4:11:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):768:775 -> div
    12:12:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):771:771 -> div
    13:13:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):769:769 -> div
    14:14:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):768:768 -> div
    15:18:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):782:785 -> div
    19:19:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):782:782 -> div
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):509:509 -> dot
    2:642:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):519:1159 -> dot
    2:642:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):509 -> dot
    643:646:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):525:528 -> dot
    643:646:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):509 -> dot
    647:647:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):519:519 -> dot
    647:647:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):509 -> dot
    648:650:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):510:512 -> dot
    651:651:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):510:510 -> dot
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> equals
    1:1:boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float):21 -> equals
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> equals
    2:2:boolean equals(java.lang.Object,float):21 -> equals
    3:3:boolean equals(java.lang.Object):1061:1061 -> equals
    4:5:void sortValues():1074:1075 -> equals
    4:5:boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,float):1043 -> equals
    6:6:void sortValues():1074:1074 -> equals
    6:6:boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,float):1044 -> equals
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:8:void sortValues():1074:1075 -> equals
    7:8:boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,float):1044 -> equals
    9:11:boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,float):1046:1048 -> equals
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> exp
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray exp():21 -> exp
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray exp():883:883 -> exp
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> get
    1:1:java.lang.Number get(int):21 -> get
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> get
    2:2:java.lang.Number get(int,int):21 -> get
    3:3:java.lang.Float get(int):157:157 -> get
    4:4:java.lang.Float get(int,int):164:164 -> get
    1:1:int[] getColIndices():98:98 -> getColIndices
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> getColumn
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getColumn(int):21 -> getColumn
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray getColumn(int):231:231 -> getColumn
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> getColumns
    1:1:java.util.List getColumns():21 -> getColumns
    2:2:int getColumns():126:126 -> getColumns
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> getFactory
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory getFactory():21 -> getFactory
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory getFactory():104:104 -> getFactory
    1:1:int getLastIndex():136:136 -> getLastIndex
    1:1:int getLength():131:131 -> getLength
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask getMask():151:151 -> getMask
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> getRange
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRange(int,int):21 -> getRange
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray getRange(int,int):243:243 -> getRange
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> getRow
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRow(int):21 -> getRow
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray getRow(int):220:220 -> getRow
    1:1:int[] getRowIndices():92:92 -> getRowIndices
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> getRows
    1:1:java.util.List getRows():21 -> getRows
    2:2:int getRows():121:121 -> getRows
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> getShape
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.Shape getShape():21 -> getShape
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> getT
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getT():21 -> getT
    2:6:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray getT():141:145 -> getT
    7:7:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray getT():141:141 -> getT
    1:1:float[] getValues():86:86 -> getValues
    1:1:int hashCode():1067:1067 -> hashCode
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> isMatrix
    1:1:boolean isMatrix():21 -> isMatrix
    1:1:boolean isOneHotEncoder():116:116 -> isOneHotEncoder
    1:1:boolean isVector():110:110 -> isVector
    1:1:java.util.Iterator iterator():81:81 -> iterator
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> ln
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ln():21 -> ln
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray ln():919:919 -> ln
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> log10
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray log10():21 -> log10
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray log10():901:901 -> log10
    1:1:float max():952:952 -> max
    1:1:float min():957:957 -> min
    1:1:float norm():937:937 -> norm
    1:1:float norm2():946:946 -> norm2
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> normalize
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize():21 -> normalize
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> normalize
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray normalize():21 -> normalize
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> normalize2
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():21 -> normalize2
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> normalize2
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray normalize2():21 -> normalize2
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> pow
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray pow(float):21 -> pow
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray pow(float):863:863 -> pow
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> prod
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(float):21 -> prod
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> prod
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> prod
    3:7:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(float):629:633 -> prod
    8:8:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(float):629:629 -> prod
    9:9:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):640:640 -> prod
    10:16:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):669:675 -> prod
    10:16:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):640 -> prod
    17:22:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):674:679 -> prod
    17:22:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):640 -> prod
    23:36:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):672:685 -> prod
    23:36:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):640 -> prod
    37:42:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):684:689 -> prod
    37:42:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):640 -> prod
    43:43:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray):682:682 -> prod
    43:43:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):640 -> prod
    44:44:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):641:641 -> prod
    45:52:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):650:657 -> prod
    45:52:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):641 -> prod
    53:53:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):653:653 -> prod
    53:53:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):641 -> prod
    54:54:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):651:651 -> prod
    54:54:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):641 -> prod
    55:55:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):650:650 -> prod
    55:55:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):641 -> prod
    56:57:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):642:643 -> prod
    58:58:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):696:696 -> prod
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> randomize
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator):21 -> randomize
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator):1007:1007 -> randomize
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> reverseSub
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray reverseSub(float):21 -> reverseSub
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray reverseSub(float):502:502 -> reverseSub
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> roundInt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray roundInt(float):21 -> roundInt
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray roundInt(float):989:989 -> roundInt
    1:6:void set(int,java.lang.Number):171:176 -> set
    7:7:void set(int,java.lang.Number):171:171 -> set
    8:11:void set(int,int,java.lang.Number):184:187 -> set
    12:19:void setElement(int,int,float):201:208 -> set
    12:19:void set(int,int,java.lang.Number):187 -> set
    20:20:void setElement(int,int,float):205:205 -> set
    20:20:void set(int,int,java.lang.Number):187 -> set
    21:21:void set(int,int,java.lang.Number):190:190 -> set
    22:22:void set(int,int,java.lang.Number):184:184 -> set
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> sign
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sign():21 -> sign
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sign():827:827 -> sign
    1:1:java.util.List splitV(int[]):1035:1035 -> splitV
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> sqrt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sqrt():21 -> sqrt
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sqrt():834:834 -> sqrt
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sqrt(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):852:852 -> sqrt
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> sub
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(float):21 -> sub
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> sub
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> sub
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sub(float):471:471 -> sub
    4:7:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):478:481 -> sub
    8:8:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):479:479 -> sub
    9:9:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):478:478 -> sub
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> sum
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(float):21 -> sum
    2:2:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> sum
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):21 -> sum
    3:3:float sum():347:347 -> sum
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sum(float):353:353 -> sum
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):360:360 -> sum
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):374:374 -> sumByColumns
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):367:367 -> sumByRows
    1:1:java.lang.String toString():1055:1055 -> toString
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> zeros
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros():21 -> zeros
    2:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray zeros():250:252 -> zeros
    1:1:void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[]):21:21 -> zerosLike
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zerosLike():21 -> zerosLike
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray zerosLike():260:260 -> zerosLike
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$Companion -> com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$Companion:
# {"id":"sourceFile","fileName":"SparseNDArray.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():23:23 -> <init>
    1:5:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray invoke(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float[],int[],int[]):36:40 -> invoke
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$LinearIterator -> com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$LinearIterator:
# {"id":"sourceFile","fileName":"SparseNDArray.kt"}
    int curIndex -> a
    com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray this$0 -> b
    1:1:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):49:49 -> <init>
    1:1:boolean hasNext():59:59 -> hasNext
    1:1:java.lang.Object next():49:49 -> next
    2:5:kotlin.Pair next():66:69 -> next
    6:13:kotlin.Pair next():67:74 -> next
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory -> com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory:
# {"id":"sourceFile","fileName":"SparseNDArrayFactory.kt"}
    1:1:void <init>():19:19 -> <init>
    1:5:int arrayOf$lambda$0(kotlin.Pair,kotlin.Pair):105:109 -> a
    1:19:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray arrayOf(kotlin.Pair[],com.kotlinnlp.simplednn.simplemath.ndarray.Shape):101:119 -> arrayOf
    20:20:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray arrayOf(kotlin.Pair[],com.kotlinnlp.simplednn.simplemath.ndarray.Shape):113:113 -> arrayOf
    21:36:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray arrayOf(kotlin.Pair[],com.kotlinnlp.simplednn.simplemath.ndarray.Shape):112:127 -> arrayOf
    37:37:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray arrayOf(kotlin.Pair[],com.kotlinnlp.simplednn.simplemath.ndarray.Shape):123:123 -> arrayOf
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):19:19 -> emptyArray
    2:5:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):32:35 -> emptyArray
    6:6:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):32:32 -> emptyArray
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray eye(int):19:19 -> eye
    2:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray eye(int):56:57 -> eye
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray eye(int):55:55 -> eye
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float):19:19 -> fill
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float):68:68 -> fill
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray oneHotEncoder(int,int):19:19 -> oneHotEncoder
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray oneHotEncoder(int,int):80:80 -> oneHotEncoder
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):19:19 -> ones
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):19:19 -> ones
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):19:19 -> random
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):93:93 -> random
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):19:19 -> zeros
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):46:46 -> zeros
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray -> com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray:
# {"id":"sourceFile","fileName":"SparseBinaryNDArray.kt"}
    com.kotlinnlp.simplednn.simplemath.ndarray.Shape shape -> a
    java.util.Map activeIndicesByRow -> b
    java.util.Map activeIndicesByColumn -> c
    com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory factory -> d
    int rows -> e
    int columns -> f
    int length -> g
    int lastIndex -> h
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> <init>
    1:1:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map):24 -> <init>
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.Shape getShape():25:25 -> <init>
    2:2:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map):25 -> <init>
    3:3:java.util.Map getActiveIndicesByRow():26:26 -> <init>
    3:3:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map):26 -> <init>
    4:4:java.util.Map getActiveIndicesByColumn():27:27 -> <init>
    4:4:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map):27 -> <init>
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory getFactory():123:123 -> <init>
    5:5:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map):123 -> <init>
    6:6:int getRows():140:140 -> <init>
    6:6:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map):140 -> <init>
    7:7:int getColumns():145:145 -> <init>
    7:7:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map):145 -> <init>
    8:8:int getLength():150:150 -> <init>
    8:8:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map):150 -> <init>
    9:9:int getLastIndex():155:155 -> <init>
    9:9:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map):155 -> <init>
    10:10:java.util.Map getActiveIndicesByRow():26:26 -> <init>
    10:10:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map,int,kotlin.jvm.internal.DefaultConstructorMarker):26 -> <init>
    11:11:java.util.Map getActiveIndicesByColumn():27:27 -> <init>
    11:11:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map,int,kotlin.jvm.internal.DefaultConstructorMarker):27 -> <init>
    12:12:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> <init>
    12:12:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map,int,kotlin.jvm.internal.DefaultConstructorMarker):24 -> <init>
    1:17:void addElement(java.util.Map,int,int,boolean):242:258 -> a
    18:21:java.util.Map copyIndices(java.util.Map):325:328 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;)Ljava/util/LinkedHashMap;"}
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> abs
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray abs():24 -> abs
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray abs():615:615 -> abs
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> access$sortMap
    2:670:java.util.Map sortMap(java.util.Map):190:858 -> access$sortMap
    2:670:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24 -> access$sortMap
    671:671:java.util.Map sortMap(java.util.Map):191:191 -> access$sortMap
    671:671:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24 -> access$sortMap
    1:1:int argMaxIndex(int):754:754 -> argMaxIndex
    2:2:int argMaxIndex(java.util.Set):765:765 -> argMaxIndex
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignDiv
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(float):24 -> assignDiv
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignDiv
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> assignDiv
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignDiv(float):580:580 -> assignDiv
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):587:587 -> assignDiv
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignDot
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> assignDot
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignDot
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> assignDot
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):489:489 -> assignDot
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):496:496 -> assignDot
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignExp
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignExp():24 -> assignExp
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignExp():689:689 -> assignExp
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignLn
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLn():24 -> assignLn
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignLn():725:725 -> assignLn
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignLog10
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLog10():24 -> assignLog10
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignLog10():707:707 -> assignLog10
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignPow
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignPow(float):24 -> assignPow
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignPow(float):671:671 -> assignPow
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignProd
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float):24 -> assignProd
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignProd
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):24 -> assignProd
    3:3:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignProd
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> assignProd
    4:4:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignProd
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float):24 -> assignProd
    5:5:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignProd
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> assignProd
    6:6:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignProd(float):524:524 -> assignProd
    7:7:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):531:531 -> assignProd
    8:8:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,float):538:538 -> assignProd
    9:9:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):545:545 -> assignProd
    10:10:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):552:552 -> assignProd
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignRoundInt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignRoundInt(float):24 -> assignRoundInt
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignRoundInt(float):787:787 -> assignRoundInt
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignSqrt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSqrt():24 -> assignSqrt
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSqrt():638:638 -> assignSqrt
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignSub
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(float):24 -> assignSub
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignSub
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> assignSub
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSub(float):461:461 -> assignSub
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):468:468 -> assignSub
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignSum
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(float):24 -> assignSum
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignSum
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> assignSum
    3:3:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignSum
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float):24 -> assignSum
    4:4:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignSum
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> assignSum
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):416:416 -> assignSum
    6:6:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSum(float):423:423 -> assignSum
    7:7:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,float):430:430 -> assignSum
    8:8:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):437:437 -> assignSum
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignValues
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(float):24 -> assignValues
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignValues
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> assignValues
    3:3:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> assignValues
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):24 -> assignValues
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(float):338:338 -> assignValues
    5:7:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):345:347 -> assignValues
    8:512:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):356:860 -> assignValues
    8:512:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):347 -> assignValues
    513:1011:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):364:862 -> assignValues
    513:1011:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):347 -> assignValues
    1012:1012:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):365:365 -> assignValues
    1012:1012:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):347 -> assignValues
    1013:1013:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):348:348 -> assignValues
    1014:1014:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):346:346 -> assignValues
    1015:1015:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):345:345 -> assignValues
    1016:1016:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):374:374 -> assignValues
    1:1:float avg():594:594 -> avg
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> concatH
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> concatH
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):801:801 -> concatH
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> concatV
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> concatV
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):808:808 -> concatV
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> copy
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray copy():24 -> copy
    2:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray copy():315:317 -> copy
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray copy():314:314 -> copy
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> div
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(float):24 -> div
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> div
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> div
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray div(float):559:559 -> div
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):566:566 -> div
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray):573:573 -> div
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):482:482 -> dot
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> equals
    1:1:boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float):24 -> equals
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> equals
    2:2:boolean equals(java.lang.Object,float):24 -> equals
    3:3:boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,float):829:829 -> equals
    4:4:boolean equals(java.lang.Object):843:843 -> equals
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> exp
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray exp():24 -> exp
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray exp():680:680 -> exp
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> get
    1:1:java.lang.Number get(int):24 -> get
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> get
    2:2:java.lang.Number get(int,int):24 -> get
    3:3:java.lang.Integer get(int):200:200 -> get
    4:4:java.lang.Integer get(int,int):207:207 -> get
    1:1:java.util.Map getActiveIndicesByColumn():27:27 -> getActiveIndicesByColumn
    1:1:java.util.Map getActiveIndicesByRow():26:26 -> getActiveIndicesByRow
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> getColumn
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getColumn(int):24 -> getColumn
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray getColumn(int):282:282 -> getColumn
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> getColumns
    1:1:java.util.List getColumns():24 -> getColumns
    2:2:int getColumns():145:145 -> getColumns
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> getFactory
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory getFactory():24 -> getFactory
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory getFactory():123:123 -> getFactory
    1:1:int getLastIndex():155:155 -> getLastIndex
    1:1:int getLength():150:150 -> getLength
    1:680:com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask buildMask():175:854 -> getMask
    1:680:com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask getMask():169 -> getMask
    681:1358:com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask buildMask():178:855 -> getMask
    681:1358:com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask getMask():169 -> getMask
    1359:1365:com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask buildMask():180:186 -> getMask
    1359:1365:com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask getMask():169 -> getMask
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> getRange
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRange(int,int):24 -> getRange
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray getRange(int,int):294:294 -> getRange
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> getRow
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRow(int):24 -> getRow
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray getRow(int):271:271 -> getRow
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> getRows
    1:1:java.util.List getRows():24 -> getRows
    2:2:int getRows():140:140 -> getRows
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.Shape getShape():25:25 -> getShape
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> getT
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getT():24 -> getT
    2:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray getT():161:163 -> getT
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray getT():160:160 -> getT
    1:1:int hashCode():850:850 -> hashCode
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> isMatrix
    1:1:boolean isMatrix():24 -> isMatrix
    1:1:boolean isOneHotEncoder():135:135 -> isOneHotEncoder
    1:1:boolean isVector():129:129 -> isVector
    1:1:java.util.Iterator iterator():118:118 -> iterator
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> ln
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ln():24 -> ln
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray ln():716:716 -> ln
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> log10
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray log10():24 -> log10
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray log10():698:698 -> log10
    1:1:float max():601:601 -> max
    1:1:float min():608:608 -> min
    1:1:float norm():734:734 -> norm
    1:1:float norm2():743:743 -> norm2
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> normalize
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize():24 -> normalize
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> normalize
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray normalize():24 -> normalize
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> normalize2
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2():24 -> normalize2
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> normalize2
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray normalize2():24 -> normalize2
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> pow
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray pow(float):24 -> pow
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray pow(float):660:660 -> pow
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> prod
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(float):24 -> prod
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> prod
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> prod
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray prod(float):503:503 -> prod
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):510:510 -> prod
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):517:517 -> prod
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> randomize
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator):24 -> randomize
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator):794:794 -> randomize
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> reverseSub
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray reverseSub(float):24 -> reverseSub
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray reverseSub(float):475:475 -> reverseSub
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> roundInt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray roundInt(float):24 -> roundInt
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray roundInt(float):776:776 -> roundInt
    1:1:void set(int,java.lang.Number):214:214 -> set
    2:5:void set(int,int,java.lang.Number):221:224 -> set
    6:6:void addElement$default(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map,int,int,boolean,int,java.lang.Object):240:240 -> set
    6:6:void set(int,int,java.lang.Number):224 -> set
    7:7:void set(int,int,java.lang.Number):225:225 -> set
    8:8:void addElement$default(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map,int,int,boolean,int,java.lang.Object):240:240 -> set
    8:8:void set(int,int,java.lang.Number):225 -> set
    9:9:void set(int,int,java.lang.Number):228:228 -> set
    10:10:void set(int,int,java.lang.Number):221:221 -> set
    11:11:void set(int,int):235:235 -> set
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> sign
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sign():24 -> sign
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sign():624:624 -> sign
    1:1:java.util.List splitV(int[]):822:822 -> splitV
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> sqrt
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sqrt():24 -> sqrt
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sqrt():631:631 -> sqrt
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sqrt(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask):649:649 -> sqrt
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> sub
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(float):24 -> sub
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> sub
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> sub
    3:3:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sub(float):444:444 -> sub
    4:7:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):451:454 -> sub
    8:8:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):452:452 -> sub
    9:9:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):451:451 -> sub
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> sum
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(float):24 -> sum
    2:2:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> sum
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):24 -> sum
    3:3:float sum():381:381 -> sum
    4:4:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sum(float):388:388 -> sum
    5:5:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):395:395 -> sum
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):409:409 -> sumByColumns
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray):402:402 -> sumByRows
    1:1:java.lang.String toString():836:836 -> toString
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> zeros
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros():24 -> zeros
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray zeros():301:301 -> zeros
    1:1:java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map):24:24 -> zerosLike
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zerosLike():24 -> zerosLike
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray zerosLike():308:308 -> zerosLike
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$Companion -> com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$Companion:
# {"id":"sourceFile","fileName":"SparseBinaryNDArray.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():31:31 -> <init>
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$LinearIndicesIterator -> com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$LinearIndicesIterator:
# {"id":"sourceFile","fileName":"SparseBinaryNDArray.kt"}
    java.util.Iterator columnsIterator -> a
    java.util.Map$Entry curRow -> b
    java.util.Map$Entry curColumn -> c
    java.util.Iterator curRowIterator -> d
    java.util.Iterator curColumnIterator -> e
    com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray this$0 -> f
    1:31:void <init>(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray):43:73 -> <init>
    1:4:boolean hasNext():80:83 -> hasNext
    1:1:java.lang.Object next():43:43 -> next
    2:4:kotlin.Pair next():91:93 -> next
    5:7:void updateColumnIterator():108:110 -> next
    5:7:kotlin.Pair next():97 -> next
    8:8:kotlin.Pair next():99:99 -> next
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory -> com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory:
# {"id":"sourceFile","fileName":"SparseBinaryNDArrayFactory.kt"}
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):18:18 -> <init>
    1:1:void <init>():18 -> <init>
    1:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray arrayOf(java.util.List,com.kotlinnlp.simplednn.simplemath.ndarray.Shape):97:97 -> arrayOf
    6:34:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray arrayOf(java.util.List,com.kotlinnlp.simplednn.simplemath.ndarray.Shape):101:129 -> arrayOf
    35:41:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray arrayOf(java.util.List,com.kotlinnlp.simplednn.simplemath.ndarray.Shape):105:111 -> arrayOf
    42:54:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray arrayOf(kotlin.Pair[],com.kotlinnlp.simplednn.simplemath.ndarray.Shape):119:131 -> arrayOf
    55:56:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray arrayOf(kotlin.Pair[],com.kotlinnlp.simplednn.simplemath.ndarray.Shape):121:122 -> arrayOf
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):18:18 -> emptyArray
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):18 -> emptyArray
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):32:32 -> emptyArray
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):18:18 -> eye
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray eye(int):18 -> eye
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray eye(int):54:54 -> eye
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):18:18 -> fill
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float):18 -> fill
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float):65:65 -> fill
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):18:18 -> oneHotEncoder
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray oneHotEncoder(int,int):18 -> oneHotEncoder
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray oneHotEncoder(int,int):77:77 -> oneHotEncoder
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):18:18 -> ones
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):18:18 -> ones
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):18 -> ones
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):18:18 -> random
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):18 -> random
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float):90:90 -> random
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):18:18 -> zeros
    1:1:com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):18 -> zeros
    2:2:com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape):43:43 -> zeros
com.kotlinnlp.simplednn.utils.scheduling.BatchScheduling -> com.kotlinnlp.simplednn.utils.scheduling.BatchScheduling:
# {"id":"sourceFile","fileName":"BatchScheduling.kt"}
com.kotlinnlp.simplednn.utils.scheduling.EpochScheduling -> com.kotlinnlp.simplednn.utils.scheduling.EpochScheduling:
# {"id":"sourceFile","fileName":"EpochScheduling.kt"}
com.kotlinnlp.simplednn.utils.scheduling.ExampleScheduling -> com.kotlinnlp.simplednn.utils.scheduling.ExampleScheduling:
# {"id":"sourceFile","fileName":"ExampleScheduling.kt"}
com.kotlinnlp.utils.AbstractBiMap -> com.kotlinnlp.utils.AbstractBiMap:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    java.util.Map direct -> a
    java.util.Map reverse -> b
    kotlin.Lazy inverse$delegate -> c
    kotlin.Lazy entries$delegate -> d
    kotlin.Lazy keys$delegate -> e
    1:1:java.util.Map access$getReverse$p(com.kotlinnlp.utils.AbstractBiMap):31:31 -> <init>
    1:1:void <init>(java.util.Map,java.util.Map):31 -> <init>
    2:3:void <init>(java.util.Map,java.util.Map):32:33 -> <init>
    4:4:com.kotlinnlp.utils.MutableBiMap getInverse():38:38 -> <init>
    4:4:void <init>(java.util.Map,java.util.Map):38 -> <init>
    5:5:java.util.Set getEntries():45:45 -> <init>
    5:5:void <init>(java.util.Map,java.util.Map):45 -> <init>
    6:6:java.util.Set getKeys():48:48 -> <init>
    6:6:void <init>(java.util.Map,java.util.Map):48 -> <init>
    7:7:void <init>():54:54 -> <init>
    1:1:java.util.Map access$getReverse$p(com.kotlinnlp.utils.AbstractBiMap):31:31 -> access$getDirect$p
    1:1:java.util.Map access$getDirect$p(com.kotlinnlp.utils.AbstractBiMap):31 -> access$getDirect$p
    1:1:java.util.Map access$getReverse$p(com.kotlinnlp.utils.AbstractBiMap):31:31 -> access$getReverse$p
    1:2:void clear():83:84 -> clear
    1:1:boolean containsKey(java.lang.Object):92:92 -> containsKey
    1:1:boolean containsValue(java.lang.Object):96:96 -> containsValue
    1:1:java.util.Map access$getReverse$p(com.kotlinnlp.utils.AbstractBiMap):31:31 -> entrySet
    1:1:java.util.Set entrySet():31 -> entrySet
    1:4:java.lang.Object forcePut(java.lang.Object,java.lang.Object):57:60 -> forcePut
    1:1:java.lang.Object get(java.lang.Object):88:88 -> get
    1:1:java.util.Set getEntries():45:45 -> getEntries
    1:1:java.util.Map access$getReverse$p(com.kotlinnlp.utils.AbstractBiMap):31:31 -> getInverse
    1:1:com.kotlinnlp.utils.BiMap getInverse():31 -> getInverse
    2:2:com.kotlinnlp.utils.MutableBiMap getInverse():38:38 -> getInverse
    1:1:java.util.Set getKeys():48:48 -> getKeys
    1:1:int getSize():36:36 -> getSize
    1:1:java.util.Set getValues():52:52 -> getValues
    1:1:boolean isEmpty():100:100 -> isEmpty
    1:1:java.util.Map access$getReverse$p(com.kotlinnlp.utils.AbstractBiMap):31:31 -> keySet
    1:1:java.util.Set keySet():31 -> keySet
    1:2:java.lang.Object put(java.lang.Object,java.lang.Object):65:66 -> put
    3:3:java.lang.Object put(java.lang.Object,java.lang.Object):65:65 -> put
    1:138:void putAll(java.util.Map):70:207 -> putAll
    139:140:void putAll(java.util.Map):71:71 -> putAll
    142:278:void putAll(java.util.Map):73:209 -> putAll
    279:279:void putAll(java.util.Map):73:73 -> putAll
    1:2:java.lang.Object remove(java.lang.Object):77:78 -> remove
    1:1:java.util.Map access$getReverse$p(com.kotlinnlp.utils.AbstractBiMap):31:31 -> size
    1:1:int size():31 -> size
    1:1:java.util.Map access$getReverse$p(com.kotlinnlp.utils.AbstractBiMap):31:31 -> values
    1:1:java.util.Collection values():31 -> values
    2:2:java.util.Map access$getReverse$p(com.kotlinnlp.utils.AbstractBiMap):31:31 -> values
    2:2:java.util.Set values():31 -> values
com.kotlinnlp.utils.AbstractBiMap$BiMapEntry -> com.kotlinnlp.utils.a:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    java.util.Map$Entry entry -> a
    com.kotlinnlp.utils.AbstractBiMap this$0 -> b
    1:2:void <init>(com.kotlinnlp.utils.AbstractBiMap,java.util.Map$Entry):171:172 -> <init>
    1:16:java.lang.Object setValue(java.lang.Object):175:190 -> setValue
    17:17:java.lang.Object setValue(java.lang.Object):184:184 -> setValue
com.kotlinnlp.utils.AbstractBiMap$BiMapSet -> com.kotlinnlp.utils.b:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    java.util.Set elements -> a
    kotlin.jvm.functions.Function1 keyGetter -> b
    kotlin.jvm.functions.Function1 elementWrapper -> c
    com.kotlinnlp.utils.AbstractBiMap this$0 -> d
    1:4:void <init>(com.kotlinnlp.utils.AbstractBiMap,java.util.Set,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):103:106 -> <init>
    1:2:void clear():125:126 -> clear
    1:2:java.util.Iterator iterator():130:131 -> iterator
    1:11:boolean remove(java.lang.Object):109:119 -> remove
    1:1:int getSize():0:0 -> size
    1:1:int size():103 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
com.kotlinnlp.utils.AbstractBiMap$BiMapSetIterator -> com.kotlinnlp.utils.c:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    java.util.Iterator iterator -> a
    kotlin.jvm.functions.Function1 keyGetter -> b
    kotlin.jvm.functions.Function1 elementWrapper -> c
    java.lang.Object last -> d
    com.kotlinnlp.utils.AbstractBiMap this$0 -> e
    1:4:void <init>(com.kotlinnlp.utils.AbstractBiMap,java.util.Iterator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):135:138 -> <init>
    1:1:boolean hasNext():143:143 -> hasNext
    1:4:java.lang.Object next():147:150 -> next
    1:1:void remove():157:157 -> remove
    2:12:void remove():156:166 -> remove
    13:14:void remove():162:163 -> remove
    15:24:void remove():157:166 -> remove
    25:25:void remove():154:154 -> remove
com.kotlinnlp.utils.AbstractBiMap$entries$2 -> com.kotlinnlp.utils.f:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    com.kotlinnlp.utils.AbstractBiMap this$0 -> a
    1:1:com.kotlinnlp.utils.AbstractBiMap$BiMapSet invoke():46:46 -> invoke
    1:1:java.lang.Object invoke():45 -> invoke
com.kotlinnlp.utils.AbstractBiMap$entries$2$1 -> com.kotlinnlp.utils.d:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    com.kotlinnlp.utils.AbstractBiMap$entries$2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/utils/d;"}
    1:1:java.lang.Object invoke(java.lang.Object):46:46 -> invoke
    2:48:java.lang.Object invoke(java.util.Map$Entry):0:46 -> invoke
    2:48:java.lang.Object invoke(java.lang.Object):46 -> invoke
com.kotlinnlp.utils.AbstractBiMap$entries$2$2 -> com.kotlinnlp.utils.e:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    com.kotlinnlp.utils.AbstractBiMap this$0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):46:46 -> invoke
    2:48:java.util.Map$Entry invoke(java.util.Map$Entry):0:46 -> invoke
    2:48:java.lang.Object invoke(java.lang.Object):46 -> invoke
com.kotlinnlp.utils.AbstractBiMap$inverse$2 -> com.kotlinnlp.utils.g:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    com.kotlinnlp.utils.AbstractBiMap this$0 -> a
    1:1:com.kotlinnlp.utils.AbstractBiMap$inverse$2$1 invoke():39:39 -> invoke
    1:1:java.lang.Object invoke():38 -> invoke
com.kotlinnlp.utils.AbstractBiMap$inverse$2$1 -> com.kotlinnlp.utils.AbstractBiMap$inverse$2$1:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    com.kotlinnlp.utils.AbstractBiMap this$0 -> f
    1:1:void <init>(com.kotlinnlp.utils.AbstractBiMap,java.util.Map,java.util.Map):39:39 -> <init>
    1:1:com.kotlinnlp.utils.BiMap getInverse():39:39 -> getInverse
    2:2:com.kotlinnlp.utils.MutableBiMap getInverse():41:41 -> getInverse
    1:1:java.util.Collection values():39:39 -> values
com.kotlinnlp.utils.AbstractBiMap$keys$2 -> com.kotlinnlp.utils.j:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    com.kotlinnlp.utils.AbstractBiMap this$0 -> a
    1:1:com.kotlinnlp.utils.AbstractBiMap$BiMapSet invoke():49:49 -> invoke
    1:1:java.lang.Object invoke():48 -> invoke
com.kotlinnlp.utils.AbstractBiMap$keys$2$1 -> com.kotlinnlp.utils.h:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    com.kotlinnlp.utils.AbstractBiMap$keys$2$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/utils/h;"}
com.kotlinnlp.utils.AbstractBiMap$keys$2$2 -> com.kotlinnlp.utils.i:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    com.kotlinnlp.utils.AbstractBiMap$keys$2$2 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/utils/i;"}
com.kotlinnlp.utils.BaseExtensionsKt -> com.kotlinnlp.utils.BaseExtensionsKt:
# {"id":"sourceFile","fileName":"BaseExtensions.kt"}
    1:109:java.util.List combine(java.util.List):69:177 -> combine
    110:111:java.util.List combine(java.util.List):71:72 -> combine
    1:1:java.util.List concat(java.util.List,java.util.List):118:118 -> concat
    1:51:java.util.List foldUp(java.util.List):132:182 -> foldUp
    52:103:java.util.List foldUp(java.util.List):136:187 -> foldUp
    104:151:java.util.List foldUp(java.util.List):140:187 -> foldUp
    1:1:void forEachGroup(java.util.List,int,int,kotlin.jvm.functions.Function1):107:107 -> forEachGroup
    1:3:void forEachIndicesRange(java.util.List,int,int,kotlin.jvm.functions.Function1):89:91 -> forEachIndicesRange
    4:4:void forEachIndicesRange(java.util.List,int,int,kotlin.jvm.functions.Function1):87:87 -> forEachIndicesRange
    1:1:java.util.Collection notEmptyOr(java.util.Collection,kotlin.jvm.functions.Function0):52:52 -> notEmptyOr
    2:2:java.util.Map notEmptyOr(java.util.Map,kotlin.jvm.functions.Function0):60:60 -> notEmptyOr
    1:2:java.lang.Object removeAtIndexOfFirst(java.util.List,kotlin.jvm.functions.Function1):169:170 -> removeAtIndexOfFirst
    3:3:java.lang.Object removeAtIndexOfFirst(java.util.List,kotlin.jvm.functions.Function1):44:44 -> removeAtIndexOfFirst
    1:1:java.util.List removeFrom(java.util.List,int):35:35 -> removeFrom
    1:4:java.util.List replace(java.util.List,int,java.lang.Object):163:166 -> replace
    5:5:java.util.List replace(java.util.List,int,java.lang.Object):166:166 -> replace
    1:3:java.util.List toByteList(java.lang.String,java.nio.charset.Charset):189:191 -> toByteList
    4:4:java.util.List toByteList(java.lang.String,java.nio.charset.Charset):147:147 -> toByteList
    1:1:java.util.List toByteList$default(java.lang.String,java.nio.charset.Charset,int,java.lang.Object):146:146 -> toByteList$default
    1:3:float toFixed(float,int):158:160 -> toFixed
com.kotlinnlp.utils.BaseExtensionsKt$forEachGroup$1 -> com.kotlinnlp.utils.k:
# {"id":"sourceFile","fileName":"BaseExtensions.kt"}
    kotlin.jvm.functions.Function1 $action -> a
    java.util.List $this_forEachGroup -> b
    void <init>(kotlin.jvm.functions.Function1,java.util.List) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lkotlin/jvm/functions/Function1;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):107:107 -> invoke
    2:110:void invoke(kotlin.ranges.IntRange):0:108 -> invoke
    2:110:java.lang.Object invoke(java.lang.Object):107 -> invoke
    111:111:java.lang.Object invoke(java.lang.Object):107:107 -> invoke
com.kotlinnlp.utils.BiMap -> com.kotlinnlp.utils.BiMap:
# {"id":"sourceFile","fileName":"BiMap.kt"}
com.kotlinnlp.utils.DictionarySet -> com.kotlinnlp.utils.DictionarySet:
# {"id":"sourceFile","fileName":"DictionarySet.kt"}
    java.util.HashSet elementsMultiset -> a
    com.kotlinnlp.utils.MutableBiMap elementsBiMap -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lcom/kotlinnlp/utils/HashBiMap;"}
    1:60:void <init>():17:76 -> <init>
    1:7:int add(java.lang.Object):94:100 -> add
    1:1:boolean contains(java.lang.Object):83:83 -> contains
    1:37:int getCount(java.lang.Object):124:160 -> getCount
    38:74:int getCount(java.lang.Object):124:160 -> getCount
    75:108:int getCount(int):131:164 -> getCount
    109:142:int getCount(int):131:164 -> getCount
    1:1:java.lang.Object getElement(int):110:110 -> getElement
    1:1:java.util.List getElements():143:143 -> getElements
    1:17:java.util.Set getElementsReversedSet():155:171 -> getElementsReversedSet
    18:18:java.util.Set getElementsReversedSet():155:155 -> getElementsReversedSet
    1:22:java.util.Set getElementsSortedSet():149:170 -> getElementsSortedSet
    23:23:java.util.Set getElementsSortedSet():149:149 -> getElementsSortedSet
    1:31:int getFrequency(int):138:168 -> getFrequency
    32:62:int getFrequency(int):138:168 -> getFrequency
    63:63:int getFrequency(int):138:138 -> getFrequency
    1:1:java.lang.Integer getId(java.lang.Object):117:117 -> getId
    1:1:int getSize():66:66 -> getSize
com.kotlinnlp.utils.DictionarySet$Factory -> com.kotlinnlp.utils.DictionarySet$Factory:
# {"id":"sourceFile","fileName":"DictionarySet.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():22:22 -> <init>
    1:120:com.kotlinnlp.utils.DictionarySet invoke(java.util.List):39:158 -> invoke
    121:121:com.kotlinnlp.utils.DictionarySet invoke(java.util.List):41:41 -> invoke
    122:227:com.kotlinnlp.utils.DictionarySet invoke(kotlin.sequences.Sequence):55:160 -> invoke
    228:228:com.kotlinnlp.utils.DictionarySet invoke(kotlin.sequences.Sequence):57:57 -> invoke
com.kotlinnlp.utils.DictionarySet$getElementsReversedSet$$inlined$sortedByDescending$1 -> com.kotlinnlp.utils.DictionarySet$getElementsReversedSet$$inlined$sortedByDescending$1:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    com.kotlinnlp.utils.DictionarySet this$0 -> a
    1:1:java.util.Set com.kotlinnlp.utils.DictionarySet.getElementsReversedSet():155:155 -> compare
    1:1:int compare(java.lang.Object,java.lang.Object):329 -> compare
    2:2:int compare(java.lang.Object,java.lang.Object):121:121 -> compare
com.kotlinnlp.utils.DictionarySet$getElementsSortedSet$$inlined$sortedBy$1 -> com.kotlinnlp.utils.DictionarySet$getElementsSortedSet$$inlined$sortedBy$1:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    com.kotlinnlp.utils.DictionarySet this$0 -> a
    1:1:java.util.Set com.kotlinnlp.utils.DictionarySet.getElementsSortedSet():149:149 -> compare
    1:1:int compare(java.lang.Object,java.lang.Object):329 -> compare
    2:2:int compare(java.lang.Object,java.lang.Object):102:102 -> compare
com.kotlinnlp.utils.HashBiMap -> com.kotlinnlp.utils.HashBiMap:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):197:197 -> <init>
    3:3:void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker):197:197 -> <init>
    1:1:java.util.Collection values():197:197 -> values
com.kotlinnlp.utils.HashBiMap$Companion -> com.kotlinnlp.utils.HashBiMap$Companion:
# {"id":"sourceFile","fileName":"BiMap.kt"}
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
    2:2:void <init>():198:198 -> <init>
    1:2:com.kotlinnlp.utils.HashBiMap create(java.util.Map):200:201 -> create
com.kotlinnlp.utils.ItemsPool -> com.kotlinnlp.utils.ItemsPool:
# {"id":"sourceFile","fileName":"ItemsPool.kt"}
    java.util.ArrayList pool -> a
    java.util.List availableItems -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/ArrayList;"}
    1:28:void <init>():14:41 -> <init>
    1:1:com.kotlinnlp.utils.ItemsPool$IDItem getItem():52:52 -> getItem
    2:5:void addItem():94:97 -> getItem
    2:5:com.kotlinnlp.utils.ItemsPool$IDItem getItem():53 -> getItem
    6:8:com.kotlinnlp.utils.ItemsPool$IDItem popAvailableItem():107:109 -> getItem
    6:8:com.kotlinnlp.utils.ItemsPool$IDItem getItem():56 -> getItem
    1:1:int getSize():26:26 -> getSize
    1:1:int getUsage():31:31 -> getUsage
    1:39:void releaseAll():85:123 -> releaseAll
    40:40:void releaseAll():86:86 -> releaseAll
    1:3:java.util.List releaseAndGetItems(int):68:70 -> releaseAndGetItems
    1:2:void releaseItem(com.kotlinnlp.utils.ItemsPool$IDItem):77:78 -> releaseItem
    3:3:void releaseItem(com.kotlinnlp.utils.ItemsPool$IDItem):77:77 -> releaseItem
com.kotlinnlp.utils.ItemsPool$IDItem -> com.kotlinnlp.utils.ItemsPool$IDItem:
# {"id":"sourceFile","fileName":"ItemsPool.kt"}
com.kotlinnlp.utils.MutableBiMap -> com.kotlinnlp.utils.MutableBiMap:
# {"id":"sourceFile","fileName":"BiMap.kt"}
com.kotlinnlp.utils.Regex -> com.kotlinnlp.utils.Regex:
# {"id":"sourceFile","fileName":"Regex.kt"}
    kotlin.text.Regex numbers -> a
    kotlin.text.Regex punctuation -> b
    1:52:void <clinit>():18:69 -> <clinit>
    1:1:void <init>():13:13 -> <init>
    1:1:kotlin.text.Regex getNumbers():18:18 -> getNumbers
    1:1:kotlin.text.Regex getPunctuation():69:69 -> getPunctuation
com.kotlinnlp.utils.ShuffledIndices -> com.kotlinnlp.utils.ShuffledIndices:
# {"id":"sourceFile","fileName":"ShuffledIndices.kt"}
    int size -> a
    int[] indices -> b
    1:33:void <init>(int,com.kotlinnlp.utils.Shuffler):16:48 -> <init>
    34:34:void <init>(int,com.kotlinnlp.utils.Shuffler,int,kotlin.jvm.internal.DefaultConstructorMarker):16:16 -> <init>
    1:1:int[] access$getIndices$p(com.kotlinnlp.utils.ShuffledIndices):16:16 -> access$getIndices$p
    1:1:int access$getSize$p(com.kotlinnlp.utils.ShuffledIndices):16:16 -> access$getSize$p
    1:1:java.util.Iterator iterator():54:54 -> iterator
com.kotlinnlp.utils.ShuffledIndices$InnerIterator -> com.kotlinnlp.utils.l:
# {"id":"sourceFile","fileName":"ShuffledIndices.kt"}
    int count -> a
    com.kotlinnlp.utils.ShuffledIndices this$0 -> b
    1:1:void <init>(com.kotlinnlp.utils.ShuffledIndices):21:21 -> <init>
    1:1:boolean hasNext():31:31 -> hasNext
    1:1:java.lang.Integer next():36:36 -> next
    1:1:java.lang.Object next():21 -> next
com.kotlinnlp.utils.Shuffler -> com.kotlinnlp.utils.Shuffler:
# {"id":"sourceFile","fileName":"Shuffler.kt"}
    kotlin.random.Random rndGenerator -> a
    1:1:void <init>():0:0 -> <init>
    2:3:void <init>(boolean,long):16:17 -> <init>
    4:4:void <init>(boolean,long,int,kotlin.jvm.internal.DefaultConstructorMarker):16:16 -> <init>
    1:2:void invoke(int[]):32:33 -> invoke
    3:5:void swap(int[],int,int):23:25 -> invoke
    3:5:void invoke(int[]):33 -> invoke
com.kotlinnlp.utils.Timer -> com.kotlinnlp.utils.Timer:
# {"id":"sourceFile","fileName":"Timer.kt"}
    1:1:void <init>():16:16 -> <init>
    1:3:java.lang.String formatElapsedTime():40:42 -> formatElapsedTime
com.kotlinnlp.utils.WordPieceTokenizer -> com.kotlinnlp.utils.WordPieceTokenizer:
# {"id":"sourceFile","fileName":"WordPieceTokenizer.kt"}
    com.kotlinnlp.utils.DictionarySet vocabulary -> a
    java.lang.String unknownToken -> b
    java.lang.String splitPrefix -> c
    1:1:kotlin.sequences.Sequence access$tokenize(com.kotlinnlp.utils.WordPieceTokenizer,java.lang.String):17:17 -> <init>
    1:1:void <init>(com.kotlinnlp.utils.DictionarySet,java.lang.String,java.lang.String):17 -> <init>
    2:2:com.kotlinnlp.utils.DictionarySet getVocabulary():18:18 -> <init>
    2:2:void <init>(com.kotlinnlp.utils.DictionarySet,java.lang.String,java.lang.String):18 -> <init>
    3:3:java.lang.String getUnknownToken():19:19 -> <init>
    3:3:void <init>(com.kotlinnlp.utils.DictionarySet,java.lang.String,java.lang.String):19 -> <init>
    4:4:java.lang.String getSplitPrefix():20:20 -> <init>
    4:4:void <init>(com.kotlinnlp.utils.DictionarySet,java.lang.String,java.lang.String):20 -> <init>
    5:5:java.lang.String getUnknownToken():19:19 -> <init>
    5:5:void <init>(com.kotlinnlp.utils.DictionarySet,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker):19 -> <init>
    6:6:java.lang.String getSplitPrefix():20:20 -> <init>
    6:6:void <init>(com.kotlinnlp.utils.DictionarySet,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker):20 -> <init>
    7:7:kotlin.sequences.Sequence access$tokenize(com.kotlinnlp.utils.WordPieceTokenizer,java.lang.String):17:17 -> <init>
    7:7:void <init>(com.kotlinnlp.utils.DictionarySet,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker):17 -> <init>
    1:32:kotlin.sequences.Sequence tokenize(java.lang.String):107:138 -> a
    33:39:kotlin.sequences.Sequence tokenize(java.lang.String):134:140 -> a
    1:1:kotlin.sequences.Sequence access$tokenize(com.kotlinnlp.utils.WordPieceTokenizer,java.lang.String):17:17 -> access$tokenize
    1:1:java.lang.String getSplitPrefix():20:20 -> getSplitPrefix
    1:1:java.lang.String getUnknownToken():19:19 -> getUnknownToken
    1:1:com.kotlinnlp.utils.DictionarySet getVocabulary():18:18 -> getVocabulary
    1:105:java.util.List groupPieces(java.util.List):86:190 -> groupPieces
    106:212:java.util.List groupPieces(java.util.List):89:195 -> groupPieces
    213:313:java.util.List groupPieces(java.util.List):95:195 -> groupPieces
    1:116:java.util.List piecesToWords(java.util.List):72:187 -> piecesToWords
    117:231:java.util.List piecesToWords(java.util.List):73:187 -> piecesToWords
    1:7:java.util.List tokenize(kotlin.sequences.Sequence,int):59:65 -> tokenize
    8:8:kotlin.sequences.Sequence basicTokenize(java.lang.String,java.util.Set):153:153 -> tokenize
    8:8:java.util.List tokenize(java.lang.String,int,java.util.Set):40 -> tokenize
    9:9:java.util.List tokenize(java.lang.String,int,java.util.Set):39:39 -> tokenize
    1:1:java.util.List tokenize$default(com.kotlinnlp.utils.WordPieceTokenizer,java.lang.String,int,java.util.Set,int,java.lang.Object):38:38 -> tokenize$default
    2:2:java.util.List tokenize$default(com.kotlinnlp.utils.WordPieceTokenizer,kotlin.sequences.Sequence,int,int,java.lang.Object):57:57 -> tokenize$default
com.kotlinnlp.utils.WordPieceTokenizer$basicTokenize$1 -> com.kotlinnlp.utils.m:
# {"id":"sourceFile","fileName":"WordPieceTokenizer.kt"}
    java.util.Set $neverSplit -> a
    1:1:java.lang.Object invoke(java.lang.Object):153:153 -> invoke
    2:188:kotlin.sequences.Sequence invoke(java.lang.String):0:186 -> invoke
    2:188:java.lang.Object invoke(java.lang.Object):153 -> invoke
    189:203:kotlin.sequences.Sequence invoke(java.lang.String):166:180 -> invoke
    189:203:java.lang.Object invoke(java.lang.Object):153 -> invoke
com.kotlinnlp.utils.WordPieceTokenizer$piecesToWords$1$1 -> com.kotlinnlp.utils.n:
# {"id":"sourceFile","fileName":"WordPieceTokenizer.kt"}
    com.kotlinnlp.utils.WordPieceTokenizer this$0 -> a
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):75:75 -> invoke
    2:77:java.lang.String invoke(int,java.lang.String):0:75 -> invoke
    2:77:java.lang.Object invoke(java.lang.Object,java.lang.Object):75 -> invoke
com.kotlinnlp.utils.WordPieceTokenizer$tokenize$1 -> com.kotlinnlp.utils.o:
# {"id":"sourceFile","fileName":"WordPieceTokenizer.kt"}
    int $maxCharsPerToken -> a
    com.kotlinnlp.utils.WordPieceTokenizer this$0 -> b
    1:1:java.lang.Object invoke(java.lang.Object):59:59 -> invoke
    2:65:kotlin.sequences.Sequence invoke(java.lang.String):0:63 -> invoke
    2:65:java.lang.Object invoke(java.lang.Object):59 -> invoke
com.kotlinnlp.utils.stats.MetricCounter -> com.kotlinnlp.utils.stats.MetricCounter:
# {"id":"sourceFile","fileName":"MetricCounter.kt"}
    int truePos -> a
    int falsePos -> b
    int falseNeg -> c
    1:1:void <init>():15:15 -> <init>
    1:1:float getF1Score():50:50 -> getF1Score
    2:2:float ifNaN(float,kotlin.jvm.functions.Function0):72:72 -> getF1Score
    2:2:float getF1Score():50 -> getF1Score
    1:1:int getFalseNeg():30:30 -> getFalseNeg
    1:1:int getFalsePos():25:25 -> getFalsePos
    1:1:float getPrecision():40:40 -> getPrecision
    2:2:float ifNaN(float,kotlin.jvm.functions.Function0):72:72 -> getPrecision
    2:2:float getPrecision():40 -> getPrecision
    1:1:float getRecall():45:45 -> getRecall
    2:2:float ifNaN(float,kotlin.jvm.functions.Function0):72:72 -> getRecall
    2:2:float getRecall():45 -> getRecall
    1:1:int getRelevant():35:35 -> getRelevant
    1:1:int getTruePos():20:20 -> getTruePos
    1:3:void reset():62:64 -> reset
    1:1:void setFalseNeg(int):30:30 -> setFalseNeg
    1:1:void setFalsePos(int):25:25 -> setFalsePos
    1:1:void setTruePos(int):20:20 -> setTruePos
    1:1:java.lang.String toString():56:56 -> toString
com.kotlinnlp.utils.stats.MetricCounter$f1Score$1 -> h.a:
# {"id":"sourceFile","fileName":"MetricCounter.kt"}
    com.kotlinnlp.utils.stats.MetricCounter$f1Score$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/a;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Float com.kotlinnlp.utils.stats.MetricCounter$f1Score$1.invoke():50:50 -> invoke
    1:1:java.lang.Object invoke():50 -> invoke
com.kotlinnlp.utils.stats.MetricCounter$precision$1 -> h.b:
# {"id":"sourceFile","fileName":"MetricCounter.kt"}
    com.kotlinnlp.utils.stats.MetricCounter$precision$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/b;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Float com.kotlinnlp.utils.stats.MetricCounter$precision$1.invoke():40:40 -> invoke
    1:1:java.lang.Object invoke():40 -> invoke
com.kotlinnlp.utils.stats.MetricCounter$recall$1 -> h.c:
# {"id":"sourceFile","fileName":"MetricCounter.kt"}
    com.kotlinnlp.utils.stats.MetricCounter$recall$1 INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/c;"}
    void <clinit>() -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Float com.kotlinnlp.utils.stats.MetricCounter$recall$1.invoke():45:45 -> invoke
    1:1:java.lang.Object invoke():45 -> invoke
