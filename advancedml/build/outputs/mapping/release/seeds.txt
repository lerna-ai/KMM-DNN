com.kotlinnlp.utils.DictionarySet$getElementsSortedSet$$inlined$sortedBy$1
com.kotlinnlp.simplednn.core.functionalities.losses.MSECalculator
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext
com.kotlinnlp.simplednn.core.layers.models.LinearParams
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors$Companion
com.kotlinnlp.simplednn.core.arrays.AugmentedArray$Companion
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters$Companion
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction$Companion
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byValue
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters$Companion
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus$Companion
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$Companion
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.LayerFactory$WhenMappings
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters$Companion
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$Companion
com.kotlinnlp.simplednn.core.functionalities.regularization.L2Regularization
com.kotlinnlp.simplednn.helpers.Statistics$special$$inlined$observable$1
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineForwardHelper
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction$DefaultImpls
com.kotlinnlp.simplednn.R
com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink$Companion
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatForwardHelper
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentLayer
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor
com.kotlinnlp.simplednn.core.functionalities.initializers.RandomInitializer$Companion
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$Companion
com.kotlinnlp.simplednn.core.functionalities.activations.Softsign
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils
com.kotlinnlp.simplednn.core.functionalities.activations.Tanh
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessorsPool
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory
com.kotlinnlp.simplednn.core.neuralnetwork.preset.GenericNeuralNetwork
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANBackwardHelper
com.kotlinnlp.utils.DictionarySet$Factory
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters
com.kotlinnlp.simplednn.helpers.Statistics$Simple
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumForwardHelper
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.AvgMerge
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters
com.kotlinnlp.utils.stats.MetricCounter
com.kotlinnlp.simplednn.core.layers.LayerType$Connection
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMForwardHelper
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters$Companion
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN$Companion
com.kotlinnlp.simplednn.core.functionalities.activations.Softmax
com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh
com.kotlinnlp.simplednn.simplemath.SimpleMathKt
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters$Companion
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$Companion
com.kotlinnlp.simplednn.core.layers.LayerFactory
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration
com.kotlinnlp.simplednn.core.layers.models.LinearParams$Companion
com.kotlinnlp.simplednn.core.layers.StatesWindow
com.kotlinnlp.utils.BaseExtensionsKt
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention$Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters
com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray
com.kotlinnlp.simplednn.core.functionalities.initializers.ConstantInitializer
com.kotlinnlp.utils.ItemsPool
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$Companion
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer
com.kotlinnlp.simplednn.core.layers.LayerType
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$$serializer
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper
com.kotlinnlp.simplednn.simplemath.ndarray.TypeAliasesKt
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters$Companion
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer
com.kotlinnlp.simplednn.core.layers.StackedLayers
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer
com.kotlinnlp.utils.Timer
com.kotlinnlp.simplednn.core.functionalities.outputevaluation.OutputEvaluationFunction
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.AffineMerge
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$LearningRateConfig
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray
com.kotlinnlp.utils.ItemsPool$IDItem
com.kotlinnlp.simplednn.core.functionalities.activations.ReLU
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMBackwardHelper
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel$Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer
com.kotlinnlp.simplednn.core.neuralnetwork.preset.DeltaRNN
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer
com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters
com.kotlinnlp.simplednn.core.neuralnetwork.preset.SimpleRecurrentNeuralNetwork
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMForwardHelper
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgBackwardHelper
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU$Companion
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceHelper
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$$serializer
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardForwardHelper
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANForwardHelper
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.ForwardHelper
com.kotlinnlp.simplednn.helpers.Counter
com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors
com.kotlinnlp.simplednn.core.optimizer.ScheduledUpdater
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom$Companion
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductForwardHelper
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors
com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator$DefaultImpls
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$DefaultImpls
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ProductMerge
com.kotlinnlp.simplednn.utils.scheduling.ExampleScheduling
com.kotlinnlp.simplednn.utils.scheduling.EpochScheduling
com.kotlinnlp.utils.DictionarySet
com.kotlinnlp.simplednn.core.neuralnetwork.preset.LSTMNeuralNetwork
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod
com.kotlinnlp.simplednn.core.functionalities.activations.ELU
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold$Companion
com.kotlinnlp.simplednn.core.neuralnetwork.preset.GRUNeuralNetwork
com.kotlinnlp.utils.ShuffledIndices
com.kotlinnlp.simplednn.core.functionalities.activations.ELU$Companion
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer$Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$LinearIterator
com.kotlinnlp.simplednn.core.functionalities.regularization.MaxNormRegularization
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters$Companion
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$Companion
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction
com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionForwardHelper
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$2
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceForwardHelper
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters$Companion
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$1$wm$RandomKt$WhenMappings
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayForwardHelper
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardRelevanceHelper
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$$serializer
com.kotlinnlp.simplednn.core.functionalities.activations.Softmax$Companion
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$5
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNForwardHelper
com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceForwardHelper
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgForwardHelper
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRForwardHelper
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RMSPropConfig
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionForwardHelper
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters
com.kotlinnlp.utils.DictionarySet$getElementsReversedSet$$inlined$sortedByDescending$1
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters
com.kotlinnlp.simplednn.core.optimizer.ExtensionsKt
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismForwardHelper
com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector
com.kotlinnlp.simplednn.core.functionalities.losses.MulticlassMSECalculator
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$4
com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters$Companion
com.kotlinnlp.simplednn.core.neuralnetwork.preset.RANNeuralNetwork
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.LayerParametersFactory
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardBackwardHelper
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$Companion
com.kotlinnlp.simplednn.helpers.Statistics
com.kotlinnlp.utils.HashBiMap$Companion
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU$Companion
com.kotlinnlp.simplednn.core.arrays.AugmentedArrayExtensionsKt
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters$Companion
com.kotlinnlp.simplednn.core.functionalities.decaymethods.ExponentialDecay
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper
com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters$Companion
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory
com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer$Companion
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer
com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator
com.kotlinnlp.simplednn.core.arrays.ParamsArray
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams$Companion
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworksPool
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom$Companion
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters$Companion
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$1
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod
com.kotlinnlp.simplednn.core.functionalities.initializers.ConstantInitializer$Companion
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls
com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid
com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessorsPool
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor
com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper
com.kotlinnlp.simplednn.core.neuralnetwork.preset.LTMNeuralNetwork
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.BiaffineMerge
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper$Companion
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU
com.kotlinnlp.simplednn.core.arrays.ActivableArray
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$$serializer
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$MomentumConfig
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$NesterovMomentumConfig
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNBackwardHelper
com.kotlinnlp.simplednn.core.neuralnetwork.preset.CFN
com.kotlinnlp.simplednn.core.functionalities.outputevaluation.MulticlassEvaluation
com.kotlinnlp.simplednn.core.arrays.DistributionArray
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineBackwardHelper
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray$Companion
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel$Companion
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN
com.kotlinnlp.simplednn.core.layers.LayerInterface$$serializer
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUBackwardHelper
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod$Companion
com.kotlinnlp.simplednn.core.neuralnetwork.preset.FeedforwardNeuralNetwork
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup
com.kotlinnlp.simplednn.core.layers.LayerType$Property
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$AdaGradConfig
com.kotlinnlp.simplednn.deeplearning.transformers.BERTBaseImportHelper
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom$Companion
com.kotlinnlp.simplednn.core.arrays.ParamsArray$WhenMappings
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN
com.kotlinnlp.simplednn.helpers.Trainer
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.LinearParams$$serializer
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure$Companion
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure
com.kotlinnlp.simplednn.core.arrays.Norm1Array
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$DefaultImpls
com.kotlinnlp.utils.AbstractBiMap$inverse$2$1
com.kotlinnlp.simplednn.core.functionalities.outputevaluation.ClassificationEvaluation
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$LinearIndicesIterator
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMBackwardHelper
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory$DefaultImpls
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU$Companion
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.SumMerge
com.kotlinnlp.simplednn.core.layers.LayerParametersFactory$WhenMappings
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNBackwardHelper
com.kotlinnlp.utils.AbstractBiMap
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentRelevanceHelper
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumBackwardHelper
com.kotlinnlp.simplednn.helpers.Evaluator
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters$Companion
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus
com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod
com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormForwardHelper
com.kotlinnlp.utils.WordPieceTokenizer
com.kotlinnlp.simplednn.core.functionalities.losses.LossesUtilsKt
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncodersPool
com.kotlinnlp.simplednn.core.layers.Layer
com.kotlinnlp.simplednn.deeplearning.transformers.BERT
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm$Companion
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNUtils
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNForwardHelper
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationForwardHelper
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters$Companion
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer
com.kotlinnlp.simplednn.core.functionalities.losses.SoftmaxCrossEntropyCalculator
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters$Companion
com.kotlinnlp.utils.Shuffler
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken$Companion
com.kotlinnlp.simplednn.core.arrays.DistributionArray$Companion
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory
com.kotlinnlp.simplednn.core.arrays.ParamsArray$$serializer
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN$Companion
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentForwardHelper
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$3
com.kotlinnlp.simplednn.core.neuralnetwork.preset.IndRNNNeuralNetwork
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN
com.kotlinnlp.simplednn.core.arrays.AugmentedArray
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineForwardHelper
com.kotlinnlp.simplednn.simplemath.ndarray.Shape
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RANImportanceHelper
com.kotlinnlp.utils.BiMap
com.kotlinnlp.simplednn.core.arrays.ParamsArray$Companion
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ConcatFeedforwardMerge
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors
com.kotlinnlp.simplednn.core.functionalities.decaymethods.HyperbolicDecay
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder
com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters$Companion
com.kotlinnlp.simplednn.core.arrays.ActivableArray$Companion
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters$Companion
com.kotlinnlp.utils.Regex
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentBackwardHelper
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters
com.kotlinnlp.simplednn.core.functionalities.activations.GeLU
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANRelevanceHelper
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationBackwardHelper
com.kotlinnlp.utils.MutableBiMap
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters
com.kotlinnlp.simplednn.core.functionalities.regularization.L1Regularization
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNBackwardHelper
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer
com.kotlinnlp.simplednn.core.layers.LayerParameters
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE$Companion
com.kotlinnlp.simplednn.core.neuralnetwork.preset.HighwayNeuralNetwork
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFForwardHelper
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Input
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNForwardHelper
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters$Companion
com.kotlinnlp.simplednn.utils.scheduling.BatchScheduling
com.kotlinnlp.simplednn.core.functionalities.initializers.RandomInitializer
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUForwardHelper
com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.VariableOutputMergeConfig
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters$Companion
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ConcatMerge
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultitaskNetworksPool
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork
com.kotlinnlp.simplednn.core.layers.LayerParameters$Companion
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN$Companion
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineForwardHelper
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength
com.kotlinnlp.simplednn.core.optimizer.AliasKt
com.kotlinnlp.utils.HashBiMap
com.kotlinnlp.simplednn.core.layers.LayerInterface
com.kotlinnlp.simplednn.core.functionalities.updatemethods.radam.RADAMMethod
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineBackwardHelper
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase$Companion
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$$serializer
com.kotlinnlp.simplednn.deeplearning.attention.han.ArrayListExtensionKt
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$Companion
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncodersPool
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters
com.kotlinnlp.simplednn.core.layers.LayerInterface$Companion
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters$Companion
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayBackwardHelper
com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubForwardHelper
com.kotlinnlp.simplednn.core.functionalities.activations.GeLU: com.kotlinnlp.simplednn.core.functionalities.activations.GeLU INSTANCE
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters: com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm: float eps
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters: com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase: com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase$Companion Companion
com.kotlinnlp.simplednn.core.neuralnetwork.preset.SimpleRecurrentNeuralNetwork: com.kotlinnlp.simplednn.core.neuralnetwork.preset.SimpleRecurrentNeuralNetwork INSTANCE
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: com.kotlinnlp.simplednn.simplemath.ndarray.Shape$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Input: com.kotlinnlp.simplednn.core.layers.LayerType$Input Sparse
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: com.kotlinnlp.simplednn.core.functionalities.activations.ELU$Companion Companion
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$4: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$4 INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerFactory: com.kotlinnlp.simplednn.core.layers.LayerFactory INSTANCE
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure: com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure$Companion Companion
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection DeltaRNN
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Property: com.kotlinnlp.simplednn.core.layers.LayerType$Property Merge
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.core.arrays.AugmentedArray$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray dev
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerParameters: com.kotlinnlp.simplednn.core.layers.LayerParameters$Companion Companion
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: com.kotlinnlp.simplednn.deeplearning.attention.han.HAN$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: java.util.List attentionAct
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters: com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.initializers.RandomInitializer: com.kotlinnlp.simplednn.core.functionalities.initializers.RandomInitializer$Companion Companion
com.kotlinnlp.simplednn.core.arrays.ParamsArray$$serializer: com.kotlinnlp.simplednn.core.arrays.ParamsArray$$serializer INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerType$Input: com.kotlinnlp.simplednn.core.layers.LayerType$Input Dense
com.kotlinnlp.simplednn.core.neuralnetwork.preset.LSTMNeuralNetwork: com.kotlinnlp.simplednn.core.neuralnetwork.preset.LSTMNeuralNetwork INSTANCE
com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType: com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType Dense
com.kotlinnlp.simplednn.core.layers.LayerType$Property: com.kotlinnlp.simplednn.core.layers.LayerType$Property Feedforward
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$Companion Companion
com.kotlinnlp.simplednn.core.neuralnetwork.preset.DeltaRNN: com.kotlinnlp.simplednn.core.neuralnetwork.preset.DeltaRNN INSTANCE
com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType: com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType Sparse
com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh: com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh INSTANCE
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters: com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.outputevaluation.MulticlassEvaluation: com.kotlinnlp.simplednn.core.functionalities.outputevaluation.MulticlassEvaluation INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerType$Input: com.kotlinnlp.simplednn.core.layers.LayerType$Input SparseBinary
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: com.kotlinnlp.simplednn.core.functionalities.activations.Threshold$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.activations.Tanh: com.kotlinnlp.simplednn.core.functionalities.activations.Tanh INSTANCE
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.LinearParams$$serializer: com.kotlinnlp.simplednn.core.layers.models.LinearParams$$serializer INSTANCE
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE$Companion Companion
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters: com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters: com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength: com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength MEDIUM
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters: com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters$Companion Companion
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$3: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$3 INSTANCE
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink$Companion Companion
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection Highway
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$$serializer: com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$$serializer INSTANCE
com.kotlinnlp.simplednn.deeplearning.transformers.BERTBaseImportHelper: com.kotlinnlp.simplednn.deeplearning.transformers.BERTBaseImportHelper INSTANCE
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$Companion Companion
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel: com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid: com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid INSTANCE
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters: com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters$Companion Companion
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray attention
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN: com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN$Companion Companion
com.kotlinnlp.simplednn.core.arrays.ActivableArray: com.kotlinnlp.simplednn.core.arrays.ActivableArray$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection Affine
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters: com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters$Companion Companion
com.kotlinnlp.simplednn.core.neuralnetwork.preset.GRUNeuralNetwork: com.kotlinnlp.simplednn.core.neuralnetwork.preset.GRUNeuralNetwork INSTANCE
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm: com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection Avg
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken$Companion Companion
com.kotlinnlp.simplednn.core.neuralnetwork.preset.CFN: com.kotlinnlp.simplednn.core.neuralnetwork.preset.CFN INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection Norm
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters: com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid: com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection Concat
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken SEP
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection Sum
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters: com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection LTM
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection SimpleRecurrent
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength: com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength SOFT
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom: com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: float EPS
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters: com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.activations.ReLU: com.kotlinnlp.simplednn.core.functionalities.activations.ReLU INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection ConcatFeedforward
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken MASK
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters: com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters$Companion Companion
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNUtils: com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNUtils INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection GRU
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors: com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.LinearParams: com.kotlinnlp.simplednn.core.layers.models.LinearParams$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer$Companion Companion
com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters: com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters$Companion Companion
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters: com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters$Companion Companion
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters: com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters$Companion Companion
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$Companion Companion
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$1$wm$RandomKt$WhenMappings: int[] $EnumSwitchMapping$0
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters: com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: com.kotlinnlp.simplednn.core.functionalities.activations.Softplus$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection Biaffine
com.kotlinnlp.simplednn.core.layers.LayerParametersFactory$WhenMappings: int[] $EnumSwitchMapping$0
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters: com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection TPR
com.kotlinnlp.simplednn.core.layers.LayerParametersFactory: com.kotlinnlp.simplednn.core.layers.LayerParametersFactory INSTANCE
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$2: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$2 INSTANCE
com.kotlinnlp.simplednn.core.neuralnetwork.preset.IndRNNNeuralNetwork: com.kotlinnlp.simplednn.core.neuralnetwork.preset.IndRNNNeuralNetwork INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerInterface$$serializer: com.kotlinnlp.simplednn.core.layers.LayerInterface$$serializer INSTANCE
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction: com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$Companion Companion
com.kotlinnlp.simplednn.core.neuralnetwork.preset.HighwayNeuralNetwork: com.kotlinnlp.simplednn.core.neuralnetwork.preset.HighwayNeuralNetwork INSTANCE
com.kotlinnlp.simplednn.core.functionalities.losses.MulticlassMSECalculator: com.kotlinnlp.simplednn.core.functionalities.losses.MulticlassMSECalculator INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection Product
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: java.util.List inputSequence
com.kotlinnlp.simplednn.core.layers.LayerFactory$WhenMappings: int[] $EnumSwitchMapping$1
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel: com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Property: com.kotlinnlp.simplednn.core.layers.LayerType$Property Recurrent
com.kotlinnlp.simplednn.core.layers.LayerInterface: com.kotlinnlp.simplednn.core.layers.LayerInterface$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength: com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength NONE
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors: com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors INSTANCE
com.kotlinnlp.utils.DictionarySet: com.kotlinnlp.utils.DictionarySet$Factory Factory
com.kotlinnlp.simplednn.core.functionalities.activations.Softsign: com.kotlinnlp.simplednn.core.functionalities.activations.Softsign INSTANCE
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory INSTANCE
com.kotlinnlp.simplednn.core.neuralnetwork.preset.LTMNeuralNetwork: com.kotlinnlp.simplednn.core.neuralnetwork.preset.LTMNeuralNetwork INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerType$Property: com.kotlinnlp.simplednn.core.layers.LayerType$Property Batch
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters: com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.neuralnetwork.preset.RANNeuralNetwork: com.kotlinnlp.simplednn.core.neuralnetwork.preset.RANNeuralNetwork INSTANCE
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom: com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.neuralnetwork.preset.FeedforwardNeuralNetwork: com.kotlinnlp.simplednn.core.neuralnetwork.preset.FeedforwardNeuralNetwork INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection LSTM
com.kotlinnlp.simplednn.core.arrays.ActivableArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray _values
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection Feedforward
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken UNK
com.kotlinnlp.simplednn.core.arrays.ParamsArray$WhenMappings: int[] $EnumSwitchMapping$0
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory INSTANCE
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters: com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters$Companion Companion
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory INSTANCE
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray devStdDev
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters: com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerFactory$WhenMappings: int[] $EnumSwitchMapping$0
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters: com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.arrays.DistributionArray: com.kotlinnlp.simplednn.core.arrays.DistributionArray$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection BatchNorm
com.kotlinnlp.simplednn.core.neuralnetwork.preset.GenericNeuralNetwork: com.kotlinnlp.simplednn.core.neuralnetwork.preset.GenericNeuralNetwork INSTANCE
com.kotlinnlp.simplednn.core.arrays.ParamsArray: com.kotlinnlp.simplednn.core.arrays.ParamsArray$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection IndRNN
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength: com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength HARD
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: com.kotlinnlp.simplednn.core.functionalities.activations.CeLU$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.activations.Softmax: com.kotlinnlp.simplednn.core.functionalities.activations.Softmax$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.losses.SoftmaxCrossEntropyCalculator: com.kotlinnlp.simplednn.core.functionalities.losses.SoftmaxCrossEntropyCalculator INSTANCE
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters: com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: com.kotlinnlp.simplednn.core.functionalities.activations.SeLU$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection RAN
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper: com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper$Companion Companion
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$1: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$1 INSTANCE
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray$Companion Companion
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters: com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.regularization.MaxNormRegularization: com.kotlinnlp.simplednn.core.functionalities.regularization.MaxNormRegularization INSTANCE
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken CLS
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray x
com.kotlinnlp.simplednn.core.functionalities.initializers.ConstantInitializer: com.kotlinnlp.simplednn.core.functionalities.initializers.ConstantInitializer$Companion Companion
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$Companion Companion
com.kotlinnlp.utils.HashBiMap: com.kotlinnlp.utils.HashBiMap$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection Sub
com.kotlinnlp.utils.Regex: com.kotlinnlp.utils.Regex INSTANCE
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$$serializer: com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$$serializer INSTANCE
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken PAD
com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer: com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer$Companion Companion
com.kotlinnlp.simplednn.core.functionalities.outputevaluation.ClassificationEvaluation: com.kotlinnlp.simplednn.core.functionalities.outputevaluation.ClassificationEvaluation INSTANCE
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer: com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$Companion Companion
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$$serializer: com.kotlinnlp.simplednn.simplemath.ndarray.Shape$$serializer INSTANCE
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection CFN
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters: com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters$Companion Companion
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention: com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention$Companion Companion
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection SquaredDistance
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom: com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom$Companion Companion
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: MultiTaskNetwork(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,float,float,boolean,int)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RMSPropConfig: float getEpsilon()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: int getRows()
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors$Companion: com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors byReference(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors)
com.kotlinnlp.utils.ItemsPool: void releaseItem(com.kotlinnlp.utils.ItemsPool$IDItem)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: java.util.List subList(int,int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer: RecurrentLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters: CFNLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineBackwardHelper: AffineBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getD1Rec()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport: DeltaRNNRelevanceSupport(int)
com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateLoss(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: void set(int,java.lang.Number)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ln()
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: int hashCode()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: int getId()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: java.util.List getParamsErrors$default(com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.regularization.L2Regularization: void apply(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncodersPool: com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder itemFactory(int)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubBackwardHelper: SubBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer)
com.kotlinnlp.utils.stats.MetricCounter: int getFalseNeg()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getInputGate1()
com.kotlinnlp.simplednn.core.functionalities.initializers.ConstantInitializer: ConstantInitializer(float)
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: int getInputSize()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: java.lang.Object[] toArray()
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrorsByProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,float)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters: PointerNetworkParameters(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: java.util.List forward(java.util.List,java.util.Map,java.util.Map)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignLog10()
com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.LinearParams: LinearParams(int,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters$Companion: LSTMLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: float[] getValues()
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray2$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: java.util.Map access$sortMap(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,java.util.Map)
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatVectorsV(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray[])
com.kotlinnlp.utils.HashBiMap$Companion: HashBiMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getSecondOrderMoments()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer: DistanceLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters)
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.losses.MSECalculator: java.util.List calculateErrors(java.util.List,java.util.List)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getAlpha()
com.kotlinnlp.simplednn.core.layers.StackedLayers: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRow(int)
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom: boolean getEnablePseudoRandom()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: java.lang.Number get(int)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray set(int,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sqrt()
com.kotlinnlp.simplednn.core.optimizer.ScheduledUpdater: void newEpoch()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANForwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormForwardHelper: NormForwardHelper(com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getColumn(int)
com.kotlinnlp.simplednn.core.functionalities.activations.GeLU: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.utils.DictionarySet$getElementsReversedSet$$inlined$sortedByDescending$1: DictionarySet$getElementsReversedSet$$inlined$sortedByDescending$1(com.kotlinnlp.utils.DictionarySet)
com.kotlinnlp.simplednn.core.arrays.ParamsArray$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.helpers.Trainer: com.kotlinnlp.utils.Shuffler access$getShuffler$p(com.kotlinnlp.simplednn.helpers.Trainer)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray eye(int)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure)
com.kotlinnlp.simplednn.core.layers.LayerParametersFactory: com.kotlinnlp.simplednn.core.layers.LayerParameters invoke$default(com.kotlinnlp.simplednn.core.layers.LayerParametersFactory,java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength: com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength[] values()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(float)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: int getDSymbols()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: EmbeddingsProcessor(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: java.lang.Object get(int)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention: int getInputSize()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray get(int)
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.utils.DictionarySet$getElementsSortedSet$$inlined$sortedBy$1: int compare(java.lang.Object,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignRoundInt(float)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: java.lang.Object set(int,java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: void add(int,com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: int argMaxIndex(int)
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: ELU(float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: boolean equals(float[],float[],float)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: java.lang.Integer get(int,int)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap getWordEmb()
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: BiRNN(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputMatrix()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$4: java.lang.Object invoke()
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: int getOutputSize()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet$default(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,java.lang.Object,float,kotlin.jvm.functions.Function0,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors: com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors getParamsErrors()
com.kotlinnlp.simplednn.core.functionalities.initializers.ConstantInitializer: float getValue()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getD2()
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper: RecurrentRelevanceHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLn()
com.kotlinnlp.utils.AbstractBiMap: java.util.Collection values()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ConcatFeedforwardMerge: ConcatFeedforwardMerge(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$LearningRateConfig: float getLearningRate()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.util.List forward(java.util.List[],boolean)
com.kotlinnlp.simplednn.core.layers.StackedLayers: StackedLayers(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getForgetGate()
com.kotlinnlp.simplednn.core.functionalities.decaymethods.ExponentialDecay: ExponentialDecay(float,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom$Companion: BaseRandom$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLog10()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: int lastIndexOf(java.lang.Object)
com.kotlinnlp.simplednn.helpers.Statistics$special$$inlined$observable$1: Statistics$special$$inlined$observable$1(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getQueries$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.layers.LayerInterface$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.core.layers.LayerInterface)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: int component2()
com.kotlinnlp.utils.Timer: java.lang.String formatElapsedTime()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN: DeepBiRNN(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN[])
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$$serializer: EmbeddingsMap$$serializer(kotlinx.serialization.KSerializer)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters: NormLayerParameters(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: HAN(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getWx()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(float)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors: java.util.List getInputVectorsErrors()
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: int getAttentionSize()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: LearningRateMethod(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$LearningRateConfig)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer: void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Integer,float,com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: AttentionNetwork(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean,int)
com.kotlinnlp.utils.DictionarySet$Factory: com.kotlinnlp.utils.DictionarySet invoke(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters$Companion: TPRLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray oneHotEncoder(int,int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: SparseNDArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer: com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper: java.util.List getParamsErrors$default(com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.functionalities.activations.Tanh: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineBackwardHelper: void execBackward(boolean)
com.kotlinnlp.utils.DictionarySet: int getCount(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationBackwardHelper: NewRecirculationBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer)
com.kotlinnlp.utils.BaseExtensionsKt: java.util.List concat(java.util.List,java.util.List)
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: CeLU(float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getRecurrentWeights()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod: AdaGradMethod(float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray1$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: MultiHeadAttentionNetwork(com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(float)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List forward(java.util.List)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncodersPool: com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer: SubLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sub(float)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory getFactory()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: float norm2()
com.kotlinnlp.simplednn.core.layers.StackedLayers: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters$Companion: ScaledDotAttentionLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE$Companion: FOFE$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.losses.SoftmaxCrossEntropyCalculator: java.util.List calculateErrors(java.util.List,java.util.ArrayList)
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignPow(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.core.layers.Layer: Layer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.utils.ShuffledIndices: int[] access$getIndices$p(com.kotlinnlp.utils.ShuffledIndices)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.util.List forward(java.util.List)
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: CFNLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultitaskNetworksPool: com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork itemFactory(int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: float f(float)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters: java.util.List getParams()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: void write$Self(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: LernaEmbeddingsProcessor(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: void setClassifier(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters: int getNumOfHeads()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getT()
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismForwardHelper: AttentionMechanismForwardHelper(com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer: SquaredDistanceLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters,float)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: java.lang.String toString()
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters: java.util.List getAttention()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.CFN: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.CFN,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: int getId()
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.StackedLayers: java.util.List backward$default(com.kotlinnlp.simplednn.core.layers.StackedLayers,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray ln()
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer: com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sqrt()
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters: boolean getSparseInput()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getG()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getLeftToRight()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List)
com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper: void forwardArray(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(float)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$MomentumConfig: float getMomentum()
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float)
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: CeLU(float)
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: ScaledDotAttentionLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: int getOutputSize()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod()
com.kotlinnlp.simplednn.core.functionalities.initializers.RandomInitializer: com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator getRandomGenerator()
com.kotlinnlp.simplednn.core.functionalities.activations.Softsign: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: java.lang.Float toScalar()
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: java.util.List forward(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRBackwardHelper: TPRBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatForwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: kotlin.Triple fullSVD()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$LinearIndicesIterator: SparseBinaryNDArray$LinearIndicesIterator(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase$Companion: SoftmaxBase$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgForwardHelper: void forward()
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getLastNotActivatedImportanceScores()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN: com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters getModel()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters: float getAttentionFactor$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer: MergeLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters: HANParameters(java.util.List,java.util.List,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: boolean isOneHotEncoder()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters: BiaffineLayerParameters(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductForwardHelper: void forward()
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction$DefaultImpls: void df(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: kotlin.Pair getLastOutput(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sum(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSub(float)
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: float df(float)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: void backward(java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.activations.ReLU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask getMask()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel()
com.kotlinnlp.utils.DictionarySet: java.util.Set getElementsReversedSet()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.LayerInterface: java.util.List getSizes()
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: Softshrink(float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: boolean equals(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignExp()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray scalarOf(float)
com.kotlinnlp.simplednn.core.layers.Layer: void setInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.utils.stats.MetricCounter: int getRelevant()
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineForwardHelper: BiaffineForwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMerge()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.losses.MSECalculator: MSECalculator()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer: float access$getTermsDropout$p(com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention: int getAttentionSize()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineForwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer getLayer()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: boolean getPropagateToInput()
com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid: float df(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: void backward(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List getCurState(boolean)
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: boolean equals(float,float,float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray eye(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters: AffineLayerParameters(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ConcatMerge: ConcatMerge()
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getAttentionMatrix$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer: void checkInputSize()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: java.lang.Object get(int)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem set(int,com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getB()
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer: AttentionMechanismLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignRoundInt(float)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: void setErrors(java.util.List)
com.kotlinnlp.simplednn.core.functionalities.activations.Tanh: float dfOptimized(float)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$DefaultImpls: void df(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: java.util.List splitV(int[])
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: java.lang.Number get(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer: com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters getParams()
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom: GaussianDistributedRandom(float,boolean,long)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: void setInput2Norm(float)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray set(int,com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(float)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: TPRLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,float,float)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getValues$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters getParams()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: HierarchySequence(java.util.ArrayList,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray[])
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters: BiRNNParameters(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel: int getInputSize()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationForwardHelper: NewRecirculationForwardHelper(com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer)
com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers: com.kotlinnlp.simplednn.core.layers.Layer getNextState()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: java.util.ListIterator listIterator(int)
com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer: void newEpoch()
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$Companion: kotlinx.serialization.KSerializer serializer()
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ConcatFeedforwardMerge: ConcatFeedforwardMerge(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.utils.AbstractBiMap: int getSize()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: FeedforwardNeuralProcessor(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: float getMomentum()
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom: boolean getEnablePseudoRandom()
com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.LayerInterface$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMForwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors()
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters: com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters getOutput()
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: float f(float)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getUpdaterSupportStructure()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: float getLearningRate()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputGate1()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: java.util.Iterator iterator()
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.core.arrays.AugmentedArray clone()
com.kotlinnlp.simplednn.core.functionalities.outputevaluation.ClassificationEvaluation: boolean invoke(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: boolean isEmpty()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer: com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.radam.RADAMMethod: RADAMMethod(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: boolean getPropagateToInput()
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor: void backward(java.lang.Object)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List getOutputSequence(boolean)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: void backwardLastOutput(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.utils.stats.MetricCounter: float getPrecision()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getKeys$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters: BiaffineLayerParameters(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray reverseSub(float)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationForwardHelper: void forward()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: int[] argSorted(boolean)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: boolean contains(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sqrt()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$2: DenseNDArrayFactory$random$$inlined$rand$2()
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubForwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer getLayer()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputFF()
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: float df(float)
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductForwardHelper: ProductForwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: void setInputSequence(java.util.List)
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: void backward(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$LinearIterator: kotlin.Pair next()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputNorm()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: RMSPropMethod(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RMSPropConfig)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.util.List forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor,java.util.List[],boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: void set(int,java.lang.Number)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: boolean retainAll(java.util.Collection)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RMSPropConfig: float getDecay()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: void backward(java.util.List)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: int size()
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength: com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength valueOf(java.lang.String)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: LernaEmbeddingsMap(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom: long getSeed()
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getAR()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$LearningRateConfig: UpdateMethodConfig$LearningRateConfig(float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getWyRec()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: void setV$advancedml_release(float)
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters$Companion: ProductLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.Layer: void setOutputRelevance(com.kotlinnlp.simplednn.core.arrays.Norm1Array)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: void setInput1Norm(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getInputGate3()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getAttention$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure: RMSPropStructure(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer: com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessorsPool: com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getT()
com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow: com.kotlinnlp.simplednn.core.layers.Layer getPrevState()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem removeAt(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: LSTMLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getVTmp()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: int getColumns()
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator: float calculateMeanLoss(java.util.List,java.util.List)
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: Threshold(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: MultiTaskNetworkConfig(int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,kotlinx.serialization.internal.SerializationConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters: BERTParameters(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.LayerInterface: LayerInterface(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray eye(int)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLn()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: int lastIndexOf(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: boolean addAll(java.util.Collection)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken: kotlin.enums.EnumEntries getEntries()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters: int getHiddenSize()
com.kotlinnlp.simplednn.core.arrays.Norm1Array: void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: java.util.List splitV(int[])
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentRelevanceHelper: SimpleRecurrentRelevanceHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer)
com.kotlinnlp.utils.WordPieceTokenizer: WordPieceTokenizer(com.kotlinnlp.utils.DictionarySet,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: void backward(java.util.List)
com.kotlinnlp.utils.BaseExtensionsKt: void forEachGroup(java.util.List,int,int,kotlin.jvm.functions.Function1)
com.kotlinnlp.simplednn.core.functionalities.decaymethods.ExponentialDecay: float getFinalLearningRate()
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: org.jetbrains.kotlinx.multik.ndarray.data.NDArray getStorage()
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.util.List forward(java.util.List,boolean)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.core.functionalities.decaymethods.HyperbolicDecay: float getFinalLearningRate()
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRow(int)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel: com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters getAttentionParams()
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.LayerParametersFactory: com.kotlinnlp.simplednn.core.layers.LayerParameters invoke(java.util.List,java.lang.Integer,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: void backward(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: java.util.List getInputErrors(boolean)
com.kotlinnlp.simplednn.core.functionalities.activations.Softsign: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: java.lang.String getUuid()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessorsPool: RecurrentNeuralProcessorsPool(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRange(int,int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMForwardHelper: LSTMForwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSqrt()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: float avg()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getOutput$default(com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceForwardHelper: void forward()
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer: AffineLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.VariableOutputMergeConfig: VariableOutputMergeConfig(com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: BatchFeedforwardProcessor(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.utils.AbstractBiMap$inverse$2$1: java.util.Collection values()
com.kotlinnlp.simplednn.core.layers.StackedLayers: void getInputLayer$annotations()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray maskBy(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.Shape getShape()
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: void load_init()
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet$default(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,java.lang.Integer,float,kotlin.jvm.functions.Function0,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: SeLU()
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors getInputErrors(boolean)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: void backward(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory getFactory()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getOutputGate()
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayForwardHelper: com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer: com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceHelper: void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: boolean remove(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float)
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer: java.util.List getInputErrors$default(com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float)
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: float sedSimilarity(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod$Companion: com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod invoke(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper: void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.core.functionalities.decaymethods.ExponentialDecay: int getTotalIterations()
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom: BaseRandom()
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,float)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters: CFNLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure$Companion: UpdaterSupportStructure$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$Companion: EmbeddingsMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.utils.HashBiMap: HashBiMap()
com.kotlinnlp.simplednn.core.layers.StackedLayers: java.util.List buildLayers(java.util.List)
com.kotlinnlp.simplednn.core.layers.LayerInterface$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$MomentumConfig: float getLearningRate()
com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper: java.util.List backward$default(com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: boolean equals(java.lang.Object,float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters: IndRNNLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm: GradientClipping$byNorm(float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.LayerInterface: com.kotlinnlp.simplednn.core.layers.LayerInterface copy$default(com.kotlinnlp.simplednn.core.layers.LayerInterface,java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters: java.util.List getW()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: com.kotlinnlp.simplednn.core.layers.LayerType$Connection component1()
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineBackwardHelper: CosineBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultitaskNetworksPool: MultitaskNetworksPool(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: float norm()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrNull(int)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: DeepBiRNNEncoder(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,boolean,float,int)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters: int getOutputSize()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: int getSize()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: void backward(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getOutputArray()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig copy(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.core.layers.LayerType$Input: com.kotlinnlp.simplednn.core.layers.LayerType$Input valueOf(java.lang.String)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.util.List forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor,java.util.List,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer: RecurrentLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.arrays.DistributionArray: com.kotlinnlp.simplednn.core.arrays.DistributionArray clone()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatBackwardHelper: ConcatBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer)
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byValue: GradientClipping$byValue(float)
com.kotlinnlp.simplednn.core.layers.models.LinearParams: int getInputSize()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getInputGate()
com.kotlinnlp.utils.ShuffledIndices: ShuffledIndices(int,com.kotlinnlp.utils.Shuffler,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(java.util.List,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType)
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.SumMerge: SumMerge()
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductForwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams$Companion: RecurrentLinearParams$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.decaymethods.HyperbolicDecay: HyperbolicDecay(float,float,float)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: MultiHeadAttentionNetwork(com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters,boolean,int)
com.kotlinnlp.simplednn.core.neuralnetwork.preset.GRUNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.GRUNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper: com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector getParamsErrorsCollector()
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumForwardHelper: SumForwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: AugmentedArray(int)
com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization: void apply(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sign()
com.kotlinnlp.utils.Timer: long getElapsedMillis()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getWRecR()
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: DeepBiRNNEncoder(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,boolean,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper: void forward()
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: ELU()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTBaseImportHelper: kotlin.text.Regex access$getLAYER_INDEX_REGEX$p()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: int indexOf(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: StackedLayersParameters(com.kotlinnlp.simplednn.core.layers.LayerInterface[],com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: void setDevStdDev$advancedml_release(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncodersPool: HANEncodersPool(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,float,float,float,boolean,java.lang.Float)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: java.util.List getBiRNNs()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: boolean addAll(int,java.util.Collection)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure: void write$Self(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: GRULayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters: SquaredDistanceLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls: java.util.List getColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.optimizer.ExtensionsKt: com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors getErrorsOf(java.util.List,com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: EmbeddingsProcessor(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray set(java.lang.Object,com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.utils.AbstractBiMap$inverse$2$1: com.kotlinnlp.utils.BiMap getInverse()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray onesLike()
com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh: float f(float)
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$DefaultImpls: java.lang.Object propagateErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.outputevaluation.MulticlassEvaluation: boolean invoke(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: ADAMMethod(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper: BackwardHelper(com.kotlinnlp.simplednn.core.layers.Layer)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateLoss(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getCandidate()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$LinearIterator: java.lang.Object next()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(float)
com.kotlinnlp.utils.WordPieceTokenizer: java.lang.String getUnknownToken()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer: BERTTrainer(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,java.lang.String,float,boolean,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,java.lang.Iterable,int,com.kotlinnlp.utils.Shuffler,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignLn()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.radam.RADAMMethod: float calcAlpha()
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom$Companion: GaussianDistributedRandom$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray reverseSub(float)
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters: SumLayerParameters(int,int)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: boolean isMatrix()
com.kotlinnlp.utils.stats.MetricCounter: void setTruePos(int)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: void write$Self(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer)
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer getAttentionMechanism$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig: float getStepSize()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask: int[] getDim1()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionForwardHelper: void forward()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray get(java.lang.Integer,float)
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sign()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getG()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters$Companion: DeepBiRNNParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters$Companion: RANLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: java.util.List getGainFactors()
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMBackwardHelper: LSTMBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignPow(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.LinearParams: com.kotlinnlp.simplednn.core.arrays.ParamsArray getWeights()
com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentLayer: GatedRecurrentLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure: AdaGradStructure(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.helpers.Counter: int getExampleCount()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: int getSize()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure: UpdaterSupportStructure(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: void load_init()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom: float next()
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: float getThreshold()
com.kotlinnlp.simplednn.helpers.Trainer: int getBatchSize()
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.utils.BiMap: com.kotlinnlp.utils.BiMap getInverse()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: java.util.List getRows()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zerosLike()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters$Companion: LTMLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.utils.HashBiMap: HashBiMap(int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromNDArray(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.LayerInterface: java.lang.String toString()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineBackwardHelper: BiaffineBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getValues()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod: float getEpsilon()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask: java.util.Iterator iterator()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: java.util.List getDropoutMasks$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,java.util.List,boolean)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: HANEncoder(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: float getAlpha()
com.kotlinnlp.simplednn.core.optimizer.ScheduledUpdater: void newExample()
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer: com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignRoundInt(float)
com.kotlinnlp.simplednn.core.functionalities.losses.LossesUtilsKt: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getQuantizationGradients(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: boolean isEmpty()
com.kotlinnlp.simplednn.helpers.Counter: boolean equals(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.functionalities.activations.Softmax$Companion: Softmax$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$LearningRateConfig: com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray roundInt(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float)
com.kotlinnlp.simplednn.core.arrays.ActivableArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getActivatedValues()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: float getAlpha()
com.kotlinnlp.simplednn.core.layers.models.LinearParams$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.kotlinnlp.simplednn.core.layers.LayerParameters: void write$Self(com.kotlinnlp.simplednn.core.layers.LayerParameters,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: AttentionLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getWInS()
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors$Companion: com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors byCopy(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray log10()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel: int getInputSize()
com.kotlinnlp.simplednn.core.arrays.ActivableArray: void setActivation(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getR()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray arrayOf(java.util.List,com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: boolean isVector()
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.Layer: java.util.List backward(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams,boolean)
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: java.util.List getInputArrays()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,int,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: java.util.List forward(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: void setStorage(org.jetbrains.kotlinx.multik.ndarray.data.NDArray)
com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper: ForwardHelper(com.kotlinnlp.simplednn.core.layers.Layer)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: boolean getFirstState$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getCandidate()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean,java.util.List,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.LayerInterface: com.kotlinnlp.simplednn.core.layers.LayerType$Input component2()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: boolean addAll(java.util.Collection)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMForwardHelper: LTMForwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: void newEpoch()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: TPRLayerParameters(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANForwardHelper: void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.core.layers.models.LinearParams: com.kotlinnlp.simplednn.core.arrays.ParamsArray getBiases()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer: BERTTrainer(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,java.lang.String,float,boolean,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,java.lang.Iterable,int,com.kotlinnlp.utils.Shuffler,boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.deeplearning.attention.han.ArrayListExtensionKt: com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence toHierarchySequence(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray[])
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer: void dumpModel()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: int getLength()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.FeedforwardNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.utils.DictionarySet$getElementsSortedSet$$inlined$sortedBy$1: DictionarySet$getElementsSortedSet$$inlined$sortedBy$1(com.kotlinnlp.utils.DictionarySet)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RMSPropConfig: UpdateMethodConfig$RMSPropConfig(float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.LinearParams: LinearParams(int,int,boolean)
com.kotlinnlp.utils.AbstractBiMap: int size()
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel: MultiTaskNetworkModel(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction component2()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.helpers.Trainer: boolean getVerbose()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig: UpdateMethodConfig$RADAMConfig(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.helpers.Statistics: void reset()
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.utils.ItemsPool: void releaseAll()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory getFactory()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: void setDev$advancedml_release(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Integer,float,kotlin.jvm.functions.Function0)
com.kotlinnlp.simplednn.core.functionalities.activations.ReLU: float dfOptimized(float)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: MomentumMethod(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: MultiBatchFeedforwardProcessor(java.util.List,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray ln()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: java.lang.Number get(int,int)
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: float df(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray)
com.kotlinnlp.simplednn.core.arrays.ParamsArray$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer: GlorotInitializer(float,boolean,long)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSqrt()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray mapTo(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,kotlin.jvm.functions.Function1)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer getLayer()
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.Tanh: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.utils.DictionarySet: java.util.Set getElementsSortedSet()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray normalize()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: LernaEmbeddingsProcessor(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,float)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncodersPool: com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder itemFactory(int)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: ADAMMethod(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom$Companion: FixedRangeRandom$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.LayerType$Property: kotlin.enums.EnumEntries getEntries()
com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors: int hashCode()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLn()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: int hashCode()
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: void setParams(java.util.List)
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRelevancePartition1$default(com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability: java.util.List access$getPredictions$p(com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability)
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$DefaultImpls: java.lang.Object propagateErrors(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem get(int)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getActivation$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.regularization.L1Regularization: void apply(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory,com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.layers.StackedLayers: void getOutputLayer$annotations()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRow(int)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessorsPool: RecurrentNeuralProcessorsPool(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean,java.util.List,boolean)
com.kotlinnlp.simplednn.core.functionalities.decaymethods.HyperbolicDecay: float update(float,int)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getColumn(int)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: void reduceLayersTo(int)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(float)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getImaginaryInput()
com.kotlinnlp.simplednn.helpers.Trainer: float getBestAccuracy()
com.kotlinnlp.simplednn.core.layers.models.LinearParams$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.core.layers.models.LinearParams)
com.kotlinnlp.simplednn.core.layers.LayerInterface: int getSize()
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: com.kotlinnlp.simplednn.simplemath.ndarray.Shape copy(int,int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters: IndRNNLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: void add(int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors: PointerNetworkProcessor$InputErrors(java.util.List,java.util.List)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getOutput(boolean)
com.kotlinnlp.simplednn.helpers.Trainer: void validateAndSaveModel()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(float[],int[],int[])
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$Companion: MultiTaskNetworkConfig$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: void assignRecurrentRelevance(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: void backward(java.util.List)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignLn()
com.kotlinnlp.simplednn.core.arrays.ActivableArray: void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem getInputImportanceScores()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: int getId()
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.AffineMerge: AffineMerge(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.ForwardHelper: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.arrays.DistributionArray: com.kotlinnlp.simplednn.core.arrays.Norm1Array clone()
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessorsPool: FeedforwardNeuralProcessorsPool(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: boolean isMatrix()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel$Companion: MultiTaskNetworkModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: boolean getPropagateToInput()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getR()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: java.util.List getInputErrors(boolean)
com.kotlinnlp.utils.WordPieceTokenizer: java.util.List groupPieces(java.util.List)
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncodersPool: BiRNNEncodersPool(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getTransform()
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters$Companion: ConcatFFLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: MultiBatchFeedforwardProcessor(java.util.List,java.util.List,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.optimizer.ScheduledUpdater: void update()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: java.util.List getInputArrays()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: SparseBinaryNDArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map)
com.kotlinnlp.utils.AbstractBiMap: AbstractBiMap(java.util.Map,java.util.Map)
com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid: float dfOptimized(float)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance$default(com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: DeltaRNNLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters: int getRank()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANRelevanceHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumForwardHelper: void forward()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray getRange(int,int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getAS()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(float)
com.kotlinnlp.simplednn.helpers.Counter: void newExample()
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: void backward(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray unaryMinus()
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: Softplus(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: float safeLog$default(float,float,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: float getV$advancedml_release()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN getNetwork()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: int getId()
com.kotlinnlp.utils.stats.MetricCounter: java.lang.String toString()
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator: java.util.List calculateErrors(java.util.List,java.util.List)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: java.util.List getWx1Arrays()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: RecurrentNeuralProcessor(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.LinearParams$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: boolean isMatrix()
com.kotlinnlp.simplednn.core.arrays.ParamsArray: void getValues$annotations()
com.kotlinnlp.utils.DictionarySet: int getFrequency(int)
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: float getThreshold()
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom: GaussianDistributedRandom(float,boolean,long,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSqrt()
com.kotlinnlp.utils.AbstractBiMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$LinearIterator: SparseNDArray$LinearIterator(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.helpers.Counter: com.kotlinnlp.simplednn.helpers.Counter copy(int,int,int,float)
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: int getNumOfLayers()
com.kotlinnlp.simplednn.core.functionalities.activations.GeLU: float df(float)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: BERTLayer(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,boolean,int)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: NesterovMomentumMethod(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$NesterovMomentumConfig)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMBackwardHelper: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getLayerRecurrentContribution(com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: int size()
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer: com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters$Companion: AttentionNetworkParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: java.util.List getColumns()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray2$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRelevancePartition2(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: void setAttentionAct$advancedml_release(java.util.List)
com.kotlinnlp.utils.ShuffledIndices: ShuffledIndices(int,com.kotlinnlp.utils.Shuffler)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray arrayOf(float[])
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: int getLastIndex()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: float norm()
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: LeakyRELU(float)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputStackedLayers()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: float avg()
com.kotlinnlp.simplednn.core.layers.LayerInterface: LayerInterface(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardRelevanceHelper: FeedforwardRelevanceHelper(com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2()
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray2$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer: com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,float)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm: GradientClipping$byNorm(float,float)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray copy()
com.kotlinnlp.simplednn.core.functionalities.activations.Tanh: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.Layer: void applyOutputActivationDeriv()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANForwardHelper: void forward()
com.kotlinnlp.simplednn.core.functionalities.activations.Softsign: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.arrays.ActivableArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getValues()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: RANLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.helpers.Statistics$Simple: com.kotlinnlp.utils.stats.MetricCounter getMetric()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: boolean containsAll(java.util.Collection)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: kotlin.Triple sparseSVD()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.utils.WordPieceTokenizer: kotlin.sequences.Sequence access$tokenize(com.kotlinnlp.utils.WordPieceTokenizer,java.lang.String)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer getLayer()
com.kotlinnlp.simplednn.core.functionalities.activations.Softsign: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.Layer: Layer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: java.util.List getRows()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.Layer: float getDropout()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentForwardHelper: SimpleRecurrentForwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RANImportanceHelper: RANImportanceHelper()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDotRightMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sqrt()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormForwardHelper: com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.LTMNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.functionalities.initializers.RandomInitializer$Companion: RandomInitializer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMBackwardHelper: LTMBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: java.util.List forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence: int getLastIndex()
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer getOutputFeedforward$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray zerosLike()
com.kotlinnlp.simplednn.core.layers.LayerParameters$Companion: kotlinx.serialization.KSerializer serializer()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: void backward(java.lang.Object)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: java.util.List forward(java.util.List)
com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper: java.util.List backward(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getPartitionGate()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.Layer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getOutputArray()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod: void update(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSub(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUForwardHelper: GRUForwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer)
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor: com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor getOutputProcessor()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters: void initForgetGateBiasToOne()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls: boolean equals$default(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,java.lang.Object,float,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping: void clip(java.util.List)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMultiHeadNorm()
com.kotlinnlp.simplednn.core.functionalities.decaymethods.HyperbolicDecay: float getInitLearningRate()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer: void learnFromExample(java.lang.String)
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray set$default(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,java.lang.Object,com.kotlinnlp.simplednn.core.arrays.ParamsArray,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.losses.SoftmaxCrossEntropyCalculator: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateLoss(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: float getValue()
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: boolean equals$default(float,float,float,int,java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention: MultiHeadAttention(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType: kotlin.enums.EnumEntries getEntries()
com.kotlinnlp.utils.AbstractBiMap: boolean containsKey(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$5: DenseNDArrayFactory$random$$inlined$rand$5(kotlin.jvm.functions.Function0)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters getParams()
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworksPool: AttentionNetworksPool(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom: float next()
com.kotlinnlp.simplednn.core.functionalities.decaymethods.ExponentialDecay: ExponentialDecay(float,float,int)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN$Companion: com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$NesterovMomentumConfig: UpdateMethodConfig$NesterovMomentumConfig()
com.kotlinnlp.simplednn.core.layers.StackedLayers: void propagateRelevance(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,com.kotlinnlp.simplednn.core.arrays.DistributionArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(float)
com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector: void clear()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: BatchNormLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: int getNumberOfLayers()
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.ProductMerge: ProductMerge()
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters: int getNInputs()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray zeros()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$Companion: SparseBinaryNDArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: java.util.List subList(int,int)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors buildDenseErrors$default(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getFirstOrderMoments()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: int argMaxIndex(java.util.Set)
com.kotlinnlp.simplednn.core.layers.LayerInterface: boolean equals(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: java.lang.Object remove(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray exp()
com.kotlinnlp.simplednn.helpers.Trainer: void dumpModel()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray roundInt$default(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float,int,java.lang.Object)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Integer,float,com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray oneHotEncoder(int,int)
com.kotlinnlp.simplednn.core.layers.Layer: void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RMSPropConfig: UpdateMethodConfig$RMSPropConfig()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors getInputErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineForwardHelper: AffineForwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray arrayOf(kotlin.Pair[],com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: float getEpsilon()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardRelevanceHelper: com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: float min()
com.kotlinnlp.simplednn.core.arrays.ParamsArray: com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors buildDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray normalize()
com.kotlinnlp.simplednn.core.functionalities.activations.ReLU: float df(float)
com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers: com.kotlinnlp.simplednn.core.layers.StatesWindow getStatesWindow()
com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid: float df(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(float)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters: int getOutputSize()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: java.util.List getParamsErrors(boolean)
com.kotlinnlp.utils.WordPieceTokenizer: java.util.List tokenize$default(com.kotlinnlp.utils.WordPieceTokenizer,java.lang.String,int,java.util.Set,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: int getLength()
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors$Companion: ParamsErrorsAccumulator$AccumulatedParamsErrors$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: int component1()
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.BiaffineMerge: BiaffineMerge(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters$Companion: SquaredDistanceLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputGate2()
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: com.kotlinnlp.simplednn.deeplearning.attention.han.HAN getModel()
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention: int getNumOfHeads()
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray1$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig: float getEpsilon()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: BiRNNEncoder(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.util.List getInputErrors(boolean)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: DeltaRNNLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray oneHotEncoder(int,int)
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator: float getPi()
com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors: ParamsArray$Errors(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getCandidate()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray eye(int)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.functionalities.losses.MSECalculator: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateLoss(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: int getDRoles()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: java.util.List forward(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters: HighwayLayerParameters(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: Threshold()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessorsPool: com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFForwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(float)
com.kotlinnlp.simplednn.helpers.Statistics$Simple: java.lang.String toString()
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor: boolean getPropagateToInput()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer: AttentionMechanismLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.core.neuralnetwork.preset.IndRNNNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters: com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters getAttentionParams()
com.kotlinnlp.utils.AbstractBiMap: java.lang.Object remove(java.lang.Object)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(int,boolean)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig: UpdateMethodConfig$ADAMConfig(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTBaseImportHelper: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel buildModel(java.util.Map,com.kotlinnlp.utils.DictionarySet,int)
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: float f(float)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers getPrevState$advancedml_release()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(boolean)
com.kotlinnlp.simplednn.core.layers.LayerParameters: int getInputSize()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRelevancePartition2$default(com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,int,java.lang.Object)
com.kotlinnlp.simplednn.helpers.Trainer: void learnFromExample(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRange(int,int)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignExp()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: int getAttentionOutputSize()
com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getInputNetwork()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig: float getEpsilon()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float)
com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.StackedLayers: void setParamsErrorsCollector(com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: LearningRateMethod(float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMerge()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig: float getBeta1()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: int getLength()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: java.lang.Integer get(int)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: java.util.List forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: int[] getRowIndices()
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getImportanceScore$default(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.util.List getInputsErrors(boolean)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.core.arrays.ActivableArray clone()
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit: void addRecurrentContribution(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$Companion: BERTModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: float df(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANRelevanceHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer getLayer()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: int getId()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength: float getWeight$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: void backward(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: boolean isVector()
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getOutputArray()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.LayerType$Input: com.kotlinnlp.simplednn.core.layers.LayerType$Input[] values()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: int hashCode()
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getBS()
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(java.util.List,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: NewRecirculationLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters$Companion: CFNLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.utils.stats.MetricCounter: void setFalsePos(int)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: int hashCode()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm: void clip(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: void getRelevanceHelper$advancedml_release$annotations()
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer: com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters$Companion: AvgLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMForwardHelper: void forward()
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: float getMomentum()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getForgetGate()
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: Shape(int,int,int,kotlinx.serialization.internal.SerializationConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,boolean)
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: void accumulate$default(com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator,java.util.List,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: boolean getPropagateToInput()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNUtils: kotlin.Pair splitErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: NormLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters$Companion: IndRNNLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.utils.HashBiMap$Companion: com.kotlinnlp.utils.HashBiMap create(java.util.Map)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray reverseSub(float)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer: HighwayLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom: long getSeed()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters: int getAttentionSize()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters$Companion: DeltaRNNLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod: AdaGradMethod()
com.kotlinnlp.utils.BaseExtensionsKt: java.lang.Object removeAtIndexOfFirst(java.util.List,kotlin.jvm.functions.Function1)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: void newEpoch()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: float avg()
com.kotlinnlp.utils.BiMap: java.util.Set getValues()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: java.util.Set getKeys()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: int lastIndexOf(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignProd(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator)
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.VariableOutputMergeConfig: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getActivationFunction()
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.activations.ReLU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls: java.util.List getRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$5: java.lang.Object invoke(java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: float getBeta()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: void set(int,java.lang.Number)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: void assignRelevance(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.simplednn.core.functionalities.losses.SoftmaxCrossEntropyCalculator: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: boolean equals(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray getT()
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: IndRNNLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers: com.kotlinnlp.simplednn.core.layers.Layer getPrevState()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap getPositionalEmb()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: void setParams(java.util.Map)
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: RMSPropMethod()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getValues()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters: int getAttentionOutputSize()
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: float dfOptimized(float)
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: AttentionLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention: int getOutputSize()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: MomentumMethod()
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: void accumulate(com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.List)
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray exp()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig: float getBeta2()
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance(int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgForwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters: GRULayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.radam.RADAMMethod: RADAMMethod()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: void add(int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.activations.Tanh: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: int getSize()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom: BaseRandom(boolean,long)
com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer: void initialize(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getKeys()
com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceHelper: void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: int getId()
com.kotlinnlp.simplednn.core.functionalities.initializers.ConstantInitializer: void initialize(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig: com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization getRegularization()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: java.util.Map getActiveIndicesByColumn()
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: float df(float)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer: ConcatFFLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator)
com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer: ParamsOptimizer(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNForwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer getLayer()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap getFuncEmb()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig: float getBeta2()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper: java.util.List getVectorsErrors$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray eye(int,org.jetbrains.kotlinx.multik.ndarray.data.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: boolean equals(java.lang.Object,float)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: java.lang.Number get(int,int)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceBackwardHelper: void execBackward(boolean)
com.kotlinnlp.utils.WordPieceTokenizer: java.lang.String getSplitPrefix()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: java.util.Iterator iterator()
com.kotlinnlp.utils.BaseExtensionsKt: float toFixed(float,int)
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink$Companion: Softshrink$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: int getColumns()
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.R: R()
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random$default(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory,com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float,int,java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: HANEncoder(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,boolean,float,float,float,java.lang.Float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray div(float)
com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType: com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType valueOf(java.lang.String)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: java.util.List getInputErrors(boolean)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.utils.WordPieceTokenizer: WordPieceTokenizer(com.kotlinnlp.utils.DictionarySet,java.lang.String,java.lang.String)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory getFactory()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.core.arrays.ActivableArray: ActivableArray(int)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: java.util.List getLayers()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: MultiTaskNetworkConfig(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel: PointerNetworkModel(int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.LayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters: java.util.List getBiRNNs()
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer: com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters getParams()
com.kotlinnlp.utils.AbstractBiMap: boolean isEmpty()
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getAttentionScores()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray copy()
com.kotlinnlp.simplednn.helpers.Counter: Counter()
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator: AugmentedMSECalculator(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayForwardHelper: HighwayForwardHelper(com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray exp()
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(float[],com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType)
com.kotlinnlp.simplednn.core.layers.Layer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: float getLearningRate()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer: void accumulateErrors()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: NewRecirculationLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,float)
com.kotlinnlp.simplednn.core.neuralnetwork.preset.LSTMNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: boolean removeAll(java.util.Collection)
com.kotlinnlp.simplednn.core.arrays.DistributionArray$Companion: com.kotlinnlp.simplednn.core.arrays.DistributionArray oneHot(int,int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(float)
com.kotlinnlp.simplednn.core.layers.models.LinearParams$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.utils.stats.MetricCounter: MetricCounter()
com.kotlinnlp.simplednn.helpers.Trainer: void newBatch()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: java.lang.Object remove(int)
com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.neuralnetwork.preset.GRUNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer: AvgLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters)
com.kotlinnlp.simplednn.helpers.Counter: float component4()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputGate3()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getCell()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: int getInputSize()
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getRightToLeft()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getForgetGate()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.RANNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.RANNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getHiddenActivation()
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold$Companion: Threshold$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: boolean getPropagateToInput()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: HierarchyGroup(java.util.ArrayList,com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem[])
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction: float dfOptimized(float)
com.kotlinnlp.simplednn.core.layers.LayerParameters$Companion: LayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.utils.AbstractBiMap: java.util.Map access$getDirect$p(com.kotlinnlp.utils.AbstractBiMap)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: SeLU(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$AdaGradConfig: float getEpsilon()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: NesterovMomentumMethod(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator: AugmentedMSECalculator(float,float)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dotRightMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.utils.DictionarySet: DictionarySet()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray eye(int)
com.kotlinnlp.simplednn.core.layers.LayerInterface$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.kotlinnlp.utils.AbstractBiMap: void putAll(java.util.Map)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray oneHotEncoder(int,int)
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSqrt()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: void access$setValues$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,float[])
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters: MultiHeadAttentionParameters(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$Companion: kotlinx.serialization.KSerializer serializer()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$1: java.lang.Object invoke()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray zeros()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: int getId()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport: boolean equals(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: java.lang.String toString()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel access$getModel$p(com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignLog10()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: kotlin.Pair getLastOutput(boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getW1()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel: java.util.List getOutputConfigurations()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List getInputsSequenceErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray normalize2()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN$Companion: BiRNN$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.losses.MSECalculator: float calculateMeanLoss(java.util.List,java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: boolean add(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLog10()
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANRelevanceHelper: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray copy()
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: void backward(java.lang.Object)
com.kotlinnlp.utils.MutableBiMap: com.kotlinnlp.utils.MutableBiMap getInverse()
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: int getId()
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductBackwardHelper: ProductBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.utils.WordPieceTokenizer: java.util.List tokenize$default(com.kotlinnlp.utils.WordPieceTokenizer,kotlin.sequences.Sequence,int,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration: com.kotlinnlp.simplednn.core.layers.LayerType$Connection getType()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance$default(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: BatchFeedforwardProcessor(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANRelevanceHelper: void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: java.lang.Object[] toArray(java.lang.Object[])
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer: AffineLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getCell()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getOutputActivation()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext: void backward(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN: int getInputSize()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getCandidate()
com.kotlinnlp.utils.BaseExtensionsKt: java.util.List combine(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceForwardHelper: SquaredDistanceForwardHelper(com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer)
com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: void setAttention$advancedml_release(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: int getLastIndex()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory getFactory()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessorsPool: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray abs()
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters: java.util.List getW()
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncodersPool: BiRNNEncodersPool(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,java.util.ArrayList,java.util.List,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getBiRNNsActivation()
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: java.util.List forward(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sign()
com.kotlinnlp.simplednn.core.functionalities.regularization.L2Regularization: L2Regularization(float)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getHiddenActivation()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: java.util.List forward(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getDev$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float)
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters$Companion: ConcatLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.utils.WordPieceTokenizer: java.util.List tokenize(java.lang.String,int,java.util.Set)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceForwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: float getBeta2()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters: NewRecirculationLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: StackedLayersParameters(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.utils.stats.MetricCounter: int getTruePos()
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: SeLU(float,float)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getClassifier()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignPow(float)
com.kotlinnlp.utils.BaseExtensionsKt: java.util.Collection notEmptyOr(java.util.Collection,kotlin.jvm.functions.Function0)
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatVectorsV(java.util.List)
com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer: void newExample()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray roundInt(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: boolean equals(java.lang.Object)
com.kotlinnlp.simplednn.core.arrays.ActivableArray: void set_valuesNotActivated(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: java.util.List getColumns()
com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers: RecurrentStackedLayers(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,com.kotlinnlp.simplednn.core.layers.StatesWindow)
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters getParams()
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor: ChainProcessor(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.util.List,com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: void accumulate$default(com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator,com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.StatesWindow: StatesWindow()
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters: MultiHeadAttentionParameters(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: void vectorize(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: LearningRateMethod(float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateRelevance$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,int,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.LayerParameters: LayerParameters(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,kotlinx.serialization.internal.SerializationConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(float)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float)
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer: com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$$serializer: LernaEmbeddingsMap$$serializer(kotlinx.serialization.KSerializer)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer: void learnFromExample(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters$Companion: CosineLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: BiaffineLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray roundInt(float)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.Layer: void setInput(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.helpers.Counter: void newEpoch()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: int argMaxIndex(java.util.Set)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: void backward(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer: com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessorsPool: FeedforwardNeuralProcessorsPool(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignExp()
com.kotlinnlp.utils.WordPieceTokenizer: java.util.List piecesToWords(java.util.List)
com.kotlinnlp.simplednn.core.layers.LayerInterface$$serializer: com.kotlinnlp.simplednn.core.layers.LayerInterface deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRecurrentRelevance()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: void clear()
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentBackwardHelper: SimpleRecurrentBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: int getTimeStep()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getDevStdDev$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: java.util.List getOutputArrays()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubForwardHelper: SubForwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: int getId()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: BiaffineLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.utils.AbstractBiMap: com.kotlinnlp.utils.MutableBiMap getInverse()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.helpers.Evaluator: void evaluate(java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRow(int)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig: UpdateMethodConfig$RADAMConfig()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: float sum()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionForwardHelper: ScaledDotAttentionForwardHelper(com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer)
com.kotlinnlp.simplednn.core.layers.StackedLayers: void setCurLayerIndex(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignRoundInt(float)
com.kotlinnlp.utils.DictionarySet: java.util.List getElements()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence: com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers getStateStructure(int)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: void backward(java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: void clear()
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters: ProductLayerParameters(int,int)
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping: GradientClipping(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getForgetGate()
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: void write$Self(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor,kotlinx.serialization.KSerializer)
com.kotlinnlp.simplednn.core.layers.Layer: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getActivationFunction()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray eye(int)
com.kotlinnlp.simplednn.core.functionalities.losses.SoftmaxCrossEntropyCalculator: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: void backward(java.util.List)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure: LearningRateStructure(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters: java.util.List getInputsSize()
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask: NDArrayMask(int[],int[])
com.kotlinnlp.simplednn.helpers.Statistics$Simple: void reset()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dotLeftMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters$Companion: PointerNetworkParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer: SumLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNForwardHelper: void forward()
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU$Companion: LeakyRELU$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.radam.RADAMMethod: RADAMMethod(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters: ConcatFFLayerParameters(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: java.util.List getRANImportanceScores()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: java.util.ListIterator listIterator(int)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignRoundInt(float)
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor: boolean getPropagateToInput()
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: int argMaxIndex(int)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: NesterovMomentumMethod(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: float dfOptimized(float)
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor: int getId()
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(float[],com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFBackwardHelper: ConcatFFBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: BiaffineLayer(com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNForwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer getLayer()
com.kotlinnlp.simplednn.helpers.Statistics: void setAccuracy(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sign()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: java.util.List forward(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: boolean getPropagateToInput()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters: LSTMLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$DefaultImpls: java.util.List getParamsErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: float min()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: boolean containsAll(java.util.Collection)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure$Companion: kotlinx.serialization.KSerializer serializer()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSqrt()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: float access$getAttentionDropout$p(com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List getInputsErrors(int,boolean)
com.kotlinnlp.simplednn.helpers.Counter: void reset()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel getModel()
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.utils.HashBiMap: java.util.Collection values()
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.helpers.Counter: Counter(int,int,int,float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: BERTModel(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer: com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters getParams()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray set$default(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,int,com.kotlinnlp.simplednn.core.arrays.ParamsArray,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer: MergeLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: int getId()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: void backward(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: SimpleRecurrentLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit,com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN$Companion: HAN$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters getParams()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRANImportanceScores(int)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray pow(float)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessorsPool: RecurrentNeuralProcessorsPool(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.losses.MulticlassMSECalculator: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters getModel()
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: StackedLayersParameters(java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.helpers.Trainer: void newExample()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getInputGate()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.utils.ItemsPool: com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray copy()
com.kotlinnlp.simplednn.core.functionalities.activations.ReLU: float f(float)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentRelevanceHelper: void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters: BatchNormLayerParameters(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getCell()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray log10()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.neuralnetwork.preset.IndRNNNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.IndRNNNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object)
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: void accumulate(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: boolean getPropagateToInput()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMergeParams()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ln()
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator: com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength getInjectedErrorStrength()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters: LSTMLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineForwardHelper: void forward()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getBR()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.LayerInterface: com.kotlinnlp.simplednn.core.layers.LayerInterface copy(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet$default(com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap,java.lang.Integer,float,com.kotlinnlp.simplednn.core.arrays.ParamsArray,int,java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer: kotlin.random.Random access$getReplaceRandom$cp()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ln()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(float)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray reverseSub(float)
com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper: void forward()
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: float dfOptimized(float)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN: int getOutputSize()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sub(float)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters$Companion: HighwayLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters: void setParams(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer getLayer()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: NesterovMomentumMethod()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getInputGate()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.SimpleRecurrentNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.SimpleRecurrentNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters: NewRecirculationLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: java.util.Map getEmbeddings()
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams: com.kotlinnlp.simplednn.core.arrays.ParamsArray getRecurrentWeights()
com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer$Companion: GlorotInitializer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters: ScaledDotAttentionLayerParameters(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: float getEpsilon()
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: float df(float)
com.kotlinnlp.utils.AbstractBiMap: java.lang.Object get(java.lang.Object)
com.kotlinnlp.utils.DictionarySet: int add(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer: com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.GenericNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters$Companion: HANParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: java.util.List getUsedAttentionMechanisms$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport: com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport copy$default(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport,int,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignLog10()
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDiv(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray getRow(int)
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNForwardHelper: CFNForwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: float dfOptimized(float)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismForwardHelper: void forward()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(float)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer: com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: int getHiddenSize()
com.kotlinnlp.simplednn.core.layers.Layer: boolean getSparseInput()
com.kotlinnlp.simplednn.helpers.Statistics$Simple: Statistics$Simple()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray zerosLike()
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRelevance()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: StackedLayersParameters(com.kotlinnlp.simplednn.core.layers.LayerInterface[],com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List getInputsErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,int,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.LayerInterface$Companion: LayerInterface$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: int getOutputSize()
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardBackwardHelper: FeedforwardBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer)
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: float getLambda()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: void backward(java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken: java.util.Map access$getTokensByForm$cp()
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: float getAlpha()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRange(int,int)
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper: void addInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getWInR()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: void set(int,int,java.lang.Number)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors getInputErrors(boolean)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: boolean getPropagateToInput()
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor: com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor getInputProcessor()
com.kotlinnlp.simplednn.core.layers.models.LinearParams: int getOutputSize()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getW2()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper: BatchNormForwardHelper(com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: boolean equals(java.lang.Object,float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters: LTMLayerParameters(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls: boolean equals$default(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.initializers.ConstantInitializer$Companion: ConstantInitializer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANBackwardHelper: RANBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer)
com.kotlinnlp.utils.Timer: void reset()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: int getInputSize()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormForwardHelper: void forward()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: java.lang.Number get(int,int)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper: java.util.List getInputSequenceErrors$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sqrt(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention$Companion: MultiHeadAttention$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: java.util.List getInputErrors$default(com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: java.util.List splitV(int[])
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom: GaussianDistributedRandom()
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: ELU(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getX()
com.kotlinnlp.simplednn.core.functionalities.activations.ReLU: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: float norm2()
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: MomentumMethod(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: java.lang.Object set(int,java.lang.Object)
com.kotlinnlp.utils.Shuffler: void invoke(int[])
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.functionalities.decaymethods.ExponentialDecay: float update(float,int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.utils.ItemsPool: int getSize()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.ForwardHelper: ForwardHelper(com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$AdaGradConfig: UpdateMethodConfig$AdaGradConfig()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: java.util.List getColumns()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters$Companion: BatchNormLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.Softsign: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.arrays.DistributionArray$Companion: com.kotlinnlp.simplednn.core.arrays.DistributionArray uniform(int)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: void backward(java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: float f(float)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: void write$Self(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ln()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: PointerNetworkProcessor(com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel,int)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: int getLength()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: void setInputs(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFForwardHelper: ConcatFFForwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer: FeedforwardLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$Companion: kotlinx.serialization.KSerializer serializer(kotlinx.serialization.KSerializer)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer: com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getPartition()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize()
com.kotlinnlp.simplednn.core.arrays.ParamsArray: com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors buildSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: boolean isVector()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignRoundInt(float)
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: void backward(java.util.List)
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator: void setInjectedErrorStrength(com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength)
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: int getId()
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: com.kotlinnlp.simplednn.core.layers.LayerType$Connection getBiRNNsConnectionType()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: float norm2()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod: UpdateMethod(com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List getInitHiddenErrors()
com.kotlinnlp.utils.AbstractBiMap: java.util.Set getKeys()
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: com.kotlinnlp.simplednn.core.layers.models.attention.AttentionForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ones()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator)
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: float cosineSimilarity(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.AffineMerge: AffineMerge(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors()
com.kotlinnlp.utils.AbstractBiMap: java.util.Set entrySet()
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceBackwardHelper: SquaredDistanceBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer)
com.kotlinnlp.simplednn.core.functionalities.activations.GeLU: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getC()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getImaginaryOutput()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel: com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkParameters getParams()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: com.kotlinnlp.utils.DictionarySet getVocabulary()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List getInputsSequenceErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RANImportanceHelper: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getImportanceScores(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory getFactory()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray roundInt(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters: SimpleRecurrentLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$1: DenseNDArrayFactory$random$$inlined$rand$1()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(float)
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors: com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors copy()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: BiRNN(com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection valueOf(java.lang.String)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: int getId()
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardForwardHelper: void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters: MergeLayerParameters(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.functionalities.activations.GeLU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: LeakyRELU(float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessorsPool: RecurrentNeuralProcessorsPool(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getOutputArray()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters: DeltaRNNLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: void backward(java.lang.Object)
com.kotlinnlp.simplednn.helpers.Evaluator: Evaluator(java.lang.Iterable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper: void backward(java.util.List)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: boolean equals(java.lang.Object)
com.kotlinnlp.simplednn.helpers.Counter: void newBatch()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,float)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: float norm()
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray remove(int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer: ConcatFFLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: boolean getPropagateToInput()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.losses.LossesUtilsKt: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getErrorsByHingeLoss$default(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,float,int,java.lang.Object)
com.kotlinnlp.utils.DictionarySet$Factory: DictionarySet$Factory(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getTransformGate()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: RMSPropMethod(float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters: FeedforwardLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention: java.util.List getAttention()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getResetGate()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: java.lang.Object[] toArray(java.lang.Object[])
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationForwardHelper: com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters$Companion: BiaffineLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray normalize2()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getDenseErrors()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls: int argMaxIndex$default(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,int,int,java.lang.Object)
com.kotlinnlp.utils.DictionarySet: int getCount(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory getFactory()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray nonZeroSign()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.arrays.ActivableArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValuesByProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$$serializer: com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANForwardHelper: RANForwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer)
com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper: void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineForwardHelper: CosineForwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer)
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.Softmax: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters$Companion: FeedforwardLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod: AdaGradMethod(float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: boolean isNotEmpty()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer getLayer()
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom: float getRadius()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.layers.LayerInterface: com.kotlinnlp.simplednn.core.layers.LayerType$Connection component3()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.radam.RADAMMethod: RADAMMethod(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(float)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.ELU$Companion: ELU$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: BatchFeedforwardProcessor(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper: com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray div(float)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper: ScaledDotAttentionBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext: void backward(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getColumn(int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentRelevanceHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUBackwardHelper: GRUBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getB()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray pow(float)
com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer: ParamsOptimizer(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod,com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: java.util.List getInputsSize()
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceHelper: DeltaRNNRelevanceHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters: int getInputSize1$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer getLayer()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(boolean)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: EmbeddingsMap(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor: java.util.List getHiddenProcessors()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters$Companion: MultiHeadAttentionParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext: EmbeddingsProcessorWithContext(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,com.kotlinnlp.simplednn.core.arrays.ParamsArray,float)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters getModel()
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: void setWordEmb(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem propagateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLog10()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$MomentumConfig: com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUForwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer getLayer()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors: java.util.List getInputSequenceErrors()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure: com.kotlinnlp.simplednn.simplemath.ndarray.Shape getShape()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignPow(float)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignDiv(float)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: BiRNNEncoder(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,boolean,float,int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$NesterovMomentumConfig: UpdateMethodConfig$NesterovMomentumConfig(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel$Companion: PointerNetworkModel$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: java.lang.Number get(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRow(int)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN: java.util.List getLevels()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters: int getInputSize()
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray2$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid: float dfOptimized(float)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$MomentumConfig: UpdateMethodConfig$MomentumConfig()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: void setFuncEmb(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap)
com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper: void setParamsErrorsCollector(com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getInputGate2()
com.kotlinnlp.simplednn.helpers.Counter: void setBatch(int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: CFNLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,java.util.List)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: int getOutputSize()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$NesterovMomentumConfig: float getMomentum()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: int getNSymbols()
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.utils.DictionarySet$Factory: com.kotlinnlp.utils.DictionarySet invoke(kotlin.sequences.Sequence)
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: float dfOptimized(float)
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: void backward(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getWRecS()
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: int getDim1()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: int getCount()
com.kotlinnlp.simplednn.helpers.Evaluator: com.kotlinnlp.simplednn.helpers.Statistics evaluate()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: GRULayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: float norm2()
com.kotlinnlp.utils.Regex: kotlin.text.Regex getNumbers()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(float)
com.kotlinnlp.simplednn.core.functionalities.losses.SoftmaxCrossEntropyCalculator: java.util.List calculateErrors(java.util.List,java.util.List)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceHelper: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncodersPool: com.kotlinnlp.simplednn.deeplearning.attention.han.HAN getModel()
com.kotlinnlp.simplednn.core.arrays.AugmentedArrayExtensionsKt: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputErrors(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.utils.BaseExtensionsKt: java.util.List replace(java.util.List,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: Threshold(float,float)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig: float getStepSize()
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer: void setInput(int,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismBackwardHelper: AttentionMechanismBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence: int getLength()
com.kotlinnlp.utils.AbstractBiMap: java.util.Set values()
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: com.kotlinnlp.simplednn.core.layers.models.attention.AttentionBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters$Companion: SumLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray oneHotEncoder(int,int)
com.kotlinnlp.simplednn.core.layers.LayerInterface$Companion: kotlinx.serialization.KSerializer serializer()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getT()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: java.lang.String toString()
com.kotlinnlp.simplednn.core.layers.models.LinearParams$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: BatchFeedforwardProcessor(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray randomize(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator)
com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers: RecurrentStackedLayers(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,com.kotlinnlp.simplednn.core.layers.StatesWindow)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters: BatchNormLayerParameters(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: boolean isMatrix()
com.kotlinnlp.simplednn.core.layers.StackedLayers: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters)
com.kotlinnlp.simplednn.core.functionalities.activations.GeLU: float dfOptimized(float)
com.kotlinnlp.simplednn.core.functionalities.initializers.RandomInitializer: void initialize(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: void backward(java.lang.Object)
com.kotlinnlp.simplednn.core.arrays.ActivableArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateActivationDeriv()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: java.lang.String toString()
com.kotlinnlp.simplednn.helpers.Trainer: java.lang.String getModelFilename()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask getDropoutMaskFull$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSqrt()
com.kotlinnlp.simplednn.core.arrays.ParamsArray: com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors buildDefaultErrors()
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$Companion: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray invoke(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float[],int[],int[])
com.kotlinnlp.utils.BaseExtensionsKt: java.util.List removeFrom(java.util.List,int)
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$DefaultImpls: float df(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,float)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: BERTLayer(com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMergeNetwork()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getColumn(int)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getInputGate()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.simplednn.core.layers.StatesWindow: com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers getPrevState$advancedml_release()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.HighwayNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.AvgMerge: AvgMerge()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: java.util.Map getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray getRange(int,int)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getOutputGate()
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: Shape(int,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$Companion: LernaEmbeddingsMap$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.LayerInterface: LayerInterface(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sqrt(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.utils.stats.MetricCounter: void reset()
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildPositionalEncoding(com.kotlinnlp.simplednn.deeplearning.transformers.BERT,int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: SparseBinaryNDArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,java.util.Map,java.util.Map,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgForwardHelper: AvgForwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer)
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getBhOut()
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: float getLambda()
com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh: float dfOptimized(float)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.core.arrays.AugmentedArrayExtensionsKt: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: float getAlpha()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRForwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: com.kotlinnlp.simplednn.simplemath.ndarray.Shape copy$default(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,int,int,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: int argMaxIndex(java.util.Set)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$Companion: kotlinx.serialization.KSerializer serializer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRForwardHelper: void forward()
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.Shape getShape()
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: CeLU()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: int indexOf(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters: GRULayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNForwardHelper: void forward()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray reverseSub(float)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray removeAt(int)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zerosLike()
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.BaseRandom: BaseRandom(boolean,long,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: float getAlpha()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: java.util.List getInputSequence$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport getRelevanceSupport()
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: void accumulate(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors,boolean)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getUnit()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayerParameters getParams()
com.kotlinnlp.simplednn.core.functionalities.activations.Tanh: float f(float)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: DeepBiRNNEncoder(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,float,float,boolean,int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow getLayersWindow()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sqrt()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: java.lang.String toString()
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: Softshrink()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: boolean isVector()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.arrays.Norm1Array: com.kotlinnlp.simplednn.core.arrays.Norm1Array clone()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.utils.MutableBiMap: java.util.Set getValues()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.CFN: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: float getDecay()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.LSTMNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.LSTMNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getStateContributions(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: boolean isOneHotEncoder()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.arrays.ParamsArray$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.kotlinnlp.simplednn.core.arrays.ActivableArray: boolean getHasActivation()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.functionalities.decaymethods.HyperbolicDecay: HyperbolicDecay(float,float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: float getScale()
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper: RelevanceHelper(com.kotlinnlp.simplednn.core.layers.Layer)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputNetwork()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.Layer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.helpers.Counter: com.kotlinnlp.simplednn.helpers.Counter copy$default(com.kotlinnlp.simplednn.helpers.Counter,int,int,int,float,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sub(float)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: BiRNNConfig(com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getRealInput()
com.kotlinnlp.utils.BaseExtensionsKt: void forEachIndicesRange(java.util.List,int,int,kotlin.jvm.functions.Function1)
com.kotlinnlp.simplednn.core.arrays.ActivableArray: com.kotlinnlp.simplednn.core.arrays.ActivableArray clone()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: int getId()
com.kotlinnlp.utils.DictionarySet$getElementsReversedSet$$inlined$sortedByDescending$1: int compare(java.lang.Object,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: java.lang.Float get(int,int)
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters: ConcatLayerParameters(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(float)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray map(kotlin.jvm.functions.Function1)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRecurrentErrors(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams)
com.kotlinnlp.simplednn.helpers.Counter: java.lang.String toString()
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceForwardHelper: DistanceForwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getOutput(boolean)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors buildSparseErrors$default(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int,java.lang.Object)
com.kotlinnlp.simplednn.utils.scheduling.EpochScheduling: void newEpoch()
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sign()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: float max()
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm: GradientClipping$byNorm(float,int)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext: EmbeddingsProcessorWithContext(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,com.kotlinnlp.simplednn.core.arrays.ParamsArray,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.LayerType$Property: com.kotlinnlp.simplednn.core.layers.LayerType$Property valueOf(java.lang.String)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray roundInt(float)
com.kotlinnlp.simplednn.helpers.Trainer: void train()
com.kotlinnlp.utils.ShuffledIndices: java.util.Iterator iterator()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: void add(int,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignLn()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: java.util.Map getActiveIndicesByRow()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters: NormLayerParameters(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors: void accumulate(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors)
com.kotlinnlp.simplednn.helpers.Trainer: java.util.Iterator buildExamplesIterator()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: float getBeta1()
com.kotlinnlp.simplednn.core.functionalities.activations.ReLU: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getOutput$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(float)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters: int getAttentionSize()
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Property getProperty()
com.kotlinnlp.simplednn.core.arrays.AugmentedArray$Companion: AugmentedArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: java.util.List getModel()
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus$Companion: Softplus$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer: com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: java.util.List forward(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters: DistanceLayerParameters(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray eye(int)
com.kotlinnlp.simplednn.core.functionalities.activations.Softsign: float df(float)
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,float)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: int getNum_features()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sum(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLog10()
com.kotlinnlp.simplednn.core.arrays.ParamsArray$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List getCurState$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworksPool: com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork itemFactory(int)
com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper: void forwardArray$default(com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: float getLearningRate()
com.kotlinnlp.simplednn.helpers.Evaluator: java.lang.Iterable getExamples$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit: void assignParamsGradients(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: java.util.List getInputArrays()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray pow(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: java.util.List getColumns()
com.kotlinnlp.simplednn.core.layers.LayerInterface: com.kotlinnlp.simplednn.core.layers.LayerType$Input getType()
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: java.util.List getAttentionErrors()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext: java.util.List forward(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardRelevanceHelper: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: SimpleRecurrentLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit,com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom: boolean getEnablePseudoRandom()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer: ConcatLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(float)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: boolean add(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNUtils: java.util.List sumBidirectionalErrors(java.util.List,java.util.List)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure: MomentumStructure(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getUnknownEmbedding()
com.kotlinnlp.simplednn.helpers.Trainer: Trainer(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignLn()
com.kotlinnlp.utils.BaseExtensionsKt: java.util.List toByteList(java.lang.String,java.nio.charset.Charset)
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: void assignSum(java.util.List,java.util.List)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getNullEmbedding()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: void setForwardCount$advancedml_release(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: float getQ()
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.GaussianDistributedRandom: float getVariance()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray arrayOf(kotlin.Pair[],com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer: void getRelevanceHelper$advancedml_release$annotations()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: java.util.List forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor,java.util.List,java.util.Map,java.util.List,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: java.lang.Float get(int,int)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getMean$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray getRow(int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNForwardHelper: void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: int getInputSize()
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: kotlin.enums.EnumEntries getEntries()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sign()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: java.util.Set getKeys()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: boolean isOneHotEncoder()
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(int,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,java.lang.String,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure,kotlinx.serialization.internal.SerializationConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters$Companion: NormLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.arrays.DistributionArray: DistributionArray(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls: boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,java.lang.Object,float)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List getOutputSequence$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardForwardHelper: com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNBackwardHelper: IndRNNBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer)
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: boolean equals$default(float[],float[],float,int,java.lang.Object)
com.kotlinnlp.utils.WordPieceTokenizer: com.kotlinnlp.utils.DictionarySet getVocabulary()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: boolean remove(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: boolean equals(java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm$Companion: GradientClipping$byNorm$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: CosineLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention: MultiHeadAttention(int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.LayerParameters: void setParams(java.util.List,java.util.List)
com.kotlinnlp.simplednn.helpers.Trainer: void accumulateErrors()
com.kotlinnlp.utils.HashBiMap: HashBiMap(int)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.Layer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.StackedLayers: java.util.List getLayers()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRForwardHelper: TPRForwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters: ConcatFFLayerParameters(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper: void execBackward$default(com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: int getNRoles()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: int getForwardCount$advancedml_release()
com.kotlinnlp.utils.DictionarySet: java.lang.Integer getId(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$LinearIndicesIterator: kotlin.Pair next()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: java.util.List getInputsErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineForwardHelper: void forward()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters getModel()
com.kotlinnlp.simplednn.core.layers.Layer: boolean getDenseInput()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters$Companion: BERTParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.Threshold: float f(float)
com.kotlinnlp.simplednn.core.functionalities.decaymethods.ExponentialDecay: float getInitLearningRate()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters: LTMLayerParameters(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer: void setRecurrentRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(float)
com.kotlinnlp.utils.DictionarySet: int getSize()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zerosLike()
com.kotlinnlp.simplednn.core.functionalities.regularization.MaxNormRegularization: void apply(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormForwardHelper$Companion: BatchNormForwardHelper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom: float next()
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: boolean getPropagateToInput()
com.kotlinnlp.simplednn.helpers.Statistics$special$$inlined$observable$1: void afterChange(kotlin.reflect.KProperty,java.lang.Object,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.LayerInterface: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction component4()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardRelevanceHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: float getLearningRate()
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: int getRows()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.Shape getShape()
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrorsByDotT(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer: com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getQueries()
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator$AccumulatedParamsErrors: ParamsErrorsAccumulator$AccumulatedParamsErrors(com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors,boolean,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$$serializer: com.kotlinnlp.simplednn.simplemath.ndarray.Shape deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.core.layers.LayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport: int getOutputSize()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getBindingMatrix()
com.kotlinnlp.simplednn.core.arrays.ParamsArray$$serializer: com.kotlinnlp.simplednn.core.arrays.ParamsArray deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters$Companion: GRULayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters$Companion: AffineLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromRows(java.util.List)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray get(java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.activations.GeLU: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNBackwardHelper: DeltaRNNBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: float getStdDev$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getCandidateWeights()
com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors: com.kotlinnlp.simplednn.core.arrays.ParamsArray getRefParams()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: java.util.List getInputErrors(boolean)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod$Companion: UpdateMethod$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: java.lang.Object[] toArray()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: float sum()
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: int component3()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sqrt()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor getMergeProcessor$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$NesterovMomentumConfig: com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod()
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceBackwardHelper: DistanceBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: BiRNNConfig(int,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlinx.serialization.internal.SerializationConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel: com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters$Companion: BiRNNParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSqrt()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: float max()
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: java.lang.Float get(int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNBackwardHelper: CFNBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMForwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer getLayer()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer$Companion: BERTTrainer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer getLayer()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: void setTimeStep(int)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: int getLastIndex()
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit: RecurrentLayerUnit(int)
com.kotlinnlp.simplednn.core.arrays.DistributionArray$Companion: DistributionArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray arrayOf(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncodersPool: HANEncodersPool(com.kotlinnlp.simplednn.deeplearning.attention.han.HAN,float,float,float,boolean,java.lang.Float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer: com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateRelevanceOfDenseArray(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig: UpdateMethodConfig$ADAMConfig(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(float)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getModel()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray log10()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$MomentumConfig: UpdateMethodConfig$MomentumConfig(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: float getAlpha()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: java.util.Iterator iterator()
com.kotlinnlp.simplednn.core.layers.Layer: void setParamsErrorsCollector(com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RADAMConfig: UpdateMethodConfig$RADAMConfig(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessorsPool: FeedforwardNeuralProcessorsPool(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$5: java.lang.Number invoke(int)
com.kotlinnlp.simplednn.core.functionalities.activations.Softsign: float f(float)
com.kotlinnlp.simplednn.core.layers.LayerFactory: com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow)
com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentLayer: void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters: java.util.List getParamsPerBiRNN()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: boolean equals(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateRelevanceOfArray(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getUnknownEmbedding()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDotLeftMasked(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: RecurrentNeuralProcessor(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$MomentumConfig: UpdateMethodConfig$MomentumConfig(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport: int component1()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: com.kotlinnlp.simplednn.core.layers.LayerType$Connection getConnectionType()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.util.List getInputsErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: boolean equals(java.lang.Object)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRUForwardHelper: void forward()
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: com.kotlinnlp.simplednn.core.layers.LayerParameters getLayerParams(int)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANRelevanceHelper: RANRelevanceHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig copy$default(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismForwardHelper: com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray reverseSub(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$LinearIndicesIterator: java.lang.Object next()
com.kotlinnlp.simplednn.core.functionalities.outputevaluation.OutputEvaluationFunction: boolean invoke(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: float f(float)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: int getAttentionSize()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getV()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: java.util.Iterator iterator()
com.kotlinnlp.simplednn.core.functionalities.activations.Tanh: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: EmbeddingsMap(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters getParams()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken$Companion: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken byForm(java.lang.String)
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.utils.MutableBiMap: java.lang.Object forcePut(java.lang.Object,java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: void newEpoch()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$AdaGradConfig: UpdateMethodConfig$AdaGradConfig(float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.core.arrays.ActivableArray: void setActivationFunction(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray log10()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: java.util.List getAttentionAct$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters: int getAttentionSize()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getNullEmbedding()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getB()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: java.util.List getAttentionNetworksParams()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: java.util.List getInputErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray copy()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers getNextState$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: TPRLayerParameters(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.models.LinearParams$Companion: LinearParams$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray getColumn(int)
com.kotlinnlp.simplednn.core.neuralnetwork.preset.FeedforwardNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.FeedforwardNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod getDecayMethod()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer$Companion: NormLayer$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability: NegativeLogProbability(java.util.List,int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer: com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.helpers.Evaluator: com.kotlinnlp.simplednn.helpers.Statistics getStats()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers: java.util.List getInitHiddenErrors()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignPow(float)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getOutputMergeNetwork()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: RMSPropMethod(float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction: float f(float)
com.kotlinnlp.simplednn.core.functionalities.decaymethods.HyperbolicDecay: float getDecay()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray log10()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.RANNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: FOFE(float,int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: float getInput1Norm()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RMSPropConfig: UpdateMethodConfig$RMSPropConfig(float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: int getColumns()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sqrt(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray sqrt(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: float getInput2Norm()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.Softsign: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.LayerInterface: LayerInterface(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray zeros()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray exp()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getRecurrentUnit()
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE$Companion: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray access$buildMatrix(com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE$Companion,float,int)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormBackwardHelper: NormBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters getParams()
com.kotlinnlp.utils.Regex: kotlin.text.Regex getPunctuation()
com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentLayer: GatedRecurrentLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: int getHierarchySize()
com.kotlinnlp.simplednn.core.layers.models.LinearParams$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray fromColumns(java.util.List)
com.kotlinnlp.simplednn.core.layers.LayerType: LayerType(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.utils.Shuffler: Shuffler()
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters$Companion: AttentionMechanismLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper: GatedRecurrentRelevanceHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayer)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters$Companion: SubLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentForwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer getLayer()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.DeltaRNN: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.StackedLayers: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,com.kotlinnlp.simplednn.core.layers.StackedLayersParameters)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: float expectScalar()
com.kotlinnlp.simplednn.core.functionalities.activations.Softmax: Softmax()
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit: void assignParamsGradients$default(com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,java.lang.Object)
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$1: java.lang.Integer invoke()
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.utils.stats.MetricCounter: void setFalseNeg(int)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getSecondOrderMoments()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer: com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.LinearParams$$serializer: com.kotlinnlp.simplednn.core.layers.models.LinearParams deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: IndRNNLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters: com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters getAttention()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: int getNumOfHeads()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer getLayer()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod: AdaGradMethod(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$AdaGradConfig)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getBeta1()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$LinearIndicesIterator: void remove()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure: NesterovMomentumStructure(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentRelevanceHelper: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.helpers.Trainer: java.util.List getOptimizers()
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: int getDim2()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: java.lang.Number get(int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: LTMLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getCandidate()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: void backward(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getForgetGate()
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: void setDropoutMaskFull$advancedml_release(com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper: BackwardHelper(com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor)
com.kotlinnlp.simplednn.core.layers.Layer: com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType()
com.kotlinnlp.simplednn.core.layers.LayerType$Input: kotlin.enums.EnumEntries getEntries()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod: com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization getRegularization()
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer: com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getRightToLeftNetwork()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: float min()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sum(float)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubForwardHelper: void forward()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: java.util.List getInputErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer: com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters getParams()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.losses.LossesUtilsKt: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getErrorsByHingeLoss(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int,float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray fill(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer: com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.utils.Timer: Timer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getActivatedPrevOutput()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: boolean addAll(int,java.util.Collection)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray exp()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: java.util.List getInputErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignRoundInt(float)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.kotlinnlp.simplednn.core.layers.StatesWindow: com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers getNextState$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig: float getBeta1()
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: AttentionNetwork(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters: DeltaRNNLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessorsPool: com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor itemFactory(int)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessorsPool: FeedforwardNeuralProcessorsPool(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getS()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: int getRows()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: RecurrentNeuralProcessor(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: void accumulate(java.util.List,boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport: int hashCode()
com.kotlinnlp.simplednn.core.layers.LayerInterface: LayerInterface(int,java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlinx.serialization.internal.SerializationConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: float avg()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray log10()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters: ScaledDotAttentionLayerParameters(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters: RANLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$4: DenseNDArrayFactory$random$$inlined$rand$4()
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU$Companion: CeLU$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom: FixedRangeRandom(float,boolean,long)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$NesterovMomentumConfig: UpdateMethodConfig$NesterovMomentumConfig(float,float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getOutput$default(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel: java.util.List getOutputNetworks()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.Shape getShape()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: RANLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: boolean equals(java.lang.Object,float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: void set(int,java.lang.Number)
com.kotlinnlp.simplednn.core.arrays.ActivableArray: int getSize()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray pow(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: float max()
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability: float f()
com.kotlinnlp.utils.ItemsPool: com.kotlinnlp.utils.ItemsPool$IDItem getItem()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: EmbeddingsMap(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: void newBatch()
com.kotlinnlp.simplednn.core.layers.LayerInterface: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getAttentionMatrix()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters getParams()
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byValue: void clip(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray,float)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$3: java.lang.Object invoke()
com.kotlinnlp.utils.AbstractBiMap: void clear()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNParameters: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getMerge()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: boolean removeAll(java.util.Collection)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentForwardHelper: void forward(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.layers.LayerInterface: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getActivationFunction()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMForwardHelper: void forward()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: void set(int,int,java.lang.Number)
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: Softplus(float,float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors()
com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector: java.util.List getAll()
com.kotlinnlp.utils.BaseExtensionsKt: java.util.List foldUp(java.util.List)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: FeedforwardNeuralProcessor(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getInputGate()
com.kotlinnlp.simplednn.core.arrays.ActivableArray: void set_values(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray$Companion: com.kotlinnlp.simplednn.core.arrays.AugmentedArray invoke(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.helpers.Trainer: Trainer(java.lang.String,java.util.List,java.lang.Iterable,int,int,com.kotlinnlp.simplednn.helpers.Evaluator,com.kotlinnlp.utils.Shuffler,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineForwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer getLayer()
com.kotlinnlp.utils.AbstractBiMap: java.util.Set getEntries()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$$serializer: com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters: com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters getAttention()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessorWithContext: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: void backward(java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: HAN(int,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.layers.LayerInterface: int hashCode()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: FeedforwardNeuralProcessor(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,java.util.List,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getStdDev$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken$Companion: BERTModel$FuncToken$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: LernaEmbeddingsMap(int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,java.util.Map,kotlin.random.Random,kotlinx.serialization.internal.SerializationConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$AdaGradConfig: UpdateMethodConfig$AdaGradConfig(float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineForwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray sign()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer: com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: com.kotlinnlp.simplednn.core.layers.LayerType$Connection getRecurrentConnectionType()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatForwardHelper: void forward()
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid: float f(float)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: int getId()
com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow: com.kotlinnlp.simplednn.core.layers.Layer getNextState()
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer: com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters getParams()
com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.core.functionalities.regularization.L1Regularization: L1Regularization(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zerosLike()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure: UpdaterSupportStructure(int,com.kotlinnlp.simplednn.simplemath.ndarray.Shape,kotlinx.serialization.internal.SerializationConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getUnit()
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: float getAlpha()
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters$Companion: SimpleRecurrentLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters: int getNumOfHeads()
com.kotlinnlp.simplednn.core.functionalities.activations.ELU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumMethod: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.nesterovmomentum.NesterovMomentumStructure)
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: float f(float)
com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray get(java.lang.Integer)
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: java.lang.String toString()
com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper: com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors getErrors(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector: ParamsErrorsCollector()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.util.List propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float)
com.kotlinnlp.simplednn.core.arrays.ParamsArray$Companion: ParamsArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: int component1()
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: void clear()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer getLayer()
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: boolean isInputLevel(int)
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom: FixedRangeRandom()
com.kotlinnlp.simplednn.helpers.Counter: void setBestAccuracy(float)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: int indexOf(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float)
com.kotlinnlp.simplednn.helpers.Counter: int component1()
com.kotlinnlp.simplednn.core.layers.LayerInterface$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: java.util.List getOutputArrays()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray reverseSub(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer: com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer: com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: boolean isEmpty()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: java.lang.Number get(int,int)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray propagateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: void getRelevanceHelper$advancedml_release$annotations()
com.kotlinnlp.simplednn.core.layers.Layer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getRealOutput()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray copy()
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.StackedLayers: com.kotlinnlp.simplednn.core.layers.Layer getOutputLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getFeedforwardUnit()
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.arrays.ParamsArray: com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getOrSetSupportStructure()
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator$InjectedErrorStrength: kotlin.enums.EnumEntries getEntries()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig copy(com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: void backward(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByColumns(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayForwardHelper: void forward()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: BiRNNEncoder(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,boolean,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getColumn(int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer getLayer()
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel getModel()
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: Shape(int,int)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: float calcAlpha()
com.kotlinnlp.simplednn.core.layers.StackedLayers: com.kotlinnlp.simplednn.core.layers.Layer getInputLayer()
com.kotlinnlp.utils.AbstractBiMap: AbstractBiMap()
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters: AttentionNetworkParameters(int,int,boolean,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: void setActivatedPrevOutput(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFForwardHelper: void forward()
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.helpers.Counter: int component2()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float)
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: float df(float)
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: float dfOptimized(float)
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumBackwardHelper: SumBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer)
com.kotlinnlp.simplednn.core.layers.models.LinearParams: LinearParams(int,int,int,boolean,com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray,kotlinx.serialization.internal.SerializationConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator: float getC()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: java.util.List getRows()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: int getOutputHiddenSize()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters getParams()
com.kotlinnlp.simplednn.core.functionalities.losses.NegativeLogProbability: java.util.List df()
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters: AttentionMechanismLayerParameters(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getOutput(boolean)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN: DeepBiRNN(java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray prod(float)
com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer: void newBatch()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence: void add(com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers,boolean)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters: int getInputSize()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: float min()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNParameters: DeepBiRNNParameters(java.util.List)
com.kotlinnlp.simplednn.core.functionalities.activations.GeLU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$NesterovMomentumConfig: float getLearningRate()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ln()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: int getCount()
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getImportanceScore(boolean)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$LearningRateConfig: UpdateMethodConfig$LearningRateConfig(float,com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: com.kotlinnlp.simplednn.core.layers.LayerType$Input getInputType()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateMethod: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.learningrate.LearningRateStructure)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: java.util.Map getEmbeddings()
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator: float next()
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: boolean getPropagateToInput()
com.kotlinnlp.utils.AbstractBiMap$inverse$2$1: com.kotlinnlp.utils.MutableBiMap getInverse()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: boolean add(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: java.util.ListIterator listIterator()
com.kotlinnlp.simplednn.core.layers.LayerInterface$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getOutputActivation()
com.kotlinnlp.simplednn.helpers.Counter: int component3()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer: kotlin.random.Random access$getMaskRandom$cp()
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.BiaffineMerge: BiaffineMerge(int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(float)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSub(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray abs()
com.kotlinnlp.utils.AbstractBiMap: java.util.Set keySet()
com.kotlinnlp.simplednn.core.functionalities.gradientclipping.GradientClipping$byNorm: GradientClipping$byNorm(float,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardForwardHelper: FeedforwardForwardHelper(com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceForwardHelper: com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer getLayer()
com.kotlinnlp.utils.stats.MetricCounter: int getFalsePos()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$$serializer: com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray getColumn(int)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayBackwardHelper: HighwayBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel: PointerNetworkModel(int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap: LernaEmbeddingsMap(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.utils.AbstractBiMap: boolean containsValue(java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig: UpdateMethodConfig(com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters: int getInputSize2$advancedml_release()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: MultiBatchFeedforwardProcessor(java.util.List,java.util.List,boolean,int)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters: int getOutputHiddenSize()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure: ADAMStructure(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor: void backward(java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.helpers.Counter: int getEpoch()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: com.kotlinnlp.simplednn.simplemath.ndarray.Shape getInverse()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray normalize()
com.kotlinnlp.simplednn.core.arrays.ActivableArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray get_valuesNotActivated()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: int getId()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray abs()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: float sum()
com.kotlinnlp.simplednn.core.functionalities.losses.MSECalculator: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray calculateErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: void assignParamsGradients(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$$serializer: kotlinx.serialization.KSerializer[] typeParametersSerializers()
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: java.lang.Object propagateErrors(java.lang.Object,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANRelevanceHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet(java.lang.Object,float,kotlin.jvm.functions.Function0)
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.MultiBatchFeedforwardProcessor: MultiBatchFeedforwardProcessor(java.util.List,float,boolean,int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNForwardHelper: void forward()
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters: int getAttentionSize()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$ADAMConfig: UpdateMethodConfig$ADAMConfig()
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignPow(float)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters: java.util.List getAttentionNetworks()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: int argMaxIndex(java.util.Set)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: float safeLog(float,float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentRelevanceHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: void setInitHidden(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getB()
com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType: com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType[] values()
com.kotlinnlp.simplednn.helpers.Counter: int hashCode()
com.kotlinnlp.simplednn.helpers.Counter: void setExampleCount(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignSum(float)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(float)
com.kotlinnlp.utils.ItemsPool: java.util.List releaseAndGetItems(int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNForwardHelper: DeltaRNNForwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken[] values()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: int argMaxIndex(int)
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray1$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray pow(float)
com.kotlinnlp.utils.stats.MetricCounter: float getRecall()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignExp()
com.kotlinnlp.simplednn.core.functionalities.activations.CeLU: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.Layer: com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector getParamsErrorsCollector()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel: int getHiddenSize()
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: java.util.List getLayersConfiguration()
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: java.util.List splitV(int[])
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNForwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: int getInputSize()
com.kotlinnlp.utils.AbstractBiMap: java.util.Map access$getReverse$p(com.kotlinnlp.utils.AbstractBiMap)
com.kotlinnlp.simplednn.core.functionalities.activations.HardSigmoid: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionForwardHelper: com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer getLayer()
com.kotlinnlp.simplednn.core.layers.LayerFactory: com.kotlinnlp.simplednn.core.layers.Layer invoke(com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerInterface,com.kotlinnlp.simplednn.core.layers.LayerParameters,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$NoInputErrors getInputErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputArray1$advancedml_release()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,java.util.List,boolean,java.util.List,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.helpers.Counter: int getBatch()
com.kotlinnlp.simplednn.core.layers.LayerInterface: com.kotlinnlp.simplednn.core.layers.LayerType$Connection getConnectionType()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer: com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport: java.lang.String toString()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayer: BiaffineLayer(com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.losses.SoftmaxCrossEntropyCalculator: float calculateMeanLoss(java.util.List,java.util.List)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeSparseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$$serializer: com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters: SubLayerParameters(int)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer: HighwayLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer: java.util.List getAttentionArrays()
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom: long getSeed()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: DenseNDArray(org.jetbrains.kotlinx.multik.ndarray.data.NDArray)
com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer: void update()
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU$Companion: SeLU$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray abs()
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: boolean contains(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: FOFE(float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask getMask()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: int getLastIndex()
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: java.util.List getInputErrors()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrorsByDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getResetGate()
com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray exp()
com.kotlinnlp.simplednn.core.arrays.ParamsArray$Companion: kotlinx.serialization.KSerializer serializer()
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignZeroErrors()
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getWB()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: int argMaxIndex(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncodersPool: com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int)
com.kotlinnlp.simplednn.core.neuralnetwork.preset.HighwayNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.HighwayNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.Layer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray getT()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: void access$setColIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[])
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters: AttentionNetworkParameters(int,int,boolean,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem getInputErrors(boolean)
com.kotlinnlp.simplednn.core.layers.StackedLayers: java.util.List backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: float dfOptimized(float)
com.kotlinnlp.simplednn.core.layers.models.merge.affine.AffineLayerParameters: AffineLayerParameters(java.util.List,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer: java.util.List getInputArrays()
com.kotlinnlp.utils.ItemsPool$IDItem: int getId()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: RecurrentNeuralProcessor(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int)
com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh: void df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.Softsign: float dfOptimized(float)
com.kotlinnlp.utils.BaseExtensionsKt: java.util.Map notEmptyOr(java.util.Map,kotlin.jvm.functions.Function0)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask: int getSize()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray oneHotEncoder(int,int)
com.kotlinnlp.simplednn.deeplearning.attention.han.HAN: com.kotlinnlp.simplednn.deeplearning.attention.han.HANParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: MomentumMethod(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$MomentumConfig)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask: int[] getDim2()
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: boolean remove(java.lang.Object)
com.kotlinnlp.simplednn.helpers.Counter: float getBestAccuracy()
com.kotlinnlp.simplednn.core.functionalities.initializers.RandomInitializer: RandomInitializer(com.kotlinnlp.simplednn.core.functionalities.randomgenerators.RandomGenerator)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessorsPool: com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor itemFactory(int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentRelevanceHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters: BERTParameters(int,int,int,int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$LinearIterator: void remove()
com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer: GlorotInitializer()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: boolean remove(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure getSupportStructure$advancedml_release(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel getModel()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: PointerNetworkProcessor(com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayerParameters: SquaredDistanceLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.layers.Layer: void forward()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getPartitionGate()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getInitHiddenErrors()
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.decaymethods.DecayMethod: float update(float,int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray normalize2()
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgBackwardHelper: AvgBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray exp()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: java.util.List getParams()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: FeedforwardNeuralProcessor(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float,boolean,com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector,int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRange(int,int)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$Companion: kotlinx.serialization.KSerializer serializer(kotlinx.serialization.KSerializer)
com.kotlinnlp.simplednn.core.functionalities.activations.ReLU: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: void accumulate(com.kotlinnlp.simplednn.core.arrays.ParamsArray,com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray copy()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$3: DenseNDArrayFactory$random$$inlined$rand$3()
com.kotlinnlp.simplednn.core.functionalities.activations.Tanh: float df(float)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap getTokenTypeEmb()
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: BERT(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.utils.WordPieceTokenizer: java.util.List tokenize(kotlin.sequences.Sequence,int)
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.LernaEmbeddingsProcessor: java.util.List forward(java.util.List,java.util.Map,java.util.List)
com.kotlinnlp.simplednn.core.layers.LayerParameters: int getOutputSize()
com.kotlinnlp.simplednn.core.arrays.ActivableArray$Companion: ActivableArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator: float calculateMeanLoss(java.util.List,java.util.List)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer: com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray abs()
com.kotlinnlp.simplednn.core.layers.models.LinearParams: void write$Self(com.kotlinnlp.simplednn.core.layers.models.LinearParams,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getEmbNorm()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignExp()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: void backward(java.util.List)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrSet$default(com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,java.lang.Integer,float,com.kotlinnlp.simplednn.core.arrays.ParamsArray,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: LSTMLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignValues(float)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(float)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: int[] argSorted$default(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig$Companion: BiRNNConfig$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.arrays.ActivableArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray get_values()
com.kotlinnlp.simplednn.core.layers.LayerParameters: kotlin.Lazy access$get$cachedSerializer$delegate$cp()
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters$Companion: StackedLayersParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.MergeConfiguration: MergeConfiguration(com.kotlinnlp.simplednn.core.layers.LayerType$Connection)
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatForwardHelper: ConcatForwardHelper(com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatLayer)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,float)
com.kotlinnlp.simplednn.core.layers.LayerInterface: java.util.List component1()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: int getRows()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: boolean getPropagateToInput()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator: java.util.List calculateErrors(java.util.List,java.util.List)
com.kotlinnlp.simplednn.core.layers.StackedLayers: StackedLayers(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters,float)
com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer: void initialize(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.utils.BaseExtensionsKt: java.util.List toByteList$default(java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
com.kotlinnlp.simplednn.helpers.Counter: Counter(int,int,int,float,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTLayer: void backward(java.util.List)
com.kotlinnlp.simplednn.utils.scheduling.BatchScheduling: void newBatch()
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: Softplus()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: java.util.ListIterator listIterator()
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: void f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getFeedforwardUnit()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: void setUpdaterSupportStructure(com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType)
com.kotlinnlp.utils.DictionarySet: java.lang.Object getElement(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float)
com.kotlinnlp.simplednn.deeplearning.transformers.BERT: BERT(com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel,boolean,boolean,boolean,boolean,int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: int[] getColIndices()
com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper: void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$LinearIterator: boolean hasNext()
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getInput()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignExp()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: boolean isOneHotEncoder()
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getErrors()
com.kotlinnlp.utils.stats.MetricCounter: float getF1Score()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: int getOutputSize()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: java.util.List getInputErrors(boolean)
com.kotlinnlp.utils.AbstractBiMap: com.kotlinnlp.utils.BiMap getInverse()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignExp()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray pow(float)
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: LeakyRELU()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: float getStepSize()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence: void reset()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: java.util.List getRows()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(float)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: ScaledDotAttentionLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters,float)
com.kotlinnlp.simplednn.core.layers.LayerType$Property: com.kotlinnlp.simplednn.core.layers.LayerType$Property[] values()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(float)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: ParamsArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.arrays.ParamsArray$ErrorsType,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.arrays.Norm1Array: int getLength()
com.kotlinnlp.simplednn.core.functionalities.activations.Softmax: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros()
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getCandidate()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.losses.AugmentedMSECalculator: AugmentedMSECalculator()
com.kotlinnlp.simplednn.core.layers.StackedLayers: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List)
com.kotlinnlp.simplednn.core.functionalities.activations.ReLU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor$DefaultImpls: java.lang.Object getInputErrors$default(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getForgetGate()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: int lastIndexOf(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getTransformGate()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory$random$$inlined$rand$2: java.lang.Object invoke()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float)
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer: com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(float)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN$Companion: DeepBiRNN$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer: GlorotInitializer(float,boolean,long,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$DefaultImpls: void f(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters: RANLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray random(com.kotlinnlp.simplednn.simplemath.ndarray.Shape,float,float)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray sum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.simplednn.core.layers.models.merge.mergeconfig.VariableOutputMergeConfig: int getOutputSize()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.core.layers.LayerType$Connection: com.kotlinnlp.simplednn.core.layers.LayerType$Connection[] values()
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayerParameters: AvgLayerParameters(int,int)
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.utils.Shuffler: Shuffler(boolean,long,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters: AttentionMechanismLayerParameters(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.lstm.LSTMLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor$InputErrors propagateErrors(java.util.List,com.kotlinnlp.simplednn.core.optimizer.ParamsOptimizer,boolean)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel: BERTModel(int,int,int,int,int,com.kotlinnlp.utils.DictionarySet,com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls: boolean isMatrix(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray zerosLike()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray zeros(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.Softplus: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentForwardHelper: void forward()
com.kotlinnlp.simplednn.core.neuralprocessor.batchfeedforward.BatchFeedforwardProcessor: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,float)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adagrad.AdaGradMethod: float getLearningRate()
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionNetwork: void backward(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer: void setX(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters: int getNInputs()
com.kotlinnlp.simplednn.core.optimizer.ParamsErrorsAccumulator: ParamsErrorsAccumulator()
com.kotlinnlp.simplednn.utils.scheduling.ExampleScheduling: void newExample()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: int hashCode()
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.arrays.ActivableArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getValuesNotActivated()
com.kotlinnlp.simplednn.core.layers.LayerParameters: void initialize()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: float[] toFloatArray()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray$Companion: DenseNDArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.arrays.ActivableArray$Companion: com.kotlinnlp.simplednn.core.arrays.ActivableArray invoke(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams: RecurrentLinearParams(int,int,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.LayerInterface: void write$Self(com.kotlinnlp.simplednn.core.layers.LayerInterface,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworksPool: com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray assignDiv(float)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: java.util.List getInputsErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray prod(float)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.helpers.Evaluator: Evaluator(java.lang.Iterable,boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray prod(float,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction$DefaultImpls: void dfOptimized(com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttention: int getAttentionOutputSize()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.DeltaRNN: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.DeltaRNN,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer getLayer()
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer: FeedforwardLayer(com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: BiRNNEncoder(com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN,float,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardForwardHelper: void forward()
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceForwardHelper: void forward()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayer: void setDropoutMasks$advancedml_release(java.util.List)
com.kotlinnlp.simplednn.core.functionalities.activations.Tanh: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray df(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer: com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormLayer: void setStdDev$advancedml_release(float)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getInputUnit()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray abs()
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper: void setInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getBeta2()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: float sum()
com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,com.kotlinnlp.simplednn.core.embeddings.LernaEmbeddingsMap)
com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.concatff.ConcatFFLayer getLayer()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.NNSequence: NNSequence(com.kotlinnlp.simplednn.core.layers.StackedLayersParameters)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignProd(float)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig: UpdateMethodConfig(com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors: boolean equals(java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.BackwardHelper: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayer: void getRelevanceHelper$advancedml_release$annotations()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(float)
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer: ProductLayer(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.arrays.AugmentedArray,com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayerParameters)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getS()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray abs()
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubLayerParameters: java.util.List getWeightsList()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: boolean contains(java.lang.Object)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMStructure: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getSecondOrderMoments()
com.kotlinnlp.simplednn.core.layers.models.merge.sub.SubBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.helpers.Trainer: void newEpoch()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
com.kotlinnlp.simplednn.core.arrays.ActivableArray: void activate()
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayerParameters: FeedforwardLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$$serializer: kotlinx.serialization.KSerializer[] childSerializers()
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNForwardHelper: IndRNNForwardHelper(com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTParameters: int getAttentionOutputSize()
com.kotlinnlp.utils.DictionarySet: boolean contains(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.Layer: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray setErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN$Companion: com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN byReduceConcat$default(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN$Companion,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray div(float)
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormBackwardHelper: BatchNormBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer)
com.kotlinnlp.utils.AbstractBiMap: java.util.Set getValues()
com.kotlinnlp.simplednn.helpers.Counter: void setEpoch(int)
com.kotlinnlp.utils.Shuffler: Shuffler(boolean,long)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: int getColumns()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray$DefaultImpls: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignRoundInt$default(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float,int,java.lang.Object)
com.kotlinnlp.simplednn.core.arrays.ParamsArray: void write$Self(com.kotlinnlp.simplednn.core.arrays.ParamsArray,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken: java.lang.String getForm()
com.kotlinnlp.simplednn.core.layers.helpers.RelevanceUtils: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getRelevancePartition1(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,int)
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkModel: int getVectorSize()
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor: java.lang.Object forward(java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig copy$default(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,java.lang.Object)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray roundInt(float)
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray exp(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: java.lang.String toString()
com.kotlinnlp.simplednn.core.functionalities.activations.Sigmoid: float f(float)
com.kotlinnlp.simplednn.core.layers.models.recurrent.indrnn.IndRNNLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters getLeftToRightNetwork()
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumForwardHelper: com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignErrorsByProd(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayerParameters: int getNInputs()
com.kotlinnlp.simplednn.core.functionalities.activations.LeakyRELU: float getSlope()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray prod(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateRelevance(int,int,com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean)
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray f(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetwork: java.util.List backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: java.lang.Float get(int)
com.kotlinnlp.simplednn.core.functionalities.activations.Softshrink: Softshrink(float)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: float norm()
com.kotlinnlp.simplednn.deeplearning.attention.pointernetwork.PointerNetworkProcessor: void setInputSequence$advancedml_release(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport: com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport copy(int)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters: com.kotlinnlp.simplednn.core.layers.models.LinearParams getUnit()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel: MultiTaskNetworkModel(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,java.util.List,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.arrays.DistributionArray: void assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: com.kotlinnlp.simplednn.deeplearning.birnn.BiRNN getNetwork()
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: java.util.List getParamsErrors(boolean)
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.helpers.Statistics: Statistics()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray normalize2()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: int hashCode()
com.kotlinnlp.simplednn.core.optimizer.ScheduledUpdater: void newBatch()
com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.simple.FeedforwardRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: java.util.List getParamsPerLayer()
com.kotlinnlp.simplednn.core.neuralprocessor.embeddingsprocessor.EmbeddingsProcessor: java.util.List forward(java.util.List)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem remove(int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.simple.SimpleRecurrentLayerParameters: SimpleRecurrentLayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray ones(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.simplemath.SimpleMathKt: java.util.List copy(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams: RecurrentLinearParams(int,int,boolean)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getHiddenActivation()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: kotlinx.serialization.KSerializer[] access$get$childSerializers$cp()
com.kotlinnlp.simplednn.core.arrays.ParamsArray$$serializer: java.lang.Object deserialize(kotlinx.serialization.encoding.Decoder)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTTrainer: kotlin.random.Random access$getFormRandom$cp()
com.kotlinnlp.simplednn.core.layers.models.merge.concat.ConcatBackwardHelper: void execBackward(boolean)
com.kotlinnlp.simplednn.core.functionalities.activations.GeLU: float f(float)
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayerParameters: com.kotlinnlp.simplednn.core.arrays.ParamsArray getContextVector()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: ADAMMethod(float,float,float,float,com.kotlinnlp.simplednn.core.functionalities.regularization.ParamsRegularization)
com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper: void addRecurrentContribution(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getValues()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.ArrayList,java.util.List,boolean)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultitaskNetworksPool: com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel getModel()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDot(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayerParameters: HighwayLayerParameters(int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,boolean)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction component2()
com.kotlinnlp.simplednn.core.functionalities.updatemethods.momentum.MomentumMethod: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeGenericErrors(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.simplednn.core.layers.StackedLayersParameters: boolean getSparseInput()
com.kotlinnlp.simplednn.core.layers.models.feedforward.squareddistance.SquaredDistanceLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: void backward(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.randomgenerators.FixedRangeRandom: FixedRangeRandom(float,boolean,long,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.arrays.AugmentedArray$Companion: com.kotlinnlp.simplednn.core.arrays.AugmentedArray zeros(int)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float)
com.kotlinnlp.simplednn.deeplearning.attention.multihead.MultiHeadAttentionParameters: int getInputSize()
com.kotlinnlp.simplednn.core.layers.models.feedforward.norm.NormBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionForwardHelper: AttentionForwardHelper(com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: int getSize()
com.kotlinnlp.simplednn.core.neuralnetwork.preset.SimpleRecurrentNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke(int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignSum(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float)
com.kotlinnlp.simplednn.core.functionalities.activations.HardTanh: float df(float)
com.kotlinnlp.utils.AbstractBiMap: java.lang.Object forcePut(java.lang.Object,java.lang.Object)
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNEncoder: boolean getPropagateToInput()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray emptyArray(com.kotlinnlp.simplednn.simplemath.ndarray.Shape)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: void backwardLastOutput(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNNEncoder: DeepBiRNNEncoder(com.kotlinnlp.simplednn.deeplearning.birnn.deepbirnn.DeepBiRNN,float,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape$Companion: Shape$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$$serializer: void serialize(kotlinx.serialization.encoding.Encoder,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayer: java.util.List getInputErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: boolean equals(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: boolean retainAll(java.util.Collection)
com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator$DefaultImpls: float calculateMeanLoss(com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator,java.util.List,java.util.List)
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.core.layers.helpers.RelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.helpers.ParamsErrorsCollector: com.kotlinnlp.simplednn.core.arrays.ParamsArray$Errors getErrors(com.kotlinnlp.simplednn.core.arrays.ParamsArray)
com.kotlinnlp.simplednn.core.functionalities.activations.SoftmaxBase: SoftmaxBase()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sub(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.layers.LayerFactory: com.kotlinnlp.simplednn.core.layers.Layer invoke(java.util.List,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,com.kotlinnlp.simplednn.core.layers.LayerParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,float,com.kotlinnlp.simplednn.core.layers.models.recurrent.LayersWindow)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: int indexOf(java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.sum.SumLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayFactory: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray oneHotEncoder(int,int)
com.kotlinnlp.utils.ItemsPool: ItemsPool()
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionForwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultitaskNetworksPool: com.kotlinnlp.utils.ItemsPool$IDItem itemFactory(int)
com.kotlinnlp.simplednn.core.layers.LayerParameters: LayerParameters(int,int,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethod: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdaterSupportStructure)
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray$Companion: SparseNDArray$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignPow(float)
com.kotlinnlp.simplednn.core.neuralprocessor.feedforward.FeedforwardNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray calculateInputRelevance(com.kotlinnlp.simplednn.core.arrays.DistributionArray,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.Shape: int hashCode()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray pow(float)
com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworksPool: AttentionNetworksPool(com.kotlinnlp.simplednn.deeplearning.attention.attentionnetwork.AttentionNetworkParameters,com.kotlinnlp.simplednn.core.layers.LayerType$Input,float,boolean)
com.kotlinnlp.simplednn.core.layers.models.merge.biaffine.BiaffineForwardHelper: void forward()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignValues(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,com.kotlinnlp.simplednn.simplemath.ndarray.NDArrayMask)
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionForwardHelper: com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer getLayer()
com.kotlinnlp.simplednn.core.arrays.Norm1Array: Norm1Array(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.Layer: void addInputRelevance(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.core.layers.models.LinearParams$Companion: kotlinx.serialization.KSerializer serializer()
com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormLayer: com.kotlinnlp.simplednn.core.layers.models.feedforward.batchnorm.BatchNormBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.layers.models.autoassociative.NewRecirculationLayerParameters$Companion: NewRecirculationLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.neuralnetwork.preset.LTMNeuralNetwork: com.kotlinnlp.simplednn.core.layers.StackedLayersParameters invoke$default(com.kotlinnlp.simplednn.core.neuralnetwork.preset.LTMNeuralNetwork,int,com.kotlinnlp.simplednn.core.layers.LayerType$Input,int,int,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,com.kotlinnlp.simplednn.core.functionalities.initializers.Initializer,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.StackedLayers: int getCurLayerIndex()
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward(java.util.List,boolean,java.util.List,boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray sqrt()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: void fromVector(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: void set(int,int,java.lang.Number)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: void set(int,int,java.lang.Number)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropMethod: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray optimizeDenseErrors(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.core.functionalities.updatemethods.rmsprop.RMSPropStructure)
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionForwardHelper: void forward()
com.kotlinnlp.simplednn.core.functionalities.activations.ScalarActivationFunction: float df(float)
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray get(java.lang.Object,float)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayer: com.kotlinnlp.simplednn.core.layers.helpers.ForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float)
com.kotlinnlp.simplednn.deeplearning.sequenceencoder.FOFE: boolean getPropagateToInput()
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchySequence: boolean add(java.lang.Object)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: boolean getPropagateToInput()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray concatH(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray)
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.utils.ShuffledIndices: int access$getSize$p(com.kotlinnlp.utils.ShuffledIndices)
com.kotlinnlp.simplednn.core.arrays.Norm1Array: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getValues()
com.kotlinnlp.simplednn.core.layers.models.recurrent.gru.GRULayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLayerUnit getCandidate()
com.kotlinnlp.simplednn.helpers.Trainer: void trainEpoch()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: void set(int,int)
com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.ltm.LTMLayer getLayer()
com.kotlinnlp.simplednn.core.functionalities.initializers.GlorotInitializer$Companion: float getGain(com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$AdaGradConfig: float getLearningRate()
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.GatedRecurrentRelevanceHelper getRelevanceHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray roundInt(float)
com.kotlinnlp.simplednn.core.neuralprocessor.ChainProcessor: ChainProcessor(com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,java.util.List,com.kotlinnlp.simplednn.core.neuralprocessor.NeuralProcessor,int)
com.kotlinnlp.simplednn.core.layers.RecurrentStackedLayers: void setInitHidden(java.util.List)
com.kotlinnlp.simplednn.core.layers.models.feedforward.highway.HighwayLayer: com.kotlinnlp.simplednn.core.layers.helpers.BackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray log10()
com.kotlinnlp.simplednn.core.embeddings.EmbeddingsMap: com.kotlinnlp.simplednn.core.arrays.ParamsArray getOrNull(java.lang.Object)
com.kotlinnlp.simplednn.core.arrays.ActivableArray: com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction getActivationFunction()
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer: java.util.List getInputArrays()
com.kotlinnlp.simplednn.core.layers.models.attention.AttentionBackwardHelper: AttentionBackwardHelper(com.kotlinnlp.simplednn.core.layers.models.attention.AttentionLayer)
com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken: com.kotlinnlp.simplednn.deeplearning.transformers.BERTModel$FuncToken valueOf(java.lang.String)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray assignSumByRows(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.activations.SeLU: void dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray,com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator$DefaultImpls: java.util.List calculateErrors(com.kotlinnlp.simplednn.core.functionalities.losses.LossCalculator,java.util.List,java.util.List)
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray getT()
com.kotlinnlp.simplednn.helpers.Statistics: float getAccuracy()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters: com.kotlinnlp.simplednn.core.layers.models.recurrent.RecurrentLinearParams getInputGate()
com.kotlinnlp.simplednn.deeplearning.birnn.BiRNNConfig: BiRNNConfig(com.kotlinnlp.simplednn.core.layers.LayerType$Connection,com.kotlinnlp.simplednn.core.functionalities.activations.ActivationFunction,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNLayer: com.kotlinnlp.simplednn.core.layers.models.recurrent.cfn.CFNForwardHelper getForwardHelper$advancedml_release()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getT()
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray$LinearIndicesIterator: boolean hasNext()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray getRange(int,int)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignProd(com.kotlinnlp.simplednn.simplemath.ndarray.NDArray,float)
com.kotlinnlp.utils.ItemsPool: int getUsage()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANRelevanceHelper: void propagateRelevanceToGates(com.kotlinnlp.simplednn.core.layers.LayerParameters)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.UpdateMethodConfig$RMSPropConfig: float getLearningRate()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayerParameters: java.util.List getBiasesList()
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: float max()
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayerParameters$Companion: DistanceLayerParameters$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyGroup: boolean contains(com.kotlinnlp.simplednn.deeplearning.attention.han.HierarchyItem)
com.kotlinnlp.simplednn.core.functionalities.updatemethods.adam.ADAMMethod: ADAMMethod()
com.kotlinnlp.simplednn.core.layers.models.attention.attentionmechanism.AttentionMechanismLayer: com.kotlinnlp.simplednn.core.layers.LayerParameters getParams()
com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray: void access$setRowIndices$p(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray,int[])
com.kotlinnlp.simplednn.core.layers.models.merge.product.ProductLayer: com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams()
com.kotlinnlp.simplednn.core.layers.models.recurrent.ran.RANLayer: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getCandidate()
com.kotlinnlp.simplednn.core.layers.models.attention.scaleddot.ScaledDotAttentionBackwardHelper: com.kotlinnlp.simplednn.core.layers.Layer getLayer()
com.kotlinnlp.simplednn.core.functionalities.activations.GeLU: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray dfOptimized(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray forward$default(com.kotlinnlp.simplednn.core.neuralprocessor.recurrent.RecurrentNeuralProcessor,java.util.List,java.util.List,boolean,int,java.lang.Object)
com.kotlinnlp.simplednn.core.layers.models.merge.distance.DistanceLayer: com.kotlinnlp.simplednn.core.layers.models.merge.MergeLayerParameters getParams()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig: void write$Self(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkConfig,kotlinx.serialization.encoding.CompositeEncoder,kotlinx.serialization.descriptors.SerialDescriptor)
com.kotlinnlp.simplednn.core.layers.models.recurrent.deltarnn.DeltaRNNRelevanceSupport: com.kotlinnlp.simplednn.core.arrays.AugmentedArray getD1Input()
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: java.lang.Object getInputErrors(boolean)
com.kotlinnlp.simplednn.simplemath.ndarray.sparsebinary.SparseBinaryNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.NDArray assignDiv(float)
com.kotlinnlp.simplednn.simplemath.ndarray.NDArray: com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray div(com.kotlinnlp.simplednn.simplemath.ndarray.sparse.SparseNDArray)
com.kotlinnlp.simplednn.core.layers.models.merge.cosinesimilarity.CosineLayerParameters: CosineLayerParameters(int)
com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetwork: MultiTaskNetwork(com.kotlinnlp.simplednn.deeplearning.multitasknetwork.MultiTaskNetworkModel,float,float,boolean,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRBackwardHelper: com.kotlinnlp.simplednn.core.layers.models.recurrent.tpr.TPRLayer getLayer()
com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray: com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray concatV(com.kotlinnlp.simplednn.simplemath.ndarray.dense.DenseNDArray)
com.kotlinnlp.simplednn.deeplearning.attention.han.HANEncoder: int getId()
com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgLayer: com.kotlinnlp.simplednn.core.layers.models.merge.avg.AvgBackwardHelper getBackwardHelper$advancedml_release()
com.kotlinnlp.simplednn.core.arrays.ParamsArray$$serializer: kotlinx.serialization.descriptors.SerialDescriptor getDescriptor()
